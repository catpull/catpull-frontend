/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { WavaxMock } from "./WavaxMock";

export class WavaxMockFactory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(overrides?: Overrides): Promise<WavaxMock> {
    return super.deploy(overrides || {}) as Promise<WavaxMock>;
  }
  getDeployTransaction(overrides?: Overrides): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): WavaxMock {
    return super.attach(address) as WavaxMock;
  }
  connect(signer: Signer): WavaxMockFactory {
    return super.connect(signer) as WavaxMockFactory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): WavaxMock {
    return new Contract(address, _abi, signerOrProvider) as WavaxMock;
  }
}

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "deposit",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mintTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60a06040523480156200001157600080fd5b50604051806040016040528060058152602001640ae82ac82b60db1b8152506040518060400160405280600c81526020016b0aee4c2e0e0cac84082ecc2f60a31b81525060128282816003908051906020019062000071929190620000bb565b50805162000087906004906020840190620000bb565b50505060f81b7fff0000000000000000000000000000000000000000000000000000000000000016608052506200019e9050565b828054620000c99062000161565b90600052602060002090601f016020900481019282620000ed576000855562000138565b82601f106200010857805160ff191683800117855562000138565b8280016001018555821562000138579182015b82811115620001385782518255916020019190600101906200011b565b50620001469291506200014a565b5090565b5b808211156200014657600081556001016200014b565b600181811c908216806200017657607f821691505b602082108114156200019857634e487b7160e01b600052602260045260246000fd5b50919050565b60805160f81c610cd3620001bd60003960006101bd0152610cd36000f3fe6080604052600436106100e85760003560e01c8063449a52f81161008a578063a457c2d711610059578063a457c2d714610292578063a9059cbb146102b2578063d0e30db0146102d2578063dd62ed3e146102da57600080fd5b8063449a52f81461020757806370a082311461022757806395d89b411461025d578063a0712d681461027257600080fd5b806323b872dd116100c657806323b872dd146101675780632e1a7d4d14610187578063313ce567146101a957806339509351146101e757600080fd5b806306fdde03146100ed578063095ea7b31461011857806318160ddd14610148575b600080fd5b3480156100f957600080fd5b50610102610320565b60405161010f9190610bca565b60405180910390f35b34801561012457600080fd5b50610138610133366004610b89565b6103b2565b604051901515815260200161010f565b34801561015457600080fd5b506002545b60405190815260200161010f565b34801561017357600080fd5b50610138610182366004610b4e565b6103c8565b34801561019357600080fd5b506101a76101a2366004610bb2565b610477565b005b3480156101b557600080fd5b5060405160ff7f000000000000000000000000000000000000000000000000000000000000000016815260200161010f565b3480156101f357600080fd5b50610138610202366004610b89565b6104b2565b34801561021357600080fd5b506101a7610222366004610b89565b6104ee565b34801561023357600080fd5b50610159610242366004610afb565b6001600160a01b031660009081526020819052604090205490565b34801561026957600080fd5b506101026104f8565b34801561027e57600080fd5b506101a761028d366004610bb2565b610507565b34801561029e57600080fd5b506101386102ad366004610b89565b610514565b3480156102be57600080fd5b506101386102cd366004610b89565b6105ad565b6101a76105ba565b3480156102e657600080fd5b506101596102f5366004610b1c565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b60606003805461032f90610c4c565b80601f016020809104026020016040519081016040528092919081815260200182805461035b90610c4c565b80156103a85780601f1061037d576101008083540402835291602001916103a8565b820191906000526020600020905b81548152906001019060200180831161038b57829003601f168201915b5050505050905090565b60006103bf3384846105c6565b50600192915050565b60006103d58484846106eb565b6001600160a01b03841660009081526001602090815260408083203384529091529020548281101561045f5760405162461bcd60e51b815260206004820152602860248201527f45524332303a207472616e7366657220616d6f756e74206578636565647320616044820152676c6c6f77616e636560c01b60648201526084015b60405180910390fd5b61046c85338584036105c6565b506001949350505050565b61048133826108ba565b604051339082156108fc029083906000818181858888f193505050501580156104ae573d6000803e3d6000fd5b5050565b3360008181526001602090815260408083206001600160a01b038716845290915281205490916103bf9185906104e9908690610c1d565b6105c6565b6104ae8282610a00565b60606004805461032f90610c4c565b6105113382610a00565b50565b3360009081526001602090815260408083206001600160a01b0386168452909152812054828110156105965760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b6064820152608401610456565b6105a333858584036105c6565b5060019392505050565b60006103bf3384846106eb565b6105c43334610a00565b565b6001600160a01b0383166106285760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610456565b6001600160a01b0382166106895760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610456565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b6001600160a01b03831661074f5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610456565b6001600160a01b0382166107b15760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610456565b6001600160a01b038316600090815260208190526040902054818110156108295760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610456565b6001600160a01b03808516600090815260208190526040808220858503905591851681529081208054849290610860908490610c1d565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516108ac91815260200190565b60405180910390a350505050565b6001600160a01b03821661091a5760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b6064820152608401610456565b6001600160a01b0382166000908152602081905260409020548181101561098e5760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b6064820152608401610456565b6001600160a01b03831660009081526020819052604081208383039055600280548492906109bd908490610c35565b90915550506040518281526000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906020016106de565b6001600160a01b038216610a565760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610456565b8060026000828254610a689190610c1d565b90915550506001600160a01b03821660009081526020819052604081208054839290610a95908490610c1d565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b80356001600160a01b0381168114610af657600080fd5b919050565b600060208284031215610b0c578081fd5b610b1582610adf565b9392505050565b60008060408385031215610b2e578081fd5b610b3783610adf565b9150610b4560208401610adf565b90509250929050565b600080600060608486031215610b62578081fd5b610b6b84610adf565b9250610b7960208501610adf565b9150604084013590509250925092565b60008060408385031215610b9b578182fd5b610ba483610adf565b946020939093013593505050565b600060208284031215610bc3578081fd5b5035919050565b6000602080835283518082850152825b81811015610bf657858101830151858201604001528201610bda565b81811115610c075783604083870101525b50601f01601f1916929092016040019392505050565b60008219821115610c3057610c30610c87565b500190565b600082821015610c4757610c47610c87565b500390565b600181811c90821680610c6057607f821691505b60208210811415610c8157634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fdfea264697066735822122097a240ac26886e06b7305ad7eec25a4022522f0522ab09abf41652571a9d511f64736f6c63430008040033";
