/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { UniswapRouterMock } from "./UniswapRouterMock";

export class UniswapRouterMockFactory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    _wbtc: string,
    _usdc: string,
    wpp: string,
    epp: string,
    overrides?: Overrides
  ): Promise<UniswapRouterMock> {
    return super.deploy(
      _wbtc,
      _usdc,
      wpp,
      epp,
      overrides || {}
    ) as Promise<UniswapRouterMock>;
  }
  getDeployTransaction(
    _wbtc: string,
    _usdc: string,
    wpp: string,
    epp: string,
    overrides?: Overrides
  ): TransactionRequest {
    return super.getDeployTransaction(_wbtc, _usdc, wpp, epp, overrides || {});
  }
  attach(address: string): UniswapRouterMock {
    return super.attach(address) as UniswapRouterMock;
  }
  connect(signer: Signer): UniswapRouterMockFactory {
    return super.connect(signer) as UniswapRouterMockFactory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): UniswapRouterMock {
    return new Contract(address, _abi, signerOrProvider) as UniswapRouterMock;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "contract ERC20Mock",
        name: "_wbtc",
        type: "address",
      },
      {
        internalType: "contract ERC20Mock",
        name: "_usdc",
        type: "address",
      },
      {
        internalType: "contract AggregatorV3Interface",
        name: "wpp",
        type: "address",
      },
      {
        internalType: "contract AggregatorV3Interface",
        name: "epp",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "ETHPriceProvider",
    outputs: [
      {
        internalType: "contract AggregatorV3Interface",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "USDC",
    outputs: [
      {
        internalType: "contract ERC20Mock",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "WBTC",
    outputs: [
      {
        internalType: "contract ERC20Mock",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "WBTCPriceProvider",
    outputs: [
      {
        internalType: "contract AggregatorV3Interface",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
      {
        internalType: "address[]",
        name: "path",
        type: "address[]",
      },
    ],
    name: "getAmountsIn",
    outputs: [
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
      {
        internalType: "address[]",
        name: "path",
        type: "address[]",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "swapETHForExactTokens",
    outputs: [
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
];

const _bytecode =
  "0x61010060405234801561001157600080fd5b50604051610c66380380610c668339810160408190526100309161005f565b6001600160601b0319606094851b811660805292841b831660a05290831b821660c05290911b1660e0526100d5565b60008060008060808587031215610074578384fd5b845161007f816100bd565b6020860151909450610090816100bd565b60408601519093506100a1816100bd565b60608601519092506100b2816100bd565b939692955090935050565b6001600160a01b03811681146100d257600080fd5b50565b60805160601c60a05160601c60c05160601c60e05160601c610b1d610149600039600081816101560152818161022b015261035601526000818160a201526103ef015260008181610122015281816101ba015261057a01526000818160ee015281816102e501526105ea0152610b1d6000f3fe6080604052600436106100555760003560e01c80631f00ca741461005a5780633ad2ee53146100905780634dede3de146100dc57806389a3027114610110578063dda95a5714610144578063fb3bdb4114610178575b600080fd5b34801561006657600080fd5b5061007a610075366004610903565b61018b565b6040516100879190610a00565b60405180910390f35b34801561009c57600080fd5b506100c47f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b039091168152602001610087565b3480156100e857600080fd5b506100c47f000000000000000000000000000000000000000000000000000000000000000081565b34801561011c57600080fd5b506100c47f000000000000000000000000000000000000000000000000000000000000000081565b34801561015057600080fd5b506100c47f000000000000000000000000000000000000000000000000000000000000000081565b61007a61018636600461094d565b610556565b6060600282146101b65760405162461bcd60e51b81526004016101ad90610a44565b60405180910390fd5b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168484600181811061020357634e487b7160e01b600052603260045260246000fd5b905060200201602081019061021891906108e2565b6001600160a01b031614156102e35760007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561028257600080fd5b505afa158015610296573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102ba91906109b1565b50505091505080866305f5e1006102d19190610a9b565b6102db9190610a7b565b9150506104bc565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168484600181811061032e57634e487b7160e01b600052603260045260246000fd5b905060200201602081019061034391906108e2565b6001600160a01b031614156104a45760007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b1580156103ad57600080fd5b505afa1580156103c1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103e591906109b1565b50505091505060007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561044657600080fd5b505afa15801561045a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061047e91906109b1565b5050509150508181886104919190610a9b565b61049b9190610a7b565b925050506104bc565b60405162461bcd60e51b81526004016101ad90610a44565b604080516002808252606082018352909160208301908036833701905050915060646104e9826067610a9b565b6104f39190610a7b565b8260008151811061051457634e487b7160e01b600052603260045260246000fd5b602002602001018181525050848260018151811061054257634e487b7160e01b600052603260045260246000fd5b602002602001018181525050509392505050565b6060600284146105785760405162461bcd60e51b81526004016101ad90610a44565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316858560018181106105c357634e487b7160e01b600052603260045260246000fd5b90506020020160208101906105d891906108e2565b6001600160a01b0316148061065357507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168585600181811061063357634e487b7160e01b600052603260045260246000fd5b905060200201602081019061064891906108e2565b6001600160a01b0316145b61069f5760405162461bcd60e51b815260206004820152601c60248201527f556e69737761704d6f636b3a20746f6f20736d616c6c2076616c75650000000060448201526064016101ad565b6106aa86868661018b565b9050806000815181106106cd57634e487b7160e01b600052603260045260246000fd5b60200260200101513410156107245760405162461bcd60e51b815260206004820152601c60248201527f556e69737761704d6f636b3a20746f6f20736d616c6c2076616c75650000000060448201526064016101ad565b8060008151811061074557634e487b7160e01b600052603260045260246000fd5b60200260200101513411156107bf57336001600160a01b03166108fc8260008151811061078257634e487b7160e01b600052603260045260246000fd5b6020026020010151346107959190610aba565b6040518115909202916000818181858888f193505050501580156107bd573d6000803e3d6000fd5b505b848460018181106107e057634e487b7160e01b600052603260045260246000fd5b90506020020160208101906107f591906108e2565b6040516308934a5f60e31b81526001600160a01b03858116600483015260248201899052919091169063449a52f890604401600060405180830381600087803b15801561084157600080fd5b505af1158015610855573d6000803e3d6000fd5b5050505095945050505050565b80356001600160a01b038116811461087957600080fd5b919050565b60008083601f84011261088f578182fd5b50813567ffffffffffffffff8111156108a6578182fd5b6020830191508360208260051b85010111156108c157600080fd5b9250929050565b805169ffffffffffffffffffff8116811461087957600080fd5b6000602082840312156108f3578081fd5b6108fc82610862565b9392505050565b600080600060408486031215610917578182fd5b83359250602084013567ffffffffffffffff811115610934578283fd5b6109408682870161087e565b9497909650939450505050565b600080600080600060808688031215610964578081fd5b85359450602086013567ffffffffffffffff811115610981578182fd5b61098d8882890161087e565b90955093506109a0905060408701610862565b949793965091946060013592915050565b600080600080600060a086880312156109c8578081fd5b6109d1866108c8565b94506020860151935060408601519250606086015191506109f4608087016108c8565b90509295509295909350565b6020808252825182820181905260009190848201906040850190845b81811015610a3857835183529284019291840191600101610a1c565b50909695505050505050565b60208082526017908201527f556e69737761704d6f636b3a2077726f6e672070617468000000000000000000604082015260600190565b600082610a9657634e487b7160e01b81526012600452602481fd5b500490565b6000816000190483118215151615610ab557610ab5610ad1565b500290565b600082821015610acc57610acc610ad1565b500390565b634e487b7160e01b600052601160045260246000fdfea264697066735822122009689903b52ced5f595a23d1ba7c52b97014e2fb76cc9720b900a8728042f23964736f6c63430008040033";
