/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, BigNumberish } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { Erc20Mock } from "./Erc20Mock";

export class Erc20MockFactory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    name: string,
    symbol: string,
    __decimals: BigNumberish,
    overrides?: Overrides
  ): Promise<Erc20Mock> {
    return super.deploy(
      name,
      symbol,
      __decimals,
      overrides || {}
    ) as Promise<Erc20Mock>;
  }
  getDeployTransaction(
    name: string,
    symbol: string,
    __decimals: BigNumberish,
    overrides?: Overrides
  ): TransactionRequest {
    return super.getDeployTransaction(
      name,
      symbol,
      __decimals,
      overrides || {}
    );
  }
  attach(address: string): Erc20Mock {
    return super.attach(address) as Erc20Mock;
  }
  connect(signer: Signer): Erc20MockFactory {
    return super.connect(signer) as Erc20MockFactory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Erc20Mock {
    return new Contract(address, _abi, signerOrProvider) as Erc20Mock;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol",
        type: "string",
      },
      {
        internalType: "uint8",
        name: "__decimals",
        type: "uint8",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mintTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60a06040523480156200001157600080fd5b5060405162000d2138038062000d218339810160408190526200003491620001f0565b8251839083906200004d90600390602085019062000097565b5080516200006390600490602084019062000097565b50505060f81b7fff000000000000000000000000000000000000000000000000000000000000001660805250620002c49050565b828054620000a59062000271565b90600052602060002090601f016020900481019282620000c9576000855562000114565b82601f10620000e457805160ff191683800117855562000114565b8280016001018555821562000114579182015b8281111562000114578251825591602001919060010190620000f7565b506200012292915062000126565b5090565b5b8082111562000122576000815560010162000127565b600082601f8301126200014e578081fd5b81516001600160401b03808211156200016b576200016b620002ae565b604051601f8301601f19908116603f01168101908282118183101715620001965762000196620002ae565b81604052838152602092508683858801011115620001b2578485fd5b8491505b83821015620001d55785820183015181830184015290820190620001b6565b83821115620001e657848385830101525b9695505050505050565b60008060006060848603121562000205578283fd5b83516001600160401b03808211156200021c578485fd5b6200022a878388016200013d565b9450602086015191508082111562000240578384fd5b506200024f868287016200013d565b925050604084015160ff8116811462000266578182fd5b809150509250925092565b600181811c908216806200028657607f821691505b60208210811415620002a857634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fd5b60805160f81c610a3e620002e360003960006101410152610a3e6000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c8063449a52f81161008c578063a0712d6811610066578063a0712d68146101c4578063a457c2d7146101d7578063a9059cbb146101ea578063dd62ed3e146101fd57600080fd5b8063449a52f81461017e57806370a082311461019357806395d89b41146101bc57600080fd5b806306fdde03146100d4578063095ea7b3146100f257806318160ddd1461011557806323b872dd14610127578063313ce5671461013a578063395093511461016b575b600080fd5b6100dc610236565b6040516100e99190610956565b60405180910390f35b610105610100366004610915565b6102c8565b60405190151581526020016100e9565b6002545b6040519081526020016100e9565b6101056101353660046108da565b6102de565b60405160ff7f00000000000000000000000000000000000000000000000000000000000000001681526020016100e9565b610105610179366004610915565b61038d565b61019161018c366004610915565b6103c9565b005b6101196101a1366004610887565b6001600160a01b031660009081526020819052604090205490565b6100dc6103d7565b6101916101d236600461093e565b6103e6565b6101056101e5366004610915565b6103f3565b6101056101f8366004610915565b61048c565b61011961020b3660046108a8565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b606060038054610245906109cd565b80601f0160208091040260200160405190810160405280929190818152602001828054610271906109cd565b80156102be5780601f10610293576101008083540402835291602001916102be565b820191906000526020600020905b8154815290600101906020018083116102a157829003601f168201915b5050505050905090565b60006102d5338484610499565b50600192915050565b60006102eb8484846105bd565b6001600160a01b0384166000908152600160209081526040808320338452909152902054828110156103755760405162461bcd60e51b815260206004820152602860248201527f45524332303a207472616e7366657220616d6f756e74206578636565647320616044820152676c6c6f77616e636560c01b60648201526084015b60405180910390fd5b6103828533858403610499565b506001949350505050565b3360008181526001602090815260408083206001600160a01b038716845290915281205490916102d59185906103c49086906109a9565b610499565b6103d3828261078c565b5050565b606060048054610245906109cd565b6103f0338261078c565b50565b3360009081526001602090815260408083206001600160a01b0386168452909152812054828110156104755760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b606482015260840161036c565b6104823385858403610499565b5060019392505050565b60006102d53384846105bd565b6001600160a01b0383166104fb5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b606482015260840161036c565b6001600160a01b03821661055c5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b606482015260840161036c565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b0383166106215760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b606482015260840161036c565b6001600160a01b0382166106835760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b606482015260840161036c565b6001600160a01b038316600090815260208190526040902054818110156106fb5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b606482015260840161036c565b6001600160a01b038085166000908152602081905260408082208585039055918516815290812080548492906107329084906109a9565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161077e91815260200190565b60405180910390a350505050565b6001600160a01b0382166107e25760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640161036c565b80600260008282546107f491906109a9565b90915550506001600160a01b038216600090815260208190526040812080548392906108219084906109a9565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b80356001600160a01b038116811461088257600080fd5b919050565b600060208284031215610898578081fd5b6108a18261086b565b9392505050565b600080604083850312156108ba578081fd5b6108c38361086b565b91506108d16020840161086b565b90509250929050565b6000806000606084860312156108ee578081fd5b6108f78461086b565b92506109056020850161086b565b9150604084013590509250925092565b60008060408385031215610927578182fd5b6109308361086b565b946020939093013593505050565b60006020828403121561094f578081fd5b5035919050565b6000602080835283518082850152825b8181101561098257858101830151858201604001528201610966565b818111156109935783604083870101525b50601f01601f1916929092016040019392505050565b600082198211156109c857634e487b7160e01b81526011600452602481fd5b500190565b600181811c908216806109e157607f821691505b60208210811415610a0257634e487b7160e01b600052602260045260246000fd5b5091905056fea264697066735822122017b6afb054b4e30133510e5d8541931c4e88c7e606e376f6d29b856a1e4e58f064736f6c63430008040033";
