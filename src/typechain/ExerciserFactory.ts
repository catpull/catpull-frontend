/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { Exerciser } from "./Exerciser";

export class ExerciserFactory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(manager: string, overrides?: Overrides): Promise<Exerciser> {
    return super.deploy(manager, overrides || {}) as Promise<Exerciser>;
  }
  getDeployTransaction(
    manager: string,
    overrides?: Overrides
  ): TransactionRequest {
    return super.getDeployTransaction(manager, overrides || {});
  }
  attach(address: string): Exerciser {
    return super.attach(address) as Exerciser;
  }
  connect(signer: Signer): ExerciserFactory {
    return super.connect(signer) as ExerciserFactory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Exerciser {
    return new Contract(address, _abi, signerOrProvider) as Exerciser;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IOptionsManager",
        name: "manager",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "optionId",
        type: "uint256",
      },
    ],
    name: "exercise",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60a060405234801561001057600080fd5b506040516103ec3803806103ec83398101604081905261002f91610044565b60601b6001600160601b031916608052610072565b600060208284031215610055578081fd5b81516001600160a01b038116811461006b578182fd5b9392505050565b60805160601c61035d61008f6000396000605e015261035d6000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063b07f0a4114610030575b600080fd5b61004361003e3660046102ec565b610045565b005b60405163c40c11bb60e01b8152600481018290526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063c40c11bb90602401602060405180830381600087803b1580156100aa57600080fd5b505af11580156100be573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906100e2919061025f565b60405163409e220560e01b8152600481018490529091506000906001600160a01b0383169063409e22059060240160e06040518083038186803b15801561012857600080fd5b505afa15801561013c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610160919061028d565b5050945050505050610708816101769190610304565b42116102005760405162461bcd60e51b815260206004820152604960248201527f466163616465204572726f723a204175746f6d61746963616c6c79206578657260448201527f6369736520666f722074686973206f7074696f6e206973206e6f7420617661696064820152681b18589b19481e595d60ba1b608482015260a40160405180910390fd5b60405163b07f0a4160e01b8152600481018490526001600160a01b0383169063b07f0a4190602401600060405180830381600087803b15801561024257600080fd5b505af1158015610256573d6000803e3d6000fd5b50505050505050565b600060208284031215610270578081fd5b81516001600160a01b0381168114610286578182fd5b9392505050565b600080600080600080600060e0888a0312156102a7578283fd5b8751600481106102b5578384fd5b602089015160408a015160608b015160808c015160a08d015160c0909d0151949e939d50919b909a50909850965090945092505050565b6000602082840312156102fd578081fd5b5035919050565b60008282101561032257634e487b7160e01b81526011600452602481fd5b50039056fea2646970667358221220ca81ea6d1e06c708d17fe05812938230afec8e0265103c90db628c888b67635164736f6c63430008040033";
