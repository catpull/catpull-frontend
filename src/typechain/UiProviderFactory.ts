/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { UiProvider } from "./UiProvider";

export class UiProviderFactory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    _optionsManager: string,
    _stableCoin: string,
    overrides?: Overrides
  ): Promise<UiProvider> {
    return super.deploy(
      _optionsManager,
      _stableCoin,
      overrides || {}
    ) as Promise<UiProvider>;
  }
  getDeployTransaction(
    _optionsManager: string,
    _stableCoin: string,
    overrides?: Overrides
  ): TransactionRequest {
    return super.getDeployTransaction(
      _optionsManager,
      _stableCoin,
      overrides || {}
    );
  }
  attach(address: string): UiProvider {
    return super.attach(address) as UiProvider;
  }
  connect(signer: Signer): UiProviderFactory {
    return super.connect(signer) as UiProviderFactory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): UiProvider {
    return new Contract(address, _abi, signerOrProvider) as UiProvider;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "contract OptionsManager",
        name: "_optionsManager",
        type: "address",
      },
      {
        internalType: "contract ERC20",
        name: "_stableCoin",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "contract HegicPool",
        name: "pool",
        type: "address",
      },
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "buyViewData",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "currentPrice",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "availableBalance",
            type: "uint256",
          },
        ],
        internalType: "struct BuyViewData",
        name: "out",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "optionsPage",
        type: "uint256",
      },
    ],
    name: "optionsViewData",
    outputs: [
      {
        components: [
          {
            internalType: "int256",
            name: "totalPNL",
            type: "int256",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "isCall",
                type: "bool",
              },
              {
                internalType: "enum IHegicPool.OptionState",
                name: "state",
                type: "uint8",
              },
              {
                internalType: "uint256",
                name: "optionId",
                type: "uint256",
              },
              {
                internalType: "address",
                name: "asset",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "strike",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "expiry",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "premium",
                type: "uint256",
              },
              {
                internalType: "int256",
                name: "pnl",
                type: "int256",
              },
            ],
            internalType: "struct OptionViewData[]",
            name: "optionPageEntries",
            type: "tuple[]",
          },
          {
            internalType: "uint256",
            name: "totalEntries",
            type: "uint256",
          },
        ],
        internalType: "struct OptionsHoldingsView",
        name: "out",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "address",
        name: "pool",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "optionsPage",
        type: "uint256",
      },
    ],
    name: "tranchesViewData",
    outputs: [
      {
        components: [
          {
            internalType: "int256",
            name: "totalPNL",
            type: "int256",
          },
          {
            components: [
              {
                internalType: "enum IHegicPool.TrancheState",
                name: "state",
                type: "uint8",
              },
              {
                internalType: "uint256",
                name: "share",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "creationTimestamp",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "trancheId",
                type: "uint256",
              },
              {
                internalType: "int256",
                name: "pnl",
                type: "int256",
              },
              {
                internalType: "address",
                name: "asset",
                type: "address",
              },
            ],
            internalType: "struct TrancheViewData[]",
            name: "tranchesPageEntries",
            type: "tuple[]",
          },
          {
            internalType: "uint256",
            name: "totalEntries",
            type: "uint256",
          },
        ],
        internalType: "struct TranchesHoldingsView",
        name: "out",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506040516112ad3803806112ad83398101604081905261002f91610063565b600180546001600160a01b039283166001600160a01b031991821617909155600080549390921692169190911790556100b4565b60008060408385031215610075578182fd5b82516100808161009c565b60208401519092506100918161009c565b809150509250929050565b6001600160a01b03811681146100b157600080fd5b50565b6111ea806100c36000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c8063046a0f711461004657806340e0d9311461007957806371ff681d14610099575b600080fd5b610059610054366004610db8565b6100b9565b604080518251815260209283015192810192909252015b60405180910390f35b61008c610087366004610d6d565b610242565b6040516100709190610ef7565b6100ac6100a7366004610d2d565b610870565b6040516100709190610fc4565b60408051808201909152600080825260208201526000836001600160a01b031663b888879e6040518163ffffffff1660e01b815260040160206040518083038186803b15801561010857600080fd5b505afa15801561011c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101409190610d0a565b6001600160a01b031663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561017857600080fd5b505afa15801561018c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101b09190610ea8565b5050508084526001546040516370a0823160e01b81526001600160a01b038781166004830152929450911691506370a082319060240160206040518083038186803b1580156101fe57600080fd5b505afa158015610212573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102369190610e90565b60208301525092915050565b61026660405180606001604052806000815260200160608152602001600081525090565b60408051600580825260c08201909252600091816020015b6102d76040805161012081019091526000808252602082019081526020016000815260200160006001600160a01b0316815260200160008152602001600081526020016000815260200160008152602001600081525090565b81526020019060019003908161027e579050506000546040516370a0823160e01b81526001600160a01b0387811660048301529293509116906370a082319060240160206040518083038186803b15801561033157600080fd5b505afa158015610345573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103699190610e90565b604083015260005b600581101561086457604083015161038985836110a5565b1061039357610864565b600080546001600160a01b0316632f745c59876103b088866110a5565b6040516001600160e01b031960e085901b1681526001600160a01b039092166004830152602482015260440160206040518083038186803b1580156103f457600080fd5b505afa158015610408573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061042c9190610e90565b6000805460405163c40c11bb60e01b81526004810184905292935090916001600160a01b039091169063c40c11bb9060240160206040518083038186803b15801561047657600080fd5b505afa15801561048a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104ae9190610d0a565b9050600080600080600080866001600160a01b031663409e2205896040518263ffffffff1660e01b81526004016104e791815260200190565b60e06040518083038186803b1580156104ff57600080fd5b505afa158015610513573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105379190610df0565b9650965096505095509550955060006001600381111561056757634e487b7160e01b600052602160045260246000fd5b87600381111561058757634e487b7160e01b600052602160045260246000fd5b14156106a157604051637632bffb60e01b8152600481018a90526000906001600160a01b038a1690637632bffb9060240160206040518083038186803b1580156105d057600080fd5b505afa1580156105e4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106089190610e90565b9050801561068f5760405163b9186d7d60e01b8152600481018290526001600160a01b038a169063b9186d7d9060240160206040518083038186803b15801561065057600080fd5b505afa158015610664573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106889190610e90565b915061069b565b61069884611156565b91505b506106ba565b81156106ae5750806106ba565b6106b783611156565b90505b808c6000018181516106cc9190611064565b91508181525050604051806101200160405280896001600160a01b0316636d6364786040518163ffffffff1660e01b815260040160206040518083038186803b15801561071857600080fd5b505afa15801561072c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107509190610d98565b1515815260200188600381111561077757634e487b7160e01b600052602160045260246000fd5b81526020018a8152602001896001600160a01b0316636d8cb5296040518163ffffffff1660e01b815260040160206040518083038186803b1580156107bb57600080fd5b505afa1580156107cf573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107f39190610d0a565b6001600160a01b03168152602001878152602001868152602001858152602001848152602001828152508b8b8151811061083d57634e487b7160e01b600052603260045260246000fd5b6020026020010181905250505050505050505050808061085c9061113b565b915050610371565b50602082015292915050565b61089460405180606001604052806000815260200160608152602001600081525090565b60408051600580825260c08201909252849160009190816020015b6108f96040805160e081019091528060008152602001600081526020016000815260200160008152602001600081526020016000815260200160006001600160a01b031681525090565b8152602001906001900390816108af579050506040516370a0823160e01b81526001600160a01b038881166004830152919250908316906370a082319060240160206040518083038186803b15801561095157600080fd5b505afa158015610965573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109899190610e90565b604084015260005b6005811015610cdd5760408401516109a986836110a5565b106109b357610cdd565b604051632f745c5960e01b81526001600160a01b0388811660048301526024820183905260009190851690632f745c599060440160206040518083038186803b1580156109ff57600080fd5b505afa158015610a13573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a379190610e90565b9050600080600080876001600160a01b03166326c25962866040518263ffffffff1660e01b8152600401610a6d91815260200190565b60806040518083038186803b158015610a8557600080fd5b505afa158015610a99573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610abd9190610e4f565b93509350935093506000886001600160a01b031663ce8ff5a46040518163ffffffff1660e01b815260040160206040518083038186803b158015610b0057600080fd5b505afa158015610b14573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b389190610e90565b896001600160a01b031663feed23426040518163ffffffff1660e01b815260040160206040518083038186803b158015610b7157600080fd5b505afa158015610b85573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ba99190610e90565b610bb390866110dd565b610bbd91906110bd565b90506000610bcb84836110fc565b90506040518060e00160405280876002811115610bf857634e487b7160e01b600052602160045260246000fd5b81526020018681526020018581526020018481526020018881526020018281526020018b6001600160a01b031663fc0c546a6040518163ffffffff1660e01b815260040160206040518083038186803b158015610c5457600080fd5b505afa158015610c68573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c8c9190610d0a565b6001600160a01b0316815250898981518110610cb857634e487b7160e01b600052603260045260246000fd5b6020026020010181905250505050505050508080610cd59061113b565b915050610991565b506020830152509392505050565b805169ffffffffffffffffffff81168114610d0557600080fd5b919050565b600060208284031215610d1b578081fd5b8151610d268161119c565b9392505050565b600080600060608486031215610d41578182fd5b8335610d4c8161119c565b92506020840135610d5c8161119c565b929592945050506040919091013590565b60008060408385031215610d7f578182fd5b8235610d8a8161119c565b946020939093013593505050565b600060208284031215610da9578081fd5b81518015158114610d26578182fd5b60008060408385031215610dca578182fd5b8235610dd58161119c565b91506020830135610de58161119c565b809150509250929050565b600080600080600080600060e0888a031215610e0a578283fd5b875160048110610e18578384fd5b602089015160408a015160608b015160808c015160a08d015160c0909d0151949e939d50919b909a50909850965090945092505050565b60008060008060808587031215610e64578384fd5b845160038110610e72578485fd5b60208601516040870151606090970151919890975090945092505050565b600060208284031215610ea1578081fd5b5051919050565b600080600080600060a08688031215610ebf578081fd5b610ec886610ceb565b9450602086015193506040860151925060608601519150610eeb60808701610ceb565b90509295509295909350565b6000602080835260808084018551838601528286015160606040818189015283835180865260a09550858a0191508785019450885b81811015610faf5785518051151584528981015160048110610f5057610f50611186565b848b01528085015185850152858101516001600160a01b0316868501528881015189850152878101518885015260c0808201519085015260e0808201519085015261010090810151908401529488019461012090920191600101610f2c565b50509801519601959095525093949350505050565b6000602080835260808084018551838601528286015160606040818189015283835180865260a09550858a0191508785019450885b81811015610faf57855180516003811061101557611015611186565b8452808a01518a850152848101518585015285810151868501528881015189850152878101518885015260c0908101516001600160a01b0316908401529488019460e090920191600101610ff9565b600080821280156001600160ff1b038490038513161561108657611086611170565b600160ff1b839003841281161561109f5761109f611170565b50500190565b600082198211156110b8576110b8611170565b500190565b6000826110d857634e487b7160e01b81526012600452602481fd5b500490565b60008160001904831182151516156110f7576110f7611170565b500290565b60008083128015600160ff1b85018412161561111a5761111a611170565b6001600160ff1b038401831381161561113557611135611170565b50500390565b600060001982141561114f5761114f611170565b5060010190565b6000600160ff1b82141561116c5761116c611170565b0390565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052602160045260246000fd5b6001600160a01b03811681146111b157600080fd5b5056fea264697066735822122002d34a0f5d74c63e00d07b65cd45522e444bbc9b802323370463c4dd2ea7bc8664736f6c63430008040033";
