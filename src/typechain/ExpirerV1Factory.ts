/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { ExpirerV1 } from "./ExpirerV1";

export class ExpirerV1Factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(manager: string, overrides?: Overrides): Promise<ExpirerV1> {
    return super.deploy(manager, overrides || {}) as Promise<ExpirerV1>;
  }
  getDeployTransaction(
    manager: string,
    overrides?: Overrides
  ): TransactionRequest {
    return super.getDeployTransaction(manager, overrides || {});
  }
  attach(address: string): ExpirerV1 {
    return super.attach(address) as ExpirerV1;
  }
  connect(signer: Signer): ExpirerV1Factory {
    return super.connect(signer) as ExpirerV1Factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ExpirerV1 {
    return new Contract(address, _abi, signerOrProvider) as ExpirerV1;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "contract OptionsManager",
        name: "manager",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "PAGE_SIZE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "numberOfPages",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "options",
        type: "uint256[]",
      },
    ],
    name: "run",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "page",
        type: "uint256",
      },
    ],
    name: "search",
    outputs: [
      {
        internalType: "uint256[25]",
        name: "out",
        type: "uint256[25]",
      },
      {
        internalType: "uint256",
        name: "len",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60a060405234801561001057600080fd5b5060405161090e38038061090e83398101604081905261002f91610044565b60601b6001600160601b031916608052610072565b600060208284031215610055578081fd5b81516001600160a01b038116811461006b578182fd5b9392505050565b60805160601c61086a6100a46000396000818160e4015281816102e9015281816103b00152610494015261086a6000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c806331b286641461005157806355eead081461006c57806382fc0f8214610081578063fc156fe014610089575b600080fd5b610059603281565b6040519081526020015b60405180910390f35b61007f61007a366004610673565b6100aa565b005b6100596102e4565b61009c610097366004610742565b6103a3565b604051610063929190610772565b60005b818110156102df5760008383838181106100d757634e487b7160e01b600052603260045260246000fd5b90506020020135905060007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663c40c11bb836040518263ffffffff1660e01b815260040161013091815260200190565b60206040518083038186803b15801561014857600080fd5b505afa15801561015c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101809190610645565b9050600080826001600160a01b031663409e2205856040518263ffffffff1660e01b81526004016101b391815260200190565b60e06040518083038186803b1580156101cb57600080fd5b505afa1580156101df573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061020391906106e3565b505094505050509150428110801561023a5750600182600381111561023857634e487b7160e01b600052602160045260246000fd5b145b156102c857604051636198e33960e01b8152600481018590526001600160a01b03841690636198e33990602401600060405180830381600087803b15801561028157600080fd5b505af1925050508015610292575060015b6102c8573d8080156102c0576040519150601f19603f3d011682016040523d82523d6000602084013e6102c5565b606091505b50505b5050505080806102d790610803565b9150506100ad565b505050565b6000807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166375794a3c6040518163ffffffff1660e01b815260040160206040518083038186803b15801561034057600080fd5b505afa158015610354573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610378919061075a565b90508061038757600091505090565b6103926032826107c4565b61039d9060016107ac565b91505090565b6103ab610626565b6000807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166375794a3c6040518163ffffffff1660e01b815260040160206040518083038186803b15801561040757600080fd5b505afa15801561041b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061043f919061075a565b9050600061044e6032866107e4565b90505b603261045e8660016107ac565b61046891906107e4565b81101561061f5781811061047b5761061f565b60405163c40c11bb60e01b8152600481018290526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063c40c11bb9060240160206040518083038186803b1580156104de57600080fd5b505afa1580156104f2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105169190610645565b9050600080826001600160a01b031663409e2205856040518263ffffffff1660e01b815260040161054991815260200190565b60e06040518083038186803b15801561056157600080fd5b505afa158015610575573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061059991906106e3565b50509450505050915042811080156105d0575060018260038111156105ce57634e487b7160e01b600052602160045260246000fd5b145b1561060957838787601981106105f657634e487b7160e01b600052603260045260246000fd5b60200201526106066001876107ac565b95505b505050808061061790610803565b915050610451565b5050915091565b6040518061032001604052806019906020820280368337509192915050565b600060208284031215610656578081fd5b81516001600160a01b038116811461066c578182fd5b9392505050565b60008060208385031215610685578081fd5b823567ffffffffffffffff8082111561069c578283fd5b818501915085601f8301126106af578283fd5b8135818111156106bd578384fd5b8660208260051b85010111156106d1578384fd5b60209290920196919550909350505050565b600080600080600080600060e0888a0312156106fd578283fd5b87516004811061070b578384fd5b602089015160408a015160608b015160808c015160a08d015160c0909d0151949e939d50919b909a50909850965090945092505050565b600060208284031215610753578081fd5b5035919050565b60006020828403121561076b578081fd5b5051919050565b6103408101818460005b601981101561079b57815183526020928301929091019060010161077c565b505050826103208301529392505050565b600082198211156107bf576107bf61081e565b500190565b6000826107df57634e487b7160e01b81526012600452602481fd5b500490565b60008160001904831182151516156107fe576107fe61081e565b500290565b60006000198214156108175761081761081e565b5060010190565b634e487b7160e01b600052601160045260246000fdfea2646970667358221220f199ac2da2ece154d14bcb2abd001872f1feb27e18b6212e02906a5b4f2bfd1764736f6c63430008040033";
