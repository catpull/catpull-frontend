{"version":3,"sources":["../ /^/.//.*/.svg$/ groupOptions: {} namespace object","dapp/connectors.ts","logger.ts","components/ConnectionsModal.tsx","dapp/hooks.ts","dapp/networks.ts","typechain/Erc20Factory.ts","typechain/Erc721Factory.ts","typechain/UniswapV2Erc20Factory.ts","typechain/UniswapV2FactoryFactory.ts","typechain/UniswapV2PairFactory.ts","typechain/UniswapV2Router01Factory.ts","typechain/ExerciserFactory.ts","typechain/FacadeFactory.ts","typechain/UiProviderFactory.ts","typechain/Erc20MockFactory.ts","typechain/PriceProviderMockFactory.ts","typechain/UniswapRouterMockFactory.ts","typechain/WavaxMockFactory.ts","typechain/WethMockFactory.ts","typechain/BlackScholesModelFactory.ts","typechain/OptionsManagerFactory.ts","typechain/PriceCalculatorFactory.ts","typechain/HegicCallFactory.ts","typechain/HegicPutFactory.ts","typechain/InitialInputConstraintFactory.ts","typechain/InitialRewardsManagerFactory.ts","typechain/IgnitionFactory.ts","typechain/AggregatorV3InterfaceFactory.ts","components/decimalToScale.tsx","components/formatTokenAmount.tsx","components/GlobalState.tsx","components/Account.tsx","components/ChainId.tsx","components/Controls.tsx","components/Header.tsx","components/CryptoTabs.tsx","components/CurrencySelector.tsx","components/OptionType.tsx","components/floatToWei.tsx","components/formatPriceWithUnit.tsx","components/UIBuy.tsx","components/UILiquidity.tsx","components/UIPool.tsx","components/UiHoldings.tsx","components/Demo.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["map","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","then","e","Error","code","ids","id","all","slice","keys","Object","module","exports","injected","InjectedConnector","supportedChainIds","walletconnect","WalletConnectConnector","rpc","qrcode","warn","loglevel","debug","info","error","trace","setLevel","getErrorMessage","logger","style","position","top","left","transform","width","bgcolor","boxShadow","p","ConnectionsModal","context","useWeb3React","connector","activate","useState","activatingConnector","setActivatingConnector","useEffect","undefined","triedEager","active","tried","setTried","isAuthorized","catch","useEagerConnect","suppress","ethereum","window","on","handleConnect","handleChainChanged","chainId","handleAccountsChanged","accounts","length","handleNetworkChanged","networkId","removeListener","useInactiveListener","connection","connected","disabled","Modal","open","Box","sx","Typography","color","Button","onClick","role","useNetworkType","mkCoin","address","symbol","decimals","TESTNET_STABLE","TESTNET_TOKENS","weth","wbtc","stable","toLookup","toks","out","forEach","key","coin","TESTNET","priceOracles","wavax","tokens","tokensLookup","facade","uiProvider","pools","call","put","STABLE","STABLE_TOKENS","networks","testnet","mainnet","useCurrentNetworkData","network","Erc20Factory","signer","_abi","_bytecode","name_","symbol_","overrides","signerOrProvider","Contract","ContractFactory","inputs","internalType","name","type","stateMutability","anonymous","indexed","outputs","payable","constant","FacadeFactory","router","manager","UiProviderFactory","_optionsManager","_stableCoin","components","Erc20MockFactory","__decimals","PriceProviderMockFactory","_price","OptionsManagerFactory","HegicPutFactory","_token","_pricer1","_pricer2","_pricer3","_priceProvider","spotDecimals","_assetPriceToken","AggregatorV3InterfaceFactory","decimalToScale","BigInt","repeat","formatTokenAmount","amount","outDigits","sign","scale","integer","fractional","digits","toString","padStart","initialState","token","strike","strikeString","amountString","expiry","assetPrice","optionPremium","tokenBalances","StateProvider","React","state","refreshPrice","refreshOptionPrice","refreshBalances","update","s","useCurrentState","GlobalState","children","networkData","ctx","setState","a","account","library","getSigner","chainLink","connect","callStatic","latestRoundData","latestRound","answer","push","k","tok","balanceOf","balance","toBigInt","u","Provider","value","Account","deactivate","close","className","substring","ChainId","Controls","props","location","useLocation","navigate","useNavigate","Stack","direction","alignItems","justifyContent","ToggleButtonGroup","pathname","exclusive","ToggleButton","onUpdate","ControlsWrapper","TestnetControls","noti","useSnackbar","curNetworkData","mkMinter","addr","mint","utils","parseUnits","r","enqueueSnackbar","wait","mkPriceAdvancer","priceOracleAddr","priceProvider","newPrice","setPrice","bottom","marginLeft","spacing","size","variant","Header","isTestNet","height","Toolbar","display","flexDirection","flexGrow","CryptoTabs","data","availableTokens","filter","i","Tabs","t","Tab","icon","iconPosition","label","toUpperCase","CurrencySelector","anchorEl","setAnchorEl","Boolean","handleClose","Chip","event","currentTarget","Menu","onClose","MenuListProps","options","choice","MenuItem","onChange","ListItemIcon","StableCoinSelector","OptionType","Switch","checked","floatToWei","Math","abs","toFixed","split","formatPriceWithUnit","price","StrikeField","FormControl","InputLabel","OutlinedInput","placeholder","inputProps","textAlign","startAdornment","InputAdornment","v","target","f","parseFloat","isNaN","inputMode","FormHelperText","StrikeSizes","defaultColor","optionPrice","clickable","marginTop","SEC_IN_A_DAY","SubmitButton","notistack","paymentToken","tokenInPool","availableBalance","pool","premium","submitting","setSutmitting","isApproved","setIsApproved","isApproving","setIsApproving","run","paymentTokenInst","getAddress","allowance","lt","approve","submit","facadeInst","scaledAmount","path","createOption","AmountField","n","ExpirySlider","Slider","defaultValue","valueLabelDisplay","min","Number","_","max","Premium","running","current","amount_","getOptionPrice","console","log","total","readOnly","UIBuy","Container","maxWidth","Paper","paddingLeft","paddingRight","paddingBottom","component","noValidate","UILiquidity","holdings","setHoldings","fetchState","tranchesViewData","pageData","rows","tranchesPageEntries","row","isZero","flex","TableContainer","Table","TableHead","TableRow","TableCell","align","TableBody","daysStaked","Date","now","creationTimestamp","toNumber","currency","asset","ceil","pnl","trancheId","AddToPoolButton","addingLiquidty","setAddingLiquidty","isPut","erc20Inst","ercInst","addToPool","tokenErc","poolInst","tx","provideFrom","_address","AmountToAddField","UIPool","UIHoldings","page","setPage","exercising","setExercising","loading","setLoading","optionsViewData","optionsPage","optionPageEntries","border","isCall","optionsManager","optionsManagerInst","optId","optionId","tokenPool","poolAddr","exercise","isNegative","TablePagination","count","rowsPerPage","onRowsPerPageChange","rowsPerPageOptions","onPageChange","newPage","to","getLibrary","provider","Web3Provider","pollingInterval","SwitchToDevNet","paddingTop","padding","NoPoolsFoundForThisNetwork","Navigation","element","index","Demo","App","CssBaseline","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","maxSnack","anchorOrigin","vertical","horizontal","autoHideDuration","basename","config","topRoute","document","getElementById"],"mappings":"0lEAAA,IAAIA,EAAM,CACT,cAAe,CACd,IACA,GAED,cAAe,CACd,IACA,GAED,YAAa,CACZ,IACA,GAED,aAAc,CACb,IACA,GAED,aAAc,CACb,IACA,GAED,YAAa,CACZ,IACA,GAED,YAAa,CACZ,IACA,IAED,YAAa,CACZ,IACA,IAED,YAAa,CACZ,IACA,IAED,YAAa,CACZ,IACA,IAED,YAAa,CACZ,IACA,IAED,WAAY,CACX,IACA,IAED,aAAc,CACb,IACA,IAED,cAAe,CACd,IACA,IAED,YAAa,CACZ,IACA,IAED,aAAc,CACb,IACA,IAED,YAAa,CACZ,IACA,IAED,aAAc,CACb,IACA,IAED,YAAa,CACZ,IACA,IAED,cAAe,CACd,IACA,IAED,aAAc,CACb,IACA,IAED,aAAc,CACb,IACA,IAED,cAAe,CACd,IACA,IAED,YAAa,CACZ,IACA,IAED,YAAa,CACZ,IACA,IAED,aAAc,CACb,IACA,IAED,aAAc,CACb,IACA,IAED,YAAa,CACZ,IACA,IAED,YAAa,CACZ,IACA,IAED,aAAc,CACb,IACA,IAED,YAAa,CACZ,IACA,IAED,YAAa,CACZ,IACA,IAED,YAAa,CACZ,IACA,IAED,aAAc,CACb,IACA,IAED,YAAa,CACZ,IACA,IAED,WAAY,CACX,IACA,IAED,aAAc,CACb,IACA,IAED,YAAa,CACZ,IACA,IAED,YAAa,CACZ,IACA,IAED,YAAa,CACZ,IACA,IAED,aAAc,CACb,IACA,IAED,YAAa,CACZ,IACA,IAED,aAAc,CACb,IACA,IAED,aAAc,CACb,IACA,IAED,YAAa,CACZ,IACA,IAED,aAAc,CACb,IACA,IAED,aAAc,CACb,IACA,IAED,YAAa,CACZ,IACA,IAED,YAAa,CACZ,IACA,IAED,YAAa,CACZ,IACA,IAED,YAAa,CACZ,IACA,IAED,YAAa,CACZ,IACA,IAED,aAAc,CACb,IACA,IAED,YAAa,CACZ,IACA,IAED,YAAa,CACZ,IACA,IAED,YAAa,CACZ,IACA,IAED,YAAa,CACZ,IACA,IAED,YAAa,CACZ,IACA,IAED,YAAa,CACZ,IACA,IAED,YAAa,CACZ,IACA,IAED,YAAa,CACZ,IACA,IAED,WAAY,CACX,IACA,IAED,aAAc,CACb,IACA,IAED,YAAa,CACZ,IACA,IAED,cAAe,CACd,IACA,IAED,YAAa,CACZ,IACA,IAED,aAAc,CACb,IACA,IAED,YAAa,CACZ,IACA,IAED,YAAa,CACZ,IACA,IAED,YAAa,CACZ,IACA,IAED,aAAc,CACb,IACA,IAED,aAAc,CACb,IACA,IAED,YAAa,CACZ,IACA,IAED,YAAa,CACZ,IACA,IAED,YAAa,CACZ,IACA,IAED,YAAa,CACZ,IACA,IAED,cAAe,CACd,IACA,IAED,YAAa,CACZ,IACA,IAED,aAAc,CACb,IACA,IAED,aAAc,CACb,IACA,IAED,YAAa,CACZ,IACA,IAED,aAAc,CACb,IACA,IAED,YAAa,CACZ,IACA,IAED,YAAa,CACZ,IACA,IAED,YAAa,CACZ,IACA,IAED,YAAa,CACZ,IACA,IAED,WAAY,CACX,IACA,IAED,aAAc,CACb,IACA,IAED,YAAa,CACZ,IACA,IAED,WAAY,CACX,IACA,IAED,aAAc,CACb,IACA,IAED,aAAc,CACb,IACA,IAED,YAAa,CACZ,IACA,IAED,aAAc,CACb,IACA,IAED,aAAc,CACb,IACA,IAED,YAAa,CACZ,IACA,IAED,aAAc,CACb,IACA,KAED,aAAc,CACb,IACA,KAED,YAAa,CACZ,IACA,KAED,YAAa,CACZ,IACA,KAED,aAAc,CACb,IACA,KAED,aAAc,CACb,IACA,KAED,YAAa,CACZ,IACA,KAED,YAAa,CACZ,IACA,KAED,aAAc,CACb,IACA,KAED,cAAe,CACd,IACA,KAED,aAAc,CACb,IACA,KAED,YAAa,CACZ,IACA,KAED,aAAc,CACb,IACA,KAED,aAAc,CACb,IACA,KAED,aAAc,CACb,IACA,KAED,YAAa,CACZ,IACA,KAED,YAAa,CACZ,IACA,KAED,YAAa,CACZ,IACA,KAED,cAAe,CACd,IACA,KAED,YAAa,CACZ,IACA,KAED,YAAa,CACZ,IACA,KAED,YAAa,CACZ,IACA,KAED,aAAc,CACb,IACA,KAED,aAAc,CACb,IACA,KAED,aAAc,CACb,IACA,KAED,aAAc,CACb,IACA,KAED,YAAa,CACZ,IACA,KAED,aAAc,CACb,IACA,KAED,YAAa,CACZ,IACA,KAED,YAAa,CACZ,IACA,KAED,YAAa,CACZ,IACA,KAED,cAAe,CACd,IACA,KAED,aAAc,CACb,IACA,KAED,aAAc,CACb,IACA,KAED,YAAa,CACZ,IACA,KAED,aAAc,CACb,IACA,KAED,YAAa,CACZ,IACA,KAED,WAAY,CACX,IACA,KAED,aAAc,CACb,IACA,KAED,YAAa,CACZ,IACA,KAED,YAAa,CACZ,IACA,KAED,aAAc,CACb,IACA,KAED,aAAc,CACb,IACA,KAED,cAAe,CACd,IACA,KAED,WAAY,CACX,IACA,KAED,YAAa,CACZ,IACA,KAED,YAAa,CACZ,IACA,KAED,cAAe,CACd,IACA,KAED,aAAc,CACb,IACA,KAED,aAAc,CACb,IACA,KAED,YAAa,CACZ,IACA,KAED,YAAa,CACZ,IACA,KAED,aAAc,CACb,IACA,KAED,aAAc,CACb,IACA,KAED,YAAa,CACZ,IACA,KAED,aAAc,CACb,IACA,KAED,aAAc,CACb,IACA,KAED,YAAa,CACZ,IACA,KAED,YAAa,CACZ,IACA,KAED,YAAa,CACZ,IACA,KAED,YAAa,CACZ,IACA,KAED,YAAa,CACZ,IACA,KAED,YAAa,CACZ,IACA,KAED,gBAAiB,CAChB,KAED,aAAc,CACb,IACA,KAED,YAAa,CACZ,IACA,KAED,YAAa,CACZ,IACA,KAED,YAAa,CACZ,IACA,KAED,YAAa,CACZ,IACA,KAED,aAAc,CACb,IACA,KAED,aAAc,CACb,IACA,KAED,YAAa,CACZ,IACA,KAED,YAAa,CACZ,IACA,KAED,YAAa,CACZ,IACA,KAED,aAAc,CACb,IACA,KAED,aAAc,CACb,IACA,KAED,aAAc,CACb,IACA,KAED,YAAa,CACZ,IACA,KAED,YAAa,CACZ,IACA,KAED,aAAc,CACb,IACA,KAED,aAAc,CACb,IACA,KAED,YAAa,CACZ,IACA,KAED,YAAa,CACZ,IACA,KAED,YAAa,CACZ,IACA,KAED,YAAa,CACZ,IACA,KAED,YAAa,CACZ,IACA,KAED,YAAa,CACZ,IACA,KAED,YAAa,CACZ,IACA,KAED,aAAc,CACb,IACA,KAED,YAAa,CACZ,IACA,KAED,YAAa,CACZ,IACA,KAED,YAAa,CACZ,IACA,KAED,YAAa,CACZ,IACA,KAED,aAAc,CACb,IACA,KAED,YAAa,CACZ,IACA,KAED,YAAa,CACZ,IACA,KAED,aAAc,CACb,IACA,KAED,YAAa,CACZ,IACA,KAED,YAAa,CACZ,IACA,KAED,YAAa,CACZ,IACA,KAED,eAAgB,CACf,IACA,KAED,YAAa,CACZ,IACA,KAED,YAAa,CACZ,IACA,KAED,YAAa,CACZ,IACA,KAED,YAAa,CACZ,IACA,KAED,YAAa,CACZ,IACA,KAED,YAAa,CACZ,IACA,KAED,YAAa,CACZ,IACA,KAED,YAAa,CACZ,IACA,KAED,YAAa,CACZ,IACA,KAED,YAAa,CACZ,IACA,KAED,YAAa,CACZ,IACA,KAED,YAAa,CACZ,IACA,KAED,aAAc,CACb,IACA,KAED,YAAa,CACZ,IACA,KAED,YAAa,CACZ,IACA,KAED,YAAa,CACZ,IACA,KAED,YAAa,CACZ,IACA,KAED,aAAc,CACb,IACA,KAED,aAAc,CACb,IACA,KAED,YAAa,CACZ,IACA,KAED,YAAa,CACZ,IACA,KAED,WAAY,CACX,IACA,KAED,YAAa,CACZ,IACA,KAED,YAAa,CACZ,IACA,KAED,aAAc,CACb,IACA,KAED,YAAa,CACZ,IACA,KAED,YAAa,CACZ,IACA,KAED,YAAa,CACZ,IACA,KAED,aAAc,CACb,IACA,KAED,YAAa,CACZ,IACA,KAED,YAAa,CACZ,IACA,KAED,YAAa,CACZ,IACA,KAED,YAAa,CACZ,IACA,KAED,YAAa,CACZ,IACA,KAED,YAAa,CACZ,IACA,KAED,WAAY,CACX,IACA,KAED,YAAa,CACZ,IACA,KAED,YAAa,CACZ,IACA,KAED,aAAc,CACb,IACA,KAED,YAAa,CACZ,IACA,KAED,YAAa,CACZ,IACA,KAED,YAAa,CACZ,IACA,KAED,WAAY,CACX,IACA,KAED,YAAa,CACZ,IACA,KAED,YAAa,CACZ,IACA,KAED,aAAc,CACb,IACA,KAED,YAAa,CACZ,IACA,KAED,YAAa,CACZ,IACA,KAED,YAAa,CACZ,IACA,KAED,aAAc,CACb,IACA,KAED,WAAY,CACX,IACA,KAED,aAAc,CACb,IACA,KAED,YAAa,CACZ,IACA,KAED,YAAa,CACZ,IACA,KAED,aAAc,CACb,IACA,KAED,cAAe,CACd,IACA,KAED,YAAa,CACZ,IACA,KAED,YAAa,CACZ,IACA,KAED,YAAa,CACZ,IACA,KAED,WAAY,CACX,IACA,KAED,YAAa,CACZ,IACA,KAED,aAAc,CACb,IACA,KAED,YAAa,CACZ,IACA,KAED,cAAe,CACd,IACA,KAED,YAAa,CACZ,IACA,KAED,aAAc,CACb,IACA,KAED,YAAa,CACZ,IACA,KAED,YAAa,CACZ,IACA,KAED,aAAc,CACb,IACA,KAED,aAAc,CACb,IACA,KAED,aAAc,CACb,IACA,KAED,cAAe,CACd,IACA,KAED,aAAc,CACb,IACA,KAED,cAAe,CACd,IACA,KAED,YAAa,CACZ,IACA,KAED,YAAa,CACZ,IACA,KAED,aAAc,CACb,IACA,KAED,aAAc,CACb,IACA,KAED,aAAc,CACb,IACA,KAED,WAAY,CACX,IACA,KAED,aAAc,CACb,IACA,KAED,aAAc,CACb,IACA,KAED,cAAe,CACd,IACA,KAED,cAAe,CACd,IACA,KAED,cAAe,CACd,IACA,KAED,aAAc,CACb,IACA,KAED,YAAa,CACZ,IACA,KAED,YAAa,CACZ,IACA,KAED,YAAa,CACZ,IACA,KAED,aAAc,CACb,IACA,KAED,YAAa,CACZ,IACA,KAED,aAAc,CACb,IACA,KAED,YAAa,CACZ,IACA,KAED,aAAc,CACb,IACA,KAED,YAAa,CACZ,IACA,KAED,YAAa,CACZ,IACA,KAED,YAAa,CACZ,IACA,KAED,YAAa,CACZ,IACA,KAED,YAAa,CACZ,IACA,KAED,aAAc,CACb,IACA,KAED,aAAc,CACb,IACA,KAED,YAAa,CACZ,IACA,KAED,YAAa,CACZ,IACA,KAED,aAAc,CACb,IACA,KAED,YAAa,CACZ,IACA,KAED,aAAc,CACb,IACA,KAED,YAAa,CACZ,IACA,KAED,YAAa,CACZ,IACA,KAED,aAAc,CACb,IACA,KAED,YAAa,CACZ,IACA,KAED,aAAc,CACb,IACA,KAED,YAAa,CACZ,IACA,KAED,YAAa,CACZ,IACA,KAED,YAAa,CACZ,IACA,KAED,YAAa,CACZ,IACA,KAED,YAAa,CACZ,IACA,KAED,YAAa,CACZ,IACA,KAED,YAAa,CACZ,IACA,KAED,aAAc,CACb,IACA,KAED,YAAa,CACZ,IACA,KAED,YAAa,CACZ,IACA,KAED,aAAc,CACb,IACA,KAED,YAAa,CACZ,IACA,KAED,iBAAkB,CACjB,IACA,KAED,aAAc,CACb,IACA,KAED,aAAc,CACb,IACA,KAED,cAAe,CACd,IACA,KAED,YAAa,CACZ,IACA,KAED,YAAa,CACZ,IACA,KAED,YAAa,CACZ,IACA,KAED,YAAa,CACZ,IACA,KAED,YAAa,CACZ,IACA,KAED,YAAa,CACZ,IACA,KAED,aAAc,CACb,IACA,KAED,YAAa,CACZ,IACA,KAED,YAAa,CACZ,IACA,KAED,YAAa,CACZ,IACA,KAED,YAAa,CACZ,IACA,KAED,aAAc,CACb,IACA,KAED,YAAa,CACZ,IACA,KAED,YAAa,CACZ,IACA,KAED,YAAa,CACZ,IACA,KAED,YAAa,CACZ,IACA,KAED,YAAa,CACZ,IACA,KAED,YAAa,CACZ,IACA,KAED,YAAa,CACZ,IACA,KAED,YAAa,CACZ,IACA,KAED,YAAa,CACZ,IACA,KAED,YAAa,CACZ,IACA,KAED,YAAa,CACZ,IACA,KAED,aAAc,CACb,IACA,KAED,YAAa,CACZ,IACA,KAED,YAAa,CACZ,IACA,KAED,YAAa,CACZ,IACA,KAED,aAAc,CACb,IACA,KAED,YAAa,CACZ,IACA,KAED,YAAa,CACZ,IACA,KAED,cAAe,CACd,IACA,KAED,YAAa,CACZ,IACA,KAED,aAAc,CACb,IACA,KAED,aAAc,CACb,IACA,KAED,YAAa,CACZ,IACA,KAED,YAAa,CACZ,IACA,KAED,YAAa,CACZ,IACA,KAED,YAAa,CACZ,IACA,KAED,aAAc,CACb,IACA,KAED,cAAe,CACd,IACA,KAED,YAAa,CACZ,IACA,KAED,YAAa,CACZ,IACA,KAED,YAAa,CACZ,IACA,KAED,aAAc,CACb,IACA,KAED,aAAc,CACb,IACA,KAED,aAAc,CACb,IACA,KAED,YAAa,CACZ,IACA,KAED,aAAc,CACb,IACA,KAED,WAAY,CACX,IACA,KAED,aAAc,CACb,IACA,KAED,YAAa,CACZ,IACA,KAED,YAAa,CACZ,IACA,KAED,YAAa,CACZ,IACA,KAED,YAAa,CACZ,IACA,KAED,cAAe,CACd,IACA,KAED,YAAa,CACZ,IACA,KAED,YAAa,CACZ,IACA,KAED,YAAa,CACZ,IACA,KAED,YAAa,CACZ,IACA,KAED,YAAa,CACZ,IACA,KAED,YAAa,CACZ,IACA,KAED,YAAa,CACZ,IACA,KAED,cAAe,CACd,IACA,KAED,YAAa,CACZ,IACA,KAED,aAAc,CACb,IACA,KAED,aAAc,CACb,IACA,KAED,YAAa,CACZ,IACA,KAED,YAAa,CACZ,IACA,KAED,YAAa,CACZ,IACA,KAED,YAAa,CACZ,IACA,KAED,YAAa,CACZ,IACA,KAED,aAAc,CACb,IACA,KAED,YAAa,CACZ,IACA,KAED,YAAa,CACZ,IACA,KAED,aAAc,CACb,IACA,KAED,YAAa,CACZ,IACA,KAED,aAAc,CACb,IACA,KAED,YAAa,CACZ,IACA,KAED,aAAc,CACb,IACA,KAED,aAAc,CACb,IACA,KAED,cAAe,CACd,IACA,KAED,eAAgB,CACf,IACA,KAED,aAAc,CACb,IACA,KAED,YAAa,CACZ,IACA,KAED,YAAa,CACZ,IACA,KAED,YAAa,CACZ,IACA,KAED,YAAa,CACZ,IACA,KAED,YAAa,CACZ,IACA,KAED,YAAa,CACZ,IACA,KAED,aAAc,CACb,IACA,KAED,aAAc,CACb,IACA,KAED,aAAc,CACb,IACA,KAED,aAAc,CACb,IACA,KAED,YAAa,CACZ,IACA,KAED,YAAa,CACZ,IACA,KAED,YAAa,CACZ,IACA,KAED,YAAa,CACZ,IACA,KAED,YAAa,CACZ,IACA,KAED,YAAa,CACZ,IACA,KAED,YAAa,CACZ,IACA,KAED,YAAa,CACZ,IACA,KAED,aAAc,CACb,IACA,KAED,aAAc,CACb,IACA,KAED,YAAa,CACZ,IACA,KAED,YAAa,CACZ,IACA,KAED,YAAa,CACZ,IACA,KAED,YAAa,CACZ,IACA,KAED,aAAc,CACb,IACA,KAED,UAAW,CACV,IACA,KAED,YAAa,CACZ,IACA,KAED,aAAc,CACb,IACA,KAED,YAAa,CACZ,IACA,KAED,YAAa,CACZ,IACA,KAED,YAAa,CACZ,IACA,KAED,YAAa,CACZ,IACA,KAED,YAAa,CACZ,IACA,KAED,YAAa,CACZ,IACA,KAED,YAAa,CACZ,IACA,KAED,YAAa,CACZ,IACA,KAED,aAAc,CACb,IACA,KAED,aAAc,CACb,IACA,KAED,YAAa,CACZ,IACA,KAED,YAAa,CACZ,IACA,KAED,aAAc,CACb,IACA,KAED,YAAa,CACZ,IACA,KAED,YAAa,CACZ,IACA,KAED,YAAa,CACZ,IACA,KAED,aAAc,CACb,IACA,KAED,YAAa,CACZ,IACA,KAED,UAAW,CACV,IACA,KAED,YAAa,CACZ,IACA,KAED,aAAc,CACb,IACA,KAED,YAAa,CACZ,IACA,KAED,aAAc,CACb,IACA,KAED,aAAc,CACb,IACA,KAED,cAAe,CACd,IACA,KAED,YAAa,CACZ,IACA,KAED,YAAa,CACZ,IACA,KAED,YAAa,CACZ,IACA,KAED,aAAc,CACb,IACA,KAED,YAAa,CACZ,IACA,KAED,YAAa,CACZ,IACA,KAED,YAAa,CACZ,IACA,KAED,YAAa,CACZ,IACA,KAED,cAAe,CACd,IACA,KAED,YAAa,CACZ,IACA,KAED,cAAe,CACd,IACA,KAED,YAAa,CACZ,IACA,KAED,YAAa,CACZ,IACA,KAED,YAAa,CACZ,IACA,KAED,YAAa,CACZ,IACA,KAED,aAAc,CACb,IACA,KAED,YAAa,CACZ,IACA,KAED,YAAa,CACZ,IACA,KAED,cAAe,CACd,IACA,KAED,cAAe,CACd,IACA,KAED,cAAe,CACd,IACA,KAED,aAAc,CACb,IACA,KAED,cAAe,CACd,IACA,KAED,cAAe,CACd,IACA,KAED,cAAe,CACd,IACA,KAED,YAAa,CACZ,IACA,KAED,YAAa,CACZ,IACA,KAED,cAAe,CACd,IACA,KAED,aAAc,CACb,IACA,KAED,cAAe,CACd,IACA,KAED,cAAe,CACd,IACA,KAED,aAAc,CACb,IACA,KAED,aAAc,CACb,IACA,KAED,aAAc,CACb,IACA,KAED,YAAa,CACZ,IACA,KAED,YAAa,CACZ,IACA,KAED,YAAa,CACZ,IACA,KAED,YAAa,CACZ,IACA,KAED,cAAe,CACd,IACA,KAED,YAAa,CACZ,IACA,KAED,cAAe,CACd,IACA,KAED,YAAa,CACZ,IACA,KAED,YAAa,CACZ,IACA,KAED,cAAe,CACd,IACA,KAED,YAAa,CACZ,IACA,KAED,YAAa,CACZ,IACA,KAED,YAAa,CACZ,IACA,KAED,YAAa,CACZ,IACA,KAED,YAAa,CACZ,IACA,KAED,aAAc,CACb,IACA,KAED,aAAc,CACb,IACA,KAED,aAAc,CACb,IACA,KAED,YAAa,CACZ,IACA,KAED,aAAc,CACb,IACA,KAED,aAAc,CACb,IACA,KAED,YAAa,CACZ,IACA,KAED,aAAc,CACb,IACA,KAED,YAAa,CACZ,IACA,KAED,aAAc,CACb,IACA,KAED,aAAc,CACb,IACA,KAED,YAAa,CACZ,IACA,KAED,YAAa,CACZ,IACA,KAED,YAAa,CACZ,IACA,KAED,YAAa,CACZ,IACA,KAED,aAAc,CACb,IACA,KAED,YAAa,CACZ,IACA,KAED,YAAa,CACZ,IACA,KAED,YAAa,CACZ,IACA,KAED,YAAa,CACZ,IACA,KAED,YAAa,CACZ,IACA,KAED,aAAc,CACb,IACA,KAED,aAAc,CACb,IACA,KAED,aAAc,CACb,IACA,KAED,YAAa,CACZ,IACA,KAED,YAAa,CACZ,IACA,KAED,aAAc,CACb,IACA,KAED,aAAc,CACb,IACA,KAED,YAAa,CACZ,IACA,KAED,YAAa,CACZ,IACA,KAED,YAAa,CACZ,IACA,KAED,aAAc,CACb,IACA,KAED,aAAc,CACb,IACA,KAED,cAAe,CACd,IACA,KAED,YAAa,CACZ,IACA,KAED,aAAc,CACb,IACA,KAED,YAAa,CACZ,IACA,KAED,YAAa,CACZ,IACA,KAED,YAAa,CACZ,IACA,KAED,YAAa,CACZ,IACA,KAED,aAAc,CACb,IACA,KAED,YAAa,CACZ,IACA,KAED,aAAc,CACb,IACA,KAED,YAAa,CACZ,IACA,KAED,cAAe,CACd,IACA,KAED,aAAc,CACb,IACA,KAED,YAAa,CACZ,IACA,KAED,cAAe,CACd,IACA,KAED,YAAa,CACZ,IACA,KAED,cAAe,CACd,IACA,KAED,YAAa,CACZ,IACA,KAED,YAAa,CACZ,IACA,KAED,YAAa,CACZ,IACA,KAED,YAAa,CACZ,IACA,KAED,YAAa,CACZ,IACA,KAED,YAAa,CACZ,IACA,KAED,aAAc,CACb,IACA,KAED,YAAa,CACZ,IACA,KAED,YAAa,CACZ,IACA,KAED,YAAa,CACZ,IACA,KAED,YAAa,CACZ,IACA,KAED,cAAe,CACd,IACA,KAED,YAAa,CACZ,IACA,KAED,YAAa,CACZ,IACA,KAED,YAAa,CACZ,IACA,KAED,YAAa,CACZ,IACA,KAED,YAAa,CACZ,IACA,KAED,YAAa,CACZ,IACA,KAED,YAAa,CACZ,IACA,KAED,YAAa,CACZ,IACA,KAED,YAAa,CACZ,IACA,KAED,YAAa,CACZ,IACA,KAED,YAAa,CACZ,IACA,KAED,YAAa,CACZ,IACA,KAED,YAAa,CACZ,IACA,KAED,aAAc,CACb,IACA,KAED,YAAa,CACZ,IACA,KAED,WAAY,CACX,IACA,KAED,YAAa,CACZ,IACA,KAED,YAAa,CACZ,IACA,KAED,YAAa,CACZ,IACA,KAED,YAAa,CACZ,IACA,KAED,YAAa,CACZ,IACA,KAED,YAAa,CACZ,IACA,KAED,YAAa,CACZ,IACA,MAGF,SAASC,EAAoBC,GAC5B,IAAIC,EAAoBC,EAAEJ,EAAKE,GAC9B,OAAOG,QAAQC,UAAUC,MAAK,WAC7B,IAAIC,EAAI,IAAI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,CACEE,WAAW,EACXL,OAAQ,CACN,CACEM,SAAS,EACTL,aAAc,UACdC,KAAM,SACNC,KAAM,WAER,CACEG,SAAS,EACTL,aAAc,UACdC,KAAM,UACNC,KAAM,WAER,CACEG,SAAS,EACTL,aAAc,UACdC,KAAM,UACNC,KAAM,WAER,CACEG,SAAS,EACTL,aAAc,UACdC,KAAM,KACNC,KAAM,YAGVD,KAAM,OACNC,KAAM,SAER,CACEE,WAAW,EACXL,OAAQ,CACN,CACEM,SAAS,EACTL,aAAc,UACdC,KAAM,SACNC,KAAM,WAER,CACEG,SAAS,EACTL,aAAc,UACdC,KAAM,UACNC,KAAM,WAER,CACEG,SAAS,EACTL,aAAc,UACdC,KAAM,UACNC,KAAM,YAGVD,KAAM,OACNC,KAAM,SAER,CACEE,WAAW,EACXL,OAAQ,CACN,CACEM,SAAS,EACTL,aAAc,UACdC,KAAM,SACNC,KAAM,WAER,CACEG,SAAS,EACTL,aAAc,UACdC,KAAM,YACNC,KAAM,WAER,CACEG,SAAS,EACTL,aAAc,UACdC,KAAM,YACNC,KAAM,WAER,CACEG,SAAS,EACTL,aAAc,UACdC,KAAM,aACNC,KAAM,WAER,CACEG,SAAS,EACTL,aAAc,UACdC,KAAM,aACNC,KAAM,WAER,CACEG,SAAS,EACTL,aAAc,UACdC,KAAM,KACNC,KAAM,YAGVD,KAAM,OACNC,KAAM,SAER,CACEE,WAAW,EACXL,OAAQ,CACN,CACEM,SAAS,EACTL,aAAc,UACdC,KAAM,WACNC,KAAM,WAER,CACEG,SAAS,EACTL,aAAc,UACdC,KAAM,WACNC,KAAM,YAGVD,KAAM,OACNC,KAAM,SAER,CACEE,WAAW,EACXL,OAAQ,CACN,CACEM,SAAS,EACTL,aAAc,UACdC,KAAM,OACNC,KAAM,WAER,CACEG,SAAS,EACTL,aAAc,UACdC,KAAM,KACNC,KAAM,WAER,CACEG,SAAS,EACTL,aAAc,UACdC,KAAM,QACNC,KAAM,YAGVD,KAAM,WACNC,KAAM,SAER,CACEM,UAAU,EACVT,OAAQ,GACRE,KAAM,mBACNK,QAAS,CACP,CACEN,aAAc,UACdC,KAAM,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N,aAAc,YACdC,KAAM,UACNC,KAAM,cAGVC,gBAAiB,OACjBD,KAAM,YAER,CACEH,OAAQ,CACN,CACEC,aAAc,UACdC,KAAM,WACNC,KAAM,WAER,CACEF,aAAc,YACdC,KAAM,OACNC,KAAM,cAGVD,KAAM,gBACNK,QAAS,CACP,CACEN,aAAc,YACdC,KAAM,UACNC,KAAM,cAGVC,gBAAiB,OACjBD,KAAM,YAER,CACEH,OAAQ,CACN,CACEC,aAAc,UACdC,KAAM,UACNC,KAAM,WAER,CACEF,aAAc,UACdC,KAAM,WACNC,KAAM,WAER,CACEF,aAAc,UACdC,KAAM,WACNC,KAAM,YAGVD,KAAM,QACNK,QAAS,CACP,CACEN,aAAc,UACdC,KAAM,UACNC,KAAM,YAGVC,gBAAiB,OACjBD,KAAM,YAER,CACEH,OAAQ,CACN,CACEC,aAAc,UACdC,KAAM,SACNC,KAAM,WAER,CACEF,aAAc,UACdC,KAAM,SACNC,KAAM,WAER,CACEF,aAAc,UACdC,KAAM,YACNC,KAAM,WAER,CACEF,aAAc,UACdC,KAAM,aACNC,KAAM,WAER,CACEF,aAAc,UACdC,KAAM,aACNC,KAAM,WAER,CACEF,aAAc,UACdC,KAAM,KACNC,KAAM,WAER,CACEF,aAAc,UACdC,KAAM,WACNC,KAAM,YAGVD,KAAM,kBACNK,QAAS,CACP,CACEN,aAAc,UACdC,KAAM,UACNC,KAAM,WAER,CACEF,aAAc,UACdC,KAAM,UACNC,KAAM,YAGVC,gBAAiB,aACjBD,KAAM,YAER,CACEH,OAAQ,CACN,CACEC,aAAc,UACdC,KAAM,QACNC,KAAM,WAER,CACEF,aAAc,UACdC,KAAM,YACNC,KAAM,WAER,CACEF,aAAc,UACdC,KAAM,iBACNC,KAAM,WAER,CACEF,aAAc,UACdC,KAAM,eACNC,KAAM,WAER,CACEF,aAAc,UACdC,KAAM,KACNC,KAAM,WAER,CACEF,aAAc,UACdC,KAAM,WACNC,KAAM,YAGVD,KAAM,qBACNK,QAAS,CACP,CACEN,aAAc,UACdC,KAAM,cACNC,KAAM,WAER,CACEF,aAAc,UACdC,KAAM,YACNC,KAAM,YAGVC,gBAAiB,aACjBD,KAAM,YAER,CACEH,OAAQ,CACN,CACEC,aAAc,UACdC,KAAM,QACNC,KAAM,WAER,CACEF,aAAc,UACdC,KAAM,YACNC,KAAM,WAER,CACEF,aAAc,UACdC,KAAM,iBACNC,KAAM,WAER,CACEF,aAAc,UACdC,KAAM,eACNC,KAAM,WAER,CACEF,aAAc,UACdC,KAAM,KACNC,KAAM,WAER,CACEF,aAAc,UACdC,KAAM,WACNC,KAAM,WAER,CACEF,aAAc,OACdC,KAAM,aACNC,KAAM,QAER,CACEF,aAAc,QACdC,KAAM,IACNC,KAAM,SAER,CACEF,aAAc,UACdC,KAAM,IACNC,KAAM,WAER,CACEF,aAAc,UACdC,KAAM,IACNC,KAAM,YAGVD,KAAM,+BACNK,QAAS,CACP,CACEN,aAAc,UACdC,KAAM,cACNC,KAAM,WAER,CACEF,aAAc,UACdC,KAAM,YACNC,KAAM,YAGVC,gBAAiB,aACjBD,KAAM,YAER,CACEH,OAAQ,CACN,CACEC,aAAc,UACdC,KAAM,SACNC,KAAM,WAER,CACEF,aAAc,UACdC,KAAM,SACNC,KAAM,WAER,CACEF,aAAc,UACdC,KAAM,YACNC,KAAM,WAER,CACEF,aAAc,UACdC,KAAM,aACNC,KAAM,WAER,CACEF,aAAc,UACdC,KAAM,aACNC,KAAM,WAER,CACEF,aAAc,UACdC,KAAM,KACNC,KAAM,WAER,CACEF,aAAc,UACdC,KAAM,WACNC,KAAM,WAER,CACEF,aAAc,OACdC,KAAM,aACNC,KAAM,QAER,CACEF,aAAc,QACdC,KAAM,IACNC,KAAM,SAER,CACEF,aAAc,UACdC,KAAM,IACNC,KAAM,WAER,CACEF,aAAc,UACdC,KAAM,IACNC,KAAM,YAGVD,KAAM,4BACNK,QAAS,CACP,CACEN,aAAc,UACdC,KAAM,UACNC,KAAM,WAER,CACEF,aAAc,UACdC,KAAM,UACNC,KAAM,YAGVC,gBAAiB,aACjBD,KAAM,YAER,CACEH,OAAQ,CACN,CACEC,aAAc,UACdC,KAAM,YACNC,KAAM,WAER,CACEF,aAAc,YACdC,KAAM,OACNC,KAAM,aAER,CA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VC,gBAAiB,OACjBD,KAAM,YAER,CACEH,OAAQ,CACN,CACEC,aAAc,UACdC,KAAM,KACNC,KAAM,YAGVD,KAAM,SACNK,QAAS,GACTH,gBAAiB,aACjBD,KAAM,YAER,CACEH,OAAQ,CACN,CACEC,aAAc,UACdC,KAAM,YACNC,KAAM,YAGVD,KAAM,WACNK,QAAS,CACP,CACEN,aAAc,UACdC,KAAM,SACNC,KAAM,YAGVC,gBAAiB,aACjBD,KAAM,cAIJV,GACJ,+wmCCn5CW6B,GAAb,kDACE,WAAY/B,GAAkB,uCACtBC,GAAMC,GAAWF,GAF3B,0CAKE,SACEgC,EACArB,EACA1C,EACAoD,EACAY,EACAC,EACAC,EACAC,EACAC,EACAC,EACAjC,GAEA,OAAO,8DACL2B,EACArB,EACA1C,EACAoD,EACAY,EACAC,EACAC,EACAC,EACAC,EACAC,EACAjC,GAAa,MA7BnB,kCAgCE,SACE2B,EACArB,EACA1C,EACAoD,EACAY,EACAC,EACAC,EACAC,EACAC,EACAC,EACAjC,GAEA,OAAO,4EACL2B,EACArB,EACA1C,EACAoD,EACAY,EACAC,EACAC,EACAC,EACAC,EACAC,EACAjC,GAAa,MAxDnB,oBA2DE,SAAOrC,GACL,OAAO,8DAAaA,KA5DxB,qBA8DE,SAAQgC,GACN,OAAO,+DAAcA,MA/DzB,sBAiEE,SACEhC,EACAsC,GAEA,OAAO,IAAIC,IAASvC,EAASiC,GAAMK,OArEvC,GAAqCE,KAyE/BP,GAAO,CACX,CACEQ,OAAQ,CACN,CACEC,aAAc,kBACdC,KAAM,SACNC,KAAM,WAER,CACEF,aAAc,SACdC,KAAM,OACNC,KAAM,UAER,CACEF,aAAc,SACdC,KAAM,SACNC,KAAM,UAER,CACEF,aAAc,2BACdC,KAAM,UACNC,KAAM,WAER,CACEF,aAAc,4BACdC,KAAM,WACNC,KAAM,WAER,CACEF,aAAc,4BACdC,KAAM,WACNC,KAAM,WAER,CACEF,aAAc,4BACdC,KAAM,WACNC,KAAM,WAER,CACEF,aAAc,iCACdC,KAAM,iBACNC,KAAM,WAER,CACEF,aAAc,QACdC,KAAM,eACNC,KAAM,SAER,CACEF,aAAc,kBACdC,KAAM,mBACNC,KAAM,YAGVC,gBAAiB,aACjBD,KAAM,eAER,CACEE,WAAW,EACXL,OAAQ,CACN,CACEM,SAAS,EACTL,aAAc,UACdC,KAAM,KACNC,KAAM,WAER,CACEG,SAAS,EACTL,aAAc,UACdC,KAAM,gBACNC,KAAM,WAER,CACEG,SAAS,EACTL,aAAc,UACdC,KAAM,UACNC,KAAM,YAGVD,KAAM,WACNC,KAAM,SAER,CACEE,WAAW,EACXL,OAAQ,CACN,CACEM,SAAS,EACTL,aAAc,UACdC,KAAM,QACNC,KAAM,WAER,CACEG,SAAS,EACTL,aAAc,UACdC,KAAM,WACNC,KAAM,WAER,CACEG,SAAS,EACTL,aAAc,UACdC,KAAM,UACNC,KAAM,YAGVD,KAAM,WACNC,KAAM,SAER,CACEE,WAAW,EACXL,OAAQ,CACN,CACEM,SAAS,EACTL,aAAc,UACdC,KAAM,QACNC,KAAM,WAER,CACEG,SAAS,EACTL,aAAc,UACdC,KAAM,WACNC,KAAM,WAER,CACEG,SAAS,EACTL,aAAc,OACdC,KAAM,WACNC,KAAM,SAGVD,KAAM,iBACNC,KAAM,SAER,CACEE,WAAW,EACXL,OAAQ,CACN,CACEM,SAAS,EACTL,aAAc,UACdC,KAAM,KACNC,KAAM,WAER,CACEG,SAAS,EACTL,aAAc,UACdC,KAAM,SACNC,KAAM,YAGVD,KAAM,YACNC,KAAM,SAER,CACEE,WAAW,EACXL,OAAQ,CACN,CACEM,SAAS,EACTL,aAAc,UACdC,KAAM,KACNC,KAAM,YAGVD,KAAM,UACNC,KAAM,SAER,CACEE,WAAW,EACXL,OAAQ,CACN,CACEM,SAAS,EACTL,aAAc,UACdC,KAAM,OACNC,KAAM,WAER,CACEG,SAAS,EACTL,aAAc,UACdC,KAAM,oBACNC,KAAM,WAER,CACEG,SAAS,EACTL,aAAc,UACdC,KAAM,eACNC,KAAM,YAGVD,KAAM,mBACNC,KAAM,SAER,CACEE,WAAW,EACXL,OAAQ,CACN,CACEM,SAAS,EACTL,aAAc,UACdC,KAAM,OACNC,KAAM,WAER,CACEG,SAAS,EACTL,aAAc,UACdC,KAAM,UACNC,KAAM,WAER,CACEG,SAAS,EACTL,aAAc,UACdC,KAAM,SACNC,KAAM,YAGVD,KAAM,cACNC,KAAM,SAER,CACEE,WAAW,EACXL,OAAQ,CACN,CACEM,SAAS,EACTL,aAAc,UACdC,KAAM,OACNC,KAAM,WAER,CACEG,SAAS,EACTL,aAAc,UACdC,KAAM,UACNC,KAAM,WAER,CACEG,SAAS,EACTL,aAAc,UACdC,KAAM,SACNC,KAAM,YAGVD,KAAM,cACNC,KAAM,SAER,CACEE,WAAW,EACXL,OAAQ,CACN,CACEM,SAAS,EACTL,aAAc,UACdC,KAAM,OACNC,KAAM,WAER,CACEG,SAAS,EACTL,aAAc,UACdC,KAAM,KACNC,KAAM,WAER,CACEG,SAAS,EACTL,aAAc,UACdC,KAAM,UACNC,KAAM,YAGVD,KAAM,WACNC,KAAM,SAER,CACEE,WAAW,EACXL,OAAQ,CACN,CACEM,SAAS,EACTL,aAAc,UACdC,KAAM,UACNC,KAAM,WAER,CACEG,SAAS,EACTL,aAAc,UACdC,KAAM,YACNC,KAAM,WAER,CACEG,SAAS,EACTL,aAAc,UACdC,KAAM,SACNC,KAAM,YAGVD,KAAM,YACNC,KAAM,SAER,CACEH,OAAQ,GACRE,KAAM,qBACNK,QAAS,CACP,CACEN,aAAc,UACdC,KAAM,GACNC,KAAM,YAGVC,gBAAiB,OACjBD,KAAM,YAER,CACEH,OAAQ,GACRE,KAAM,eACNK,QAAS,CACP,CACEN,aAAc,UACdC,KAAM,GACNC,KAAM,YAGVC,gBAAiB,OACjBD,KAAM,YAER,CACEH,OAAQ,CACN,CACEC,aAAc,UACdC,KAAM,KACNC,KAAM,WAER,CACEF,aAAc,UACdC,KAAM,UACNC,KAAM,YAGVD,KAAM,UACNK,QAAS,GACTH,gBAAiB,aACjBD,KAAM,YAER,CACEH,OAAQ,GACRE,KAAM,kBACNK,QAAS,CACP,CACEN,aAAc,kBACdC,KAAM,GACNC,KAAM,YAGVC,gBAAiB,OACjBD,KAAM,YAER,CACEH,OAAQ,GACRE,KAAM,YACNK,QAAS,CACP,CACEN,aAAc,4BACdC,KAAM,GACNC,KAAM,YAGVC,gBAAiB,OACjBD,KAAM,YAER,CACEH,OAAQ,GACRE,KAAM,mBACNK,QAAS,CACP,CACEN,aAAc,UACdC,KAAM,UACNC,KAAM,YAGVC,gBAAiB,OACjBD,KAAM,YAER,CACEH,OAAQ,CACN,CACEC,aAAc,UACdC,KAAM,QACNC,KAAM,YAGVD,KAAM,YACNK,QAAS,CACP,CACEN,aAAc,UACdC,KAAM,GACNC,KAAM,YAGVC,gBAAiB,OACjBD,KAAM,YAER,CACEH,OAAQ,CACN,CACEC,aAAc,UACdC,KAAM,SACNC,KAAM,WAER,CACEF,aAAc,UACdC,KAAM,SACNC,KAAM,WAER,CACEF,aAAc,UACdC,KAAM,SACNC,KAAM,YAGVD,KAAM,wBACNK,QAAS,CACP,CACEN,aAAc,UACdC,KAAM,gBACNC,KAAM,WAER,CACEF,aAAc,UACdC,KAAM,UACNC,KAAM,YAGVC,gBAAiB,OACjBD,KAAM,YAER,CACEH,OAAQ,GACRE,KAAM,yBACNK,QAAS,CACP,CACEN,aAAc,UACdC,KAAM,GACNC,KAAM,YAGVC,gBAAiB,OACjBD,KAAM,YAER,CACEH,OAAQ,CACN,CACEC,aAAc,UACdC,KAAM,KACNC,KAAM,YAGVD,KAAM,WACNK,QAAS,GACTH,gBAAiB,aACjBD,KAAM,YAER,CACEH,OAAQ,CACN,CACEC,aAAc,UACdC,KAAM,UACNC,KAAM,YAGVD,KAAM,cACNK,QAAS,CACP,CACEN,aAAc,UACdC,KAAM,GACNC,KAAM,YAGVC,gBAAiB,OACjBD,KAAM,YAER,CACEH,OAAQ,CACN,CACEC,aAAc,UACdC,KAAM,OACNC,KAAM,YAGVD,KAAM,eACNK,QAAS,CACP,CACEN,aAAc,UACdC,KAAM,GACNC,KAAM,YAGVC,gBAAiB,OACjBD,KAAM,YAER,CACEH,OAAQ,CACN,CACEC,aAAc,UACdC,KAAM,OACNC,KAAM,WAER,CACEF,aAAc,UACdC,KAAM,UACNC,KAAM,YAGVD,KAAM,YACNK,QAAS,GACTH,gBAAiB,aACjBD,KAAM,YAER,CACEH,OAAQ,CACN,CACEC,aAAc,UACdC,KAAM,OACNC,KAAM,WAER,CACEF,aAAc,UACdC,KAAM,UACNC,KAAM,YAGVD,KAAM,UACNK,QAAS,CACP,CACEN,aAAc,OACdC,KAAM,GACNC,KAAM,SAGVC,gBAAiB,OACjBD,KAAM,YAER,CACEH,OAAQ,GACRE,KAAM,kBACNK,QAAS,CACP,CACEN,aAAc,gCACdC,KAAM,GACNC,KAAM,YAGVC,gBAAiB,OACjBD,KAAM,YAER,CACEH,OAAQ,CACN,CACEC,aAAc,UACdC,KAAM,QACNC,KAAM,WAER,CACEF,aAAc,UACdC,KAAM,WACNC,KAAM,YAGVD,KAAM,mBACNK,QAAS,CACP,CACEN,aAAc,OACdC,KAAM,GACNC,KAAM,SAGVC,gBAAiB,OACjBD,KAAM,YAER,CACEH,OAAQ,GACRE,KAAM,SACNK,QAAS,CACP,CACEN,aAAc,OACdC,KAAM,GACNC,KAAM,SAGVC,gBAAiB,OACjBD,KAAM,YAER,CACEH,OAAQ,GACRE,KAAM,YACNK,QAAS,CACP,CACEN,aAAc,4BACdC,KAAM,GACNC,KAAM,YAGVC,gBAAiB,OACjBD,KAAM,YAER,CACEH,OAAQ,GACRE,KAAM,eACNK,QAAS,CACP,CACEN,aAAc,UACdC,KAAM,GACNC,KAAM,YAGVC,gBAAiB,OACjBD,KAAM,YAER,CACEH,OAAQ,GACRE,KAAM,kCACNK,QAAS,CACP,CACEN,aAAc,UACdC,KAAM,GACNC,KAAM,YAGVC,gBAAiB,OACjBD,KAAM,YAER,CACEH,OAAQ,GACRE,KAAM,mBACNK,QAAS,CACP,CACEN,aAAc,UACdC,KAAM,GACNC,KAAM,YAGVC,gBAAiB,OACjBD,KAAM,YAER,CACEH,OAAQ,GACRE,KAAM,qBACNK,QAAS,CACP,CACEN,aAAc,UACdC,KAAM,GACNC,KAAM,YAGVC,gBAAiB,OACjBD,KAAM,YAER,CACEH,OAAQ,GACRE,KAAM,OACNK,QAAS,CACP,CACEN,aAAc,SACdC,KAAM,GACNC,KAAM,WAGVC,gBAAiB,OACjBD,KAAM,YAER,CACEH,OAAQ,CACN,CACEC,aAAc,UACdC,KAAM,GACNC,KAAM,YAGVD,KAAM,UACNK,QAAS,CACP,CACEN,aAAc,8BACdC,KAAM,QACNC,KAAM,SAER,CACEF,aAAc,UACdC,KAAM,SACNC,KAAM,WAER,CACEF,aAAc,UACdC,KAAM,SACNC,KAAM,WAER,CACEF,aAAc,UACdC,KAAM,eACNC,KAAM,WAER,CACEF,aAAc,UACdC,KAAM,UACNC,KAAM,WAER,CACEF,aAAc,UACdC,KAAM,UACNC,KAAM,WAER,CACEF,aAAc,UACdC,KAAM,SACNC,KAAM,YAGVC,gBAAiB,OACjBD,KAAM,YAER,CACEH,OAAQ,GACRE,KAAM,iBACNK,QAAS,CACP,CACEN,aAAc,2BACdC,KAAM,GACNC,KAAM,YAGVC,gBAAiB,OACjBD,KAAM,YAER,CACEH,OAAQ,GACRE,KAAM,YACNK,QAAS,CACP,CACEN,aAAc,4BACdC,KAAM,GACNC,KAAM,YAGVC,gBAAiB,OACjBD,KAAM,YAER,CACEH,OAAQ,CACN,CACEC,aAAc,UACdC,KAAM,UACNC,KAAM,YAGVD,KAAM,UACNK,QAAS,CACP,CACEN,aAAc,UACdC,KAAM,GACNC,KAAM,YAGVC,gBAAiB,OACjBD,KAAM,YAER,CACEH,OAAQ,CACN,CACEC,aAAc,UACdC,KAAM,SACNC,KAAM,YAGVD,KAAM,UACNK,QAAS,CACP,CACEN,aAAc,UACdC,KAAM,GACNC,KAAM,YAGVC,gBAAiB,OACjBD,KAAM,YAER,CACEH,OAAQ,GACRE,KAAM,gBACNK,QAAS,CACP,CACEN,aAAc,iCACdC,KAAM,GACNC,KAAM,YAGVC,gBAAiB,OACjBD,KAAM,YAER,CACEH,OAAQ,CACN,CACEC,aAAc,UACdC,KAAM,KACNC,KAAM,YAGVD,KAAM,WACNK,QAAS,CACP,CACEN,aAAc,UACdC,KAAM,GACNC,KAAM,YAGVC,gBAAiB,OACjBD,KAAM,YAER,CACEH,OAAQ,CACN,CACEC,aAAc,UACdC,KAAM,UACNC,KAAM,WAER,CACEF,aAAc,UACdC,KAAM,SACNC,KAAM,WAER,CACEF,aAAc,UACdC,KAAM,WACNC,KAAM,YAGVD,KAAM,cACNK,QAAS,CACP,CACEN,aAAc,UACdC,KAAM,QACNC,KAAM,YAGVC,gBAAiB,aACjBD,KAAM,YAER,CACEH,OAAQ,CACN,CACEC,aAAc,UACdC,KAAM,OACNC,KAAM,WAER,CACEF,aAAc,UACdC,KAAM,UACNC,KAAM,YAGVD,KAAM,eACNK,QAAS,GACTH,gBAAiB,aACjBD,KAAM,YAER,CACEH,OAAQ,CACN,CACEC,aAAc,UACdC,KAAM,OACNC,KAAM,WAER,CACEF,aAAc,UACdC,KAAM,UACNC,KAAM,YAGVD,KAAM,aACNK,QAAS,GACTH,gBAAiB,aACjBD,KAAM,YAER,CACEH,OAAQ,GACRE,KAAM,iBACNK,QAAS,CACP,CACEN,aAAc,2BACdC,KAAM,GACNC,KAAM,YAGVC,gBAAiB,OACjBD,KAAM,YAER,CACEH,OAAQ,CACN,CACEC,aAAc,UACdC,KAAM,OACNC,KAAM,WAER,CACEF,aAAc,UACdC,KAAM,KACNC,KAAM,WAER,CACEF,aAAc,UACdC,KAAM,UACNC,KAAM,YAGVD,KAAM,mBACNK,QAAS,GACTH,gBAAiB,aACjBD,KAAM,YAER,CACEH,OAAQ,CACN,CACEC,aAAc,UACdC,KAAM,OACNC,KAAM,WAER,CACEF,aAAc,UACdC,KAAM,KACNC,KAAM,WAER,CACEF,aAAc,UACdC,KAAM,UACNC,KAAM,WAER,CACEF,aAAc,QACdC,KAAM,QACNC,KAAM,UAGVD,KAAM,mBACNK,QAAS,GACTH,gBAAiB,aACjBD,KAAM,YAER,CACEH,OAAQ,CACN,CACEC,aAAc,UACdC,KAAM,SACNC,KAAM,WAER,CACEF,aAAc,UACdC,KAAM,SACNC,KAAM,WAER,CACEF,aAAc,UACdC,KAAM,SACNC,KAAM,WAER,CACEF,aAAc,UACdC,KAAM,SACNC,KAAM,YAGVD,KAAM,aACNK,QAAS,CACP,CACEN,aAAc,UACdC,KAAM,KACNC,KAAM,YAGVC,gBAAiB,aACjBD,KAAM,YAER,CACEH,OAAQ,CACN,CACEC,aAAc,UACdC,KAAM,WACNC,KAAM,WAER,CACEF,aAAc,OACdC,KAAM,WACNC,KAAM,SAGVD,KAAM,oBACNK,QAAS,GACTH,gBAAiB,aACjBD,KAAM,YAER,CACEH,OAAQ,CACN,CACEC,aAAc,UACdC,KAAM,QACNC,KAAM,YAGVD,KAAM,4BACNK,QAAS,GACTH,gBAAiB,aACjBD,KAAM,YAER,CACEH,OAAQ,CACN,CACEC,aAAc,gCACdC,KAAM,aACNC,KAAM,YAGVD,KAAM,oBACNK,QAAS,GACTH,gBAAiB,aACjBD,KAAM,YAER,CACEH,OAAQ,CACN,CACEC,aAAc,UACdC,KAAM,gBACNC,KAAM,YAGVD,KAAM,kBACNK,QAAS,GACTH,gBAAiB,aACjBD,KAAM,YAER,CACEH,OAAQ,CACN,CACEC,aAAc,UACdC,KAAM,QACNC,KAAM,YAGVD,KAAM,sBACNK,QAAS,GACTH,gBAAiB,aACjBD,KAAM,YAER,CACEH,OAAQ,CACN,CACEC,aAAc,UACdC,KAAM,QACNC,KAAM,YAGVD,KAAM,wBACNK,QAAS,GACTH,gBAAiB,aACjBD,KAAM,YAER,CACEH,OAAQ,CACN,CACEC,aAAc,4BACdC,KAAM,aACNC,KAAM,WAER,CACEF,aAAc,4BACdC,KAAM,aACNC,KAAM,WAER,CACEF,aAAc,4BACdC,KAAM,aACNC,KAAM,YAGVD,KAAM,qBACNK,QAAS,GACTH,gBAAiB,aACjBD,KAAM,YAER,CACEH,OAAQ,CACN,CACEC,aAAc,2BACdC,KAAM,QACNC,KAAM,YAGVD,KAAM,oBACNK,QAAS,GACTH,gBAAiB,aACjBD,KAAM,YAER,CACEH,OAAQ,CACN,CACEC,aAAc,UACdC,KAAM,YACNC,KAAM,YAGVD,KAAM,4BACNK,QAAS,GACTH,gBAAiB,aACjBD,KAAM,YAER,CACEH,OAAQ,GACRE,KAAM,yBACNK,QAAS,CACP,CACEN,aAAc,UACdC,KAAM,GACNC,KAAM,YAGVC,gBAAiB,OACjBD,KAAM,YAER,CACEH,OAAQ,CACN,CACEC,aAAc,SACdC,KAAM,cACNC,KAAM,WAGVD,KAAM,oBACNK,QAAS,CACP,CACEN,aAAc,OACdC,KAAM,GACNC,KAAM,SAGVC,gBAAiB,OACjBD,KAAM,YAER,CACEH,OAAQ,GACRE,KAAM,SACNK,QAAS,CACP,CACEN,aAAc,SACdC,KAAM,GACNC,KAAM,WAGVC,gBAAiB,OACjBD,KAAM,YAER,CACEH,OAAQ,GACRE,KAAM,QACNK,QAAS,CACP,CACEN,aAAc,kBACdC,KAAM,GACNC,KAAM,YAGVC,gBAAiB,OACjBD,KAAM,YAER,CACEH,OAAQ,CACN,CACEC,aAAc,UACdC,KAAM,QACNC,KAAM,YAGVD,KAAM,eACNK,QAAS,CACP,CACEN,aAAc,UACdC,KAAM,GACNC,KAAM,YAGVC,gBAAiB,OACjBD,KAAM,YAER,CACEH,OAAQ,CACN,CACEC,aAAc,UACdC,KAAM,QACNC,KAAM,WAER,CACEF,aAAc,UACdC,KAAM,QACNC,KAAM,YAGVD,KAAM,sBACNK,QAAS,CACP,CACEN,aAAc,UACdC,KAAM,GACNC,KAAM,YAGVC,gBAAiB,OACjBD,KAAM,YAER,CACEH,OAAQ,CACN,CACEC,aAAc,UACdC,KAAM,UACNC,KAAM,YAGVD,KAAM,WACNK,QAAS,CACP,CACEN,aAAc,SACdC,KAAM,GACNC,KAAM,WAGVC,gBAAiB,OACjBD,KAAM,YAER,CACEH,OAAQ,GACRE,KAAM,eACNK,QAAS,CACP,CACEN,aAAc,UACdC,KAAM,UACNC,KAAM,YAGVC,gBAAiB,OACjBD,KAAM,YAER,CACEH,OAAQ,GACRE,KAAM,cACNK,QAAS,CACP,CACEN,aAAc,UACdC,KAAM,GACNC,KAAM,YAGVC,gBAAiB,OACjBD,KAAM,YAER,CACEH,OAAQ,CACN,CACEC,aAAc,UACdC,KAAM,GACNC,KAAM,YAGVD,KAAM,WACNK,QAAS,CACP,CACEN,aAAc,+BACdC,KAAM,QACNC,KAAM,SAER,CACEF,aAAc,UACdC,KAAM,QACNC,KAAM,WAER,CACEF,aAAc,UACdC,KAAM,SACNC,KAAM,WAER,CACEF,aAAc,UACdC,KAAM,oBACNC,KAAM,YAGVC,gBAAiB,OACjBD,KAAM,YAER,CACEH,OAAQ,CACN,CACEC,aAAc,UACdC,KAAM,OACNC,KAAM,WAER,CACEF,aAAc,UACdC,KAAM,KACNC,KAAM,WAER,CACEF,aAAc,UACdC,KAAM,UACNC,KAAM,YAGVD,KAAM,eACNK,QAAS,GACTH,gBAAiB,aACjBD,KAAM,YAER,CACEH,OAAQ,GACRE,KAAM,kBACNK,QAAS,CACP,CACEN,aAAc,UACdC,KAAM,GACNC,KAAM,YAGVC,gBAAiB,OACjBD,KAAM,YAER,CACEH,OAAQ,GACRE,KAAM,gBACNK,QAAS,CACP,CACEN,aAAc,UACdC,KAAM,GACNC,KAAM,YAGVC,gBAAiB,OACjBD,KAAM,YAER,CACEH,OAAQ,CACN,CACEC,aAAc,UACdC,KAAM,KACNC,KAAM,YAGVD,KAAM,SACNK,QAAS,GACTH,gBAAiB,aACjBD,KAAM,YAER,CACEH,OAAQ,CACN,CACEC,aAAc,UACdC,KAAM,YACNC,KAAM,YAGVD,KAAM,WACNK,QAAS,CACP,CACEN,aAAc,UACdC,KAAM,SACNC,KAAM,YAGVC,gBAAiB,aACjBD,KAAM,aAIJV,GACJ,uvoCC/3CID,IA7B6CO,IA6BtC,CACX,CACEC,OAAQ,CACN,CACEC,aAAc,UACdC,KAAM,SACNC,KAAM,WAER,CACEF,aAAc,UACdC,KAAM,GACNC,KAAM,WAER,CACEF,aAAc,UACdC,KAAM,SACNC,KAAM,WAER,CACEF,aAAc,UACdC,KAAM,eACNC,KAAM,WAER,CACEF,aAAc,OACdC,KAAM,GACNC,KAAM,SAGVD,KAAM,gBACNK,QAAS,GACTH,gBAAiB,OACjBD,KAAM,cAIJV,GACJ,utBC/BID,IAnC4CO,IAmCrC,CACX,CACEC,OAAQ,CACN,CACEC,aAAc,oBACdC,KAAM,QACNC,KAAM,YAGVC,gBAAiB,aACjBD,KAAM,eAER,CACEE,WAAW,EACXL,OAAQ,CACN,CACEM,SAAS,EACTL,aAAc,UACdC,KAAM,gBACNC,KAAM,WAER,CACEG,SAAS,EACTL,aAAc,UACdC,KAAM,WACNC,KAAM,YAGVD,KAAM,uBACNC,KAAM,SAER,CACEH,OAAQ,CACN,CACEC,aAAc,UACdC,KAAM,OACNC,KAAM,YAGVD,KAAM,UACNK,QAAS,GACTH,gBAAiB,aACjBD,KAAM,YAER,CACEH,OAAQ,CACN,CACEC,aAAc,UACdC,KAAM,QACNC,KAAM,WAER,CACEF,aAAc,UACdC,KAAM,WACNC,KAAM,YAGVD,KAAM,aACNK,QAAS,GACTH,gBAAiB,aACjBD,KAAM,YAER,CACEH,OAAQ,GACRE,KAAM,eACNK,QAAS,CACP,CACEN,aAAc,UACdC,KAAM,GACNC,KAAM,YAGVC,gBAAiB,OACjBD,KAAM,YAER,CACEH,OAAQ,CACN,CACEC,aAAc,UACdC,KAAM,WACNC,KAAM,WAER,CACEF,aAAc,UACdC,KAAM,WACNC,KAAM,YAGVD,KAAM,oBACNK,QAAS,GACTH,gBAAiB,aACjBD,KAAM,YAER,CACEH,OAAQ,GACRE,KAAM,QACNK,QAAS,CACP,CACEN,aAAc,UACdC,KAAM,GACNC,KAAM,YAGVC,gBAAiB,OACjBD,KAAM,YAER,CACEH,OAAQ,CACN,CACEC,aAAc,UACdC,KAAM,GACNC,KAAM,YAGVD,KAAM,QACNK,QAAS,CACP,CACEN,aAAc,OACdC,KAAM,GACNC,KAAM,SAGVC,gBAAiB,OACjBD,KAAM,YAER,CACEH,OAAQ,CACN,CACEC,aAAc,UACdC,KAAM,QACNC,KAAM,WAER,CACEF,aAAc,UACdC,KAAM,WACNC,KAAM,YAGVD,KAAM,YACNK,QAAS,GACTH,gBAAiB,aACjBD,KAAM,YAER,CACEH,OAAQ,GACRE,KAAM,oBACNK,QAAS,GACTH,gBAAiB,aACjBD,KAAM,YAER,CACEH,OAAQ,GACRE,KAAM,cACNK,QAAS,CACP,CACEN,aAAc,oBACdC,KAAM,GACNC,KAAM,YAGVC,gBAAiB,OACjBD,KAAM,YAER,CACEH,OAAQ,CACN,CACEC,aAAc,UACdC,KAAM,WACNC,KAAM,YAGVD,KAAM,kBACNK,QAAS,GACTH,gBAAiB,aACjBD,KAAM,YAER,CACEH,OAAQ,CACN,CACEC,aAAc,UACdC,KAAM,WACNC,KAAM,YAGVD,KAAM,oBACNK,QAAS,GACTH,gBAAiB,aACjBD,KAAM,cAIJV,GACJ,m/GC1MID,IAzB+BO,IAyBxB,CACX,CACEC,OAAQ,GACRI,gBAAiB,aACjBD,KAAM,eAER,CACEE,WAAW,EACXL,OAAQ,CACN,CACEM,SAAS,EACTL,aAAc,UACdC,KAAM,QACNC,KAAM,WAER,CACEG,SAAS,EACTL,aAAc,UACdC,KAAM,UACNC,KAAM,WAER,CACEG,SAAS,EACTL,aAAc,UACdC,KAAM,QACNC,KAAM,YAGVD,KAAM,WACNC,KAAM,SAER,CACEE,WAAW,EACXL,OAAQ,CACN,CACEM,SAAS,EACTL,aAAc,UACdC,KAAM,gBACNC,KAAM,WAER,CACEG,SAAS,EACTL,aAAc,UACdC,KAAM,WACNC,KAAM,YAGVD,KAAM,uBACNC,KAAM,SAER,CACEE,WAAW,EACXL,OAAQ,CACN,CACEM,SAAS,EACTL,aAAc,UACdC,KAAM,OACNC,KAAM,WAER,CACEG,SAAS,EACTL,aAAc,UACdC,KAAM,KACNC,KAAM,WAER,CACEG,SAAS,EACTL,aAAc,UACdC,KAAM,QACNC,KAAM,YAGVD,KAAM,WACNC,KAAM,SAER,CACEH,OAAQ,CACN,CACEC,aAAc,UACdC,KAAM,QACNC,KAAM,WAER,CACEF,aAAc,UACdC,KAAM,UACNC,KAAM,YAGVD,KAAM,YACNK,QAAS,CACP,CACEN,aAAc,UACdC,KAAM,GACNC,KAAM,YAGVC,gBAAiB,OACjBD,KAAM,YAER,CACEH,OAAQ,CACN,CACEC,aAAc,UACdC,KAAM,UACNC,KAAM,WAER,CACEF,aAAc,UACdC,KAAM,SACNC,KAAM,YAGVD,KAAM,UACNK,QAAS,CACP,CACEN,aAAc,OACdC,KAAM,GACNC,KAAM,SAGVC,gBAAiB,aACjBD,KAAM,YAER,CACEH,OAAQ,CACN,CACEC,aAAc,UACdC,KAAM,UACNC,KAAM,YAGVD,KAAM,YACNK,QAAS,CACP,CACEN,aAAc,UACdC,KAAM,GACNC,KAAM,YAGVC,gBAAiB,OACjBD,KAAM,YAER,CACEH,OAAQ,GACRE,KAAM,WACNK,QAAS,CACP,CACEN,aAAc,QACdC,KAAM,GACNC,KAAM,UAGVC,gBAAiB,OACjBD,KAAM,YAER,CACEH,OAAQ,CACN,CACEC,aAAc,UACdC,KAAM,UACNC,KAAM,WAER,CACEF,aAAc,UACdC,KAAM,kBACNC,KAAM,YAGVD,KAAM,oBACNK,QAAS,CACP,CACEN,aAAc,OACdC,KAAM,GACNC,KAAM,SAGVC,gBAAiB,aACjBD,KAAM,YAER,CACEH,OAAQ,CACN,CACEC,aAAc,UACdC,KAAM,UACNC,KAAM,WAER,CACEF,aAAc,UACdC,KAAM,aACNC,KAAM,YAGVD,KAAM,oBACNK,QAAS,CACP,CACEN,aAAc,OACdC,KAAM,GACNC,KAAM,SAGVC,gBAAiB,aACjBD,KAAM,YAER,CACEH,OAAQ,CACN,CACEC,aAAc,UACdC,KAAM,KACNC,KAAM,WAER,CACEF,aAAc,UACdC,KAAM,SACNC,KAAM,YAGVD,KAAM,OACNK,QAAS,GACTH,gBAAiB,aACjBD,KAAM,YAER,CACEH,OAAQ,GACRE,KAAM,OACNK,QAAS,CACP,CACEN,aAAc,SACdC,KAAM,GACNC,KAAM,WAGVC,gBAAiB,OACjBD,KAAM,YAER,CACEH,OAAQ,GACRE,KAAM,QACNK,QAAS,CACP,CACEN,aAAc,UACdC,KAAM,GACNC,KAAM,YAGVC,gBAAiB,OACjBD,KAAM,YAER,CACEH,OAAQ,GACRE,KAAM,oBACNK,QAAS,GACTH,gBAAiB,aACjBD,KAAM,YAER,CACEH,OAAQ,GACRE,KAAM,SACNK,QAAS,CACP,CACEN,aAAc,SACdC,KAAM,GACNC,KAAM,WAGVC,gBAAiB,OACjBD,KAAM,YAER,CACEH,OAAQ,GACRE,KAAM,cACNK,QAAS,CACP,CACEN,aAAc,UACdC,KAAM,GACNC,KAAM,YAGVC,gBAAiB,OACjBD,KAAM,YAER,CACEH,OAAQ,CACN,CACEC,aAAc,UACdC,KAAM,YACNC,KAAM,WAER,CACEF,aAAc,UACdC,KAAM,SACNC,KAAM,YAGVD,KAAM,WACNK,QAAS,CACP,CACEN,aAAc,OACdC,KAAM,GACNC,KAAM,SAGVC,gBAAiB,aACjBD,KAAM,YAER,CACEH,OAAQ,CACN,CACEC,aAAc,UACdC,KAAM,SACNC,KAAM,WAER,CACEF,aAAc,UACdC,KAAM,YACNC,KAAM,WAER,CACEF,aAAc,UACdC,KAAM,SACNC,KAAM,YAGVD,KAAM,eACNK,QAAS,CACP,CACEN,aAAc,OACdC,KAAM,GACNC,KAAM,SAGVC,gBAAiB,aACjBD,KAAM,YAER,CACEH,OAAQ,CACN,CACEC,aAAc,UACdC,KAAM,WACNC,KAAM,YAGVD,KAAM,oBACNK,QAAS,GACTH,gBAAiB,aACjBD,KAAM,cAIJV,GACJ,ymQCvXWqC,GAAb,4FACE,SACEvE,EACAsC,GAEA,OAAO,IAAIC,IACTvC,EACAiC,GACAK,OARN,KAaML,GAAO,CACX,CACEQ,OAAQ,GACRE,KAAM,WACNK,QAAS,CACP,CACEN,aAAc,QACdC,KAAM,GACNC,KAAM,UAGVC,gBAAiB,OACjBD,KAAM,YAER,CACEH,OAAQ,GACRE,KAAM,cACNK,QAAS,CACP,CACEN,aAAc,SACdC,KAAM,GACNC,KAAM,WAGVC,gBAAiB,OACjBD,KAAM,YAER,CACEH,OAAQ,CACN,CACEC,aAAc,SACdC,KAAM,WACNC,KAAM,WAGVD,KAAM,eACNK,QAAS,CACP,CACEN,aAAc,SACdC,KAAM,UACNC,KAAM,UAER,CACEF,aAAc,SACdC,KAAM,SACNC,KAAM,UAER,CACEF,aAAc,UACdC,KAAM,YACNC,KAAM,WAER,CACEF,aAAc,UACdC,KAAM,YACNC,KAAM,WAER,CACEF,aAAc,SACdC,KAAM,kBACNC,KAAM,WAGVC,gBAAiB,OACjBD,KAAM,YAER,CACEH,OAAQ,GACRE,KAAM,kBACNK,QAAS,CACP,CACEN,aAAc,SACdC,KAAM,UACNC,KAAM,UAER,CACEF,aAAc,SACdC,KAAM,SACNC,KAAM,UAER,CACEF,aAAc,UACdC,KAAM,YACNC,KAAM,WAER,CACEF,aAAc,UACdC,KAAM,YACNC,KAAM,WAER,CACEF,aAAc,SACdC,KAAM,kBACNC,KAAM,WAGVC,gBAAiB,OACjBD,KAAM,YAER,CACEH,OAAQ,GACRE,KAAM,UACNK,QAAS,CACP,CACEN,aAAc,UACdC,KAAM,GACNC,KAAM,YAGVC,gBAAiB,OACjBD,KAAM,aCpIH,SAAS4B,GAAetE,GAC7B,OAAOuE,OAAO,IAAM,IAAIC,OAAOxE,ICC1B,SAASyE,GAAkBC,EAAgB1E,GAA0C,IAAxB2E,EAAuB,uDAAH,EAChFC,EAAOF,EAAS,GAAK,IAAM,GACjCA,EAASA,EAAS,IAAe,GAAVA,EAAeA,EACtC,IAAMG,EAAQP,GAAetE,GACvB8E,EAAUJ,EAASG,EACnBE,EAAaL,EAASI,EAAUD,EAChCG,EAASD,EAAWE,WAAWC,SAASlF,EAAU,KAAK7E,MAAM,EAAGwJ,GACtE,OAAOC,EAAOE,EAAQG,WAAa,IAAMD,ECA3C,IAAMG,GAAe,CACnBC,MAAO,OACP1C,KAAM,OACN2C,OAAQ,GACRC,aAAc,IACdZ,OAAQ,EACRa,aAAc,IACdC,OAAQ,GACRC,WAAY,KACZC,cAAe,KACfC,cAAe,IAGXC,GAAgBC,gBAAoB,CACxCC,MAAOX,GACPY,aAAc,aACdC,mBAAoB,aACpBC,gBAAiB,aACjBC,OAAQ,SAACC,OAEEC,GAAkB,kBAAMP,aAAiBD,KACzCS,GAAwB,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAChCC,EAAc5E,IACd6E,EAAMrJ,cACZ,EAA0B0I,WAAeV,IAAzC,mBAAOW,EAAP,KAAcW,EAAd,KACMrB,EAAQU,EAAMV,MACdW,EAAeF,cAAA,sBAAkB,gCAAAa,EAAA,yDAClB,MAAfF,EAAIG,SAAkC,MAAfH,EAAII,SAAkC,MAAfL,EADb,6DAInBlC,GAJmB,KAIkBkC,EAAY1F,aAAauE,GAJ3C,SAIyDoB,EAAII,QAAQC,UAAUL,EAAIG,SAJnF,0BAI/BG,EAJ+B,KAIUC,QAJV,+BAKXD,EAAUE,WAAWC,kBALV,eAK/BC,EAL+B,OAM/BzB,EAAalB,OAAO2C,EAAYC,OAAOlC,YAC7CwB,GAAS,SAAAN,GACP,OAAO,2BACFA,GADL,IAEEzB,OAAQ,EACRa,aAAc,IACdF,OAAQI,EACRH,aAAcb,GAAkBgB,EAAY,EAAG,GAC/CA,WAAYlB,OAAO2C,EAAYC,OAAOlC,iBAdL,kBAiB9BV,OAAO2C,EAAYC,OAAOlC,aAjBI,4CAkBpC,CAACG,EAAOoB,EAAIG,QAASJ,EAAaC,EAAII,UACnCX,EAAkBJ,cAAA,sBAAkB,8BAAAa,EAAA,yDACrB,MAAfH,GAAsC,MAAfC,EAAIG,SAAkC,MAAfH,EAAII,QADd,iEAInBJ,EAAII,QAAQC,UAAUL,EAAIG,SAJP,OAIlC7E,EAJkC,QAKlCf,EAAS,CAACwF,EAAYlG,SACrB+G,KAAP,MAAArG,EAAM,YAAS1F,OAAOD,KAAKmL,EAAYxF,QAAQ1G,KAAI,SAAAgN,GAAC,OAAKd,EAAYxF,OAAesG,QACpFtG,EAAON,QAAP,uCAAe,WAAM6G,GAAN,eAAAZ,EAAA,sEACS7E,EAAakF,QAAQO,EAAIxH,QAASgC,GAAQyF,UAAUf,EAAIG,SADjE,OACPa,EADO,OAEbf,GAAS,SAAAN,GAAC,kCACLA,GADK,IAERR,cAAc,2BACTQ,EAAER,eADM,kBAEV2B,EAAIvH,OAASyH,EAAQC,kBANb,2CAAf,uDAPwC,2CAiBvC,CAACjB,EAAIG,QAASJ,EAAaC,EAAII,UAElCf,aAAgB,WACdI,MACC,CAACA,IAEJ,IAAMC,EAASL,eAAkB,SAAA6B,GAC/BjB,GAAS,SAAAN,GAAC,kCAAUA,GAAMuB,QACzB,IAEH7B,aAAgB,WACdE,MACC,CAACA,IAEJ,IAAMC,EAAqBH,cAAA,sBAAkB,sBAAAa,EAAA,0FAAgB,IAC7D,OACE,cAACd,GAAc+B,SAAf,CACEC,MAAO,CACL9B,QACAC,eACAC,qBACAE,SACAD,mBANJ,SASGK,KC3FA,SAASuB,KACd,MAA2C1K,cAAnCC,EAAR,EAAQA,UAAWuJ,EAAnB,EAAmBA,QAASmB,EAA5B,EAA4BA,WAI5B,OACE,qBACEpI,QAAO,sBAAE,sBAAAgH,EAAA,sDACO/K,IALqEyB,GAMhFA,EAAkB2K,QAErBD,IAJO,2CAMTE,UAAU,mCAPZ,SASE,eAACzI,EAAA,EAAD,2BAEc,MAAXoH,EAAkB,eAAiBA,EAAO,UAAMA,EAAQsB,UAAU,EAAG,GAA3B,cAAmCtB,EAAQsB,UAAUtB,EAAQhI,OAAS,IAAO,QCnBzH,SAASuJ,KACd,IAAMtG,EAAUhC,IAEhB,OACE,mCACE,eAACL,EAAA,EAAD,WACE,gDACY,MAAXqC,EAAkB,iDAA6BA,OAMzCsG,I,uCCXFC,GAAW,SAACC,GACvB,IAAMC,EAAWC,eACXC,EAAWC,eACjB,OACE,cAACC,GAAA,EAAD,CAAOC,UAAU,MAAMC,WAAW,SAASC,eAAe,SAA1D,SACE,eAACC,GAAA,EAAD,CAAmBrJ,MAAM,UAAUoI,MAA6B,KAAtBS,EAASS,UAAyC,MAAtBT,EAASS,SAAmB,OAAST,EAASS,SAAUC,WAAS,EAAvI,UACE,cAACC,GAAA,EAAD,CACEtJ,QAAS,WACP6I,EAAS,QACTH,EAAMa,YAERrB,MAAM,OALR,iBASA,cAACoB,GAAA,EAAD,CACEtJ,QAAS,WACP6I,EAAS,aACTH,EAAMa,YAERrB,MAAM,YALR,qBASA,cAACoB,GAAA,EAAD,CACEtJ,QAAS,WACP6I,EAAS,SACTH,EAAMa,YAERrB,MAAM,QALR,kBASA,cAACoB,GAAA,EAAD,CACEtJ,QAAS,WACP6I,EAAS,cACTH,EAAMa,YAERrB,MAAM,aALR,6B,6BCrBFsB,GAAkB,WACtB,IAAM/C,EAAIC,KACV,OACE,cAAC,GAAD,CACE6C,SAAU,WACR9C,EAAEJ,eACFI,EAAEF,sBAMJkD,GAAkB,WACtB,IAAMC,EAAOC,eACPC,EAAiB3H,IACjB6E,EAAMrJ,cACNoM,EAAW,SAACC,EAAc9E,EAAgB1E,GAA/B,6BAAoD,4BAAA0G,EAAA,kEACnDlD,GADmD,KAC1BgG,EAD0B,SACdhD,EAAII,QAAQC,UAAUL,EAAIG,SADZ,wCAClCI,QADkC,qBACsB0C,KAAKC,KAAMC,WAAWjF,EAAQ1E,IADpD,cAC7D4J,EAD6D,OAEnER,EAAKS,gBAAgB,aAF8C,UAG7DD,EAAEE,KAAK,GAHsD,QAInEV,EAAKS,gBAAgB,kBAJ8C,6CAM/DE,EAAkB,SAACrF,EAAgBU,GACvC,6BAAO,sCAAAsB,EAAA,6DACCsD,EAAkBV,EAAezI,aAAauE,GAD/C,KAEuB1B,GAFvB,KAEwDsG,EAFxD,SAE+ExD,EAAII,QAAQC,UAAUL,EAAIG,SAFzG,wCAEgDI,QAFhD,mCAECkD,EAFD,iBAIoBA,EAAchD,kBAJlC,wBAIGE,EAJH,EAIGA,OACF+C,EAAW/C,EAAOM,WAAcN,EAAOM,WAAa/C,EAAU,KAL/D,UAMWuF,EAAcE,SAASD,GANlC,eAMCN,EAND,OAOLR,EAAKS,gBAAgB,YAAczE,EAAQ,UAPtC,UAQCwE,EAAEE,KAAK,GARR,QASLV,EAAKS,gBAAgB,iBAThB,6CAaT,OACE,qBAAKrN,MAAO,CAAEC,SAAU,WAAYE,KAAM,EAAGyN,OAAQ,IAArD,SACE,eAAC3B,GAAA,EAAD,CAAOnJ,GAAI,CAAE+K,WAAY,GAAK3B,UAAU,MAAM4B,QAAS,EAAvD,UACE,cAAC7K,EAAA,EAAD,CAAQC,QAAS6J,EAAS/H,EAASC,QAAQpB,OAAOP,QAAS,QAAS,KAAMyK,KAAK,QAAQC,QAAQ,YAAYhL,MAAM,YAAjH,6BAGA,cAACC,EAAA,EAAD,CAAQC,QAAS6J,EAAS/H,EAASC,QAAQV,OAAOZ,KAAKL,QAAS,KAAM,MAAOyK,KAAK,QAAQC,QAAQ,YAAYhL,MAAM,YAApH,0BAGA,cAACC,EAAA,EAAD,CAAQC,QAASqK,EAAgB,GAAI,QAASQ,KAAK,QAAQC,QAAQ,YAAYhL,MAAM,YAArF,4BAGA,cAACC,EAAA,EAAD,CAAQC,QAASqK,GAAiB,GAAI,QAASQ,KAAK,QAAQC,QAAQ,YAAYhL,MAAM,YAAtF,kCAQD,SAASiL,KACd,MAA0BtN,cAAlBS,EAAR,EAAQA,OAAQzB,EAAhB,EAAgBA,MACVuO,E9B3CU,QADIvN,cAAZqB,Q8B8CR,OACE,qCACE,eAACa,EAAA,EAAD,CAAKC,GAAI,CAAEzC,MAAO,OAAQ8N,OAAQ,GAAIlO,SAAU,YAAhD,UACE,eAACmO,GAAA,EAAD,CAASJ,QAAQ,QAAjB,UACE,eAACnL,EAAA,EAAD,CAAKC,GAAI,CAAEuL,QAAS,OAAQC,cAAe,OAA3C,UACE,eAACvL,EAAA,EAAD,WAAa3B,EAAS,eAAOzB,EAAQ,eAAO,eAA5C,UACA,cAAC+L,GAAD,OAGF,cAAC7I,EAAA,EAAD,CAAKC,GAAI,CAAEyL,SAAU,EAAGF,QAAS,OAAQC,cAAe,SACxD,cAACjD,GAAD,OAEF,qBAAKrL,MAAO,CAAEC,SAAU,WAAYC,IAAK,EAAGC,KAAM,MAAOC,UAAW,oBAApE,SACE,cAAC,GAAD,SAGH8N,GAAa,cAAC,GAAD,OAKLD,I,8BC3FR,SAASO,KACd,IAAM7E,EAAIC,KACJ6E,EAAOtJ,IACPuJ,EAAkB7P,OAAOD,KAAK6P,EAAKlK,QAAQoK,QAAO,SAAAC,GAAC,MAAU,WAANA,KAC7D,OAAO,cAACC,GAAA,EAAD,CAAMzD,MAAOzB,EAAEL,MAAMV,MAArB,SACJ8F,EAAgB7Q,KAAI,SAAAiN,GACnB,IAAMgE,EAAIhE,EAAInM,MAAM,GACpB,OAAO,cAACoQ,GAAA,EAAD,CAAK7L,QAAS,kBAAMyG,EAAED,OAAO,CAAEd,MAAOkC,KAAQM,MAAON,EAAekE,KAAM,cAAC,KAAD,CAAM/I,KAAM6I,EAAGf,KAAM,KAAQkB,aAAa,QAAQC,MAAOJ,EAAEK,eAAtErE,Q,4CCDrE,SAASsE,GAAiBxD,GAC/B,MAAgCvC,WAAe,MAA/C,mBAAOgG,EAAP,KAAiBC,EAAjB,KACM1M,EAAO2M,QAAQF,GAIfG,EAAc,WAClBF,EAAY,OAGd,OACE,gCACE,cAACG,GAAA,EAAD,CAAMvM,QATU,SAAAwM,GAClBJ,EAAYI,EAAMC,gBAQYX,KAAM,cAAC,KAAD,CAAM/I,KAAM2F,EAAMR,MAAO2C,KAAM,KAAQmB,MAAOtD,EAAMR,MAAM+D,cAAenB,QAAQ,aACnH,cAAC4B,GAAA,EAAD,CACEnR,GAAG,aACH4Q,SAAUA,EACVzM,KAAMA,EACNiN,QAASL,EACTM,cAAe,CACb,kBAAmB,gBANvB,SASGlE,EAAMmE,QAAQlS,KAAI,SAAAmS,GAAM,OACvB,eAACC,GAAA,EAAD,CAEE/M,QAAS,WACP0I,EAAMsE,SAASF,GACfR,KAJJ,UAOE,cAACW,GAAA,EAAD,UACE,cAAC,KAAD,CAAMlK,KAAM+J,EAAQjC,KAAM,OACZ,IACfiC,EAAOb,gBATHa,WAiBV,IAAMI,GAAqB,kBAAM,cAAChB,GAAD,CAAkBhE,MAAM,OAAO2E,QAAS,CAAC,QAASG,SAAU,gB,UChD7F,SAASG,KACd,IAAM1G,EAAIC,KACV,OACE,eAACqC,GAAA,EAAD,CAAOC,UAAU,MAAM4B,QAAS,EAAG3B,WAAW,SAASC,eAAe,SAAtE,UACE,cAACrJ,EAAA,EAAD,CAAYC,MAAM,UAAlB,kBACA,cAACsN,GAAA,EAAD,CAAQJ,SAAU,kBAAMvG,EAAED,OAAO,CAAExD,KAAuB,QAAjByD,EAAEL,MAAMpD,KAAiB,OAAS,SAAUqK,QAA0B,QAAjB5G,EAAEL,MAAMpD,KAAgBlD,MAAM,UAC5H,cAACD,EAAA,EAAD,CAAYC,MAAM,QAAlB,oBCVC,SAASwN,GAAWtI,EAAgBU,GACzC,MAAmC6H,KAAKC,IAAIxI,GAAQyI,QAAQ/H,EAAMpF,UAAUoN,MAAM,KAAlF,mBAAOtI,EAAP,YAAgBC,OAAhB,MAA6B,GAA7B,EAEA,OAAOR,OAAO0I,KAAKrI,KAAKF,IAAWH,OAAOO,EAAUC,GCF/C,SAASsI,GAAoBC,EAAelI,EAAcT,GAC/D,OAAOF,GAAkB6I,EAAOlI,EAAMpF,SAAU2E,GAAa,IAAMS,EAAMrF,OAAO4L,c,oFCuB5E4B,GAAc,WAClB,IAAMpH,EAAIC,KACV,OACE,eAACoH,GAAA,EAAD,CAAahD,QAAQ,WAArB,UACE,cAACiD,GAAA,EAAD,qBACA,cAACC,GAAA,EAAD,CACEhC,MAAM,SACNiC,YAAY,MACZC,WACE,CACEpR,MAAO,CAAEqR,UAAW,WAGxBC,eACE,cAACC,GAAA,EAAD,CAAgBtR,SAAS,QAAzB,SACE,cAAC,GAAD,MAGJmL,MAAOzB,EAAEL,MAAMR,aACfoH,SAAU,SAAA7R,GACR,IAAMmT,EAAInT,EAAEoT,OAAOrG,MACbsG,EAAIC,WAAWH,GACrB,IAAII,MAAMF,GAAV,CAGA,IAAM7I,EAAS2H,GAAWkB,EAAG,CAAElO,SAAU,IACzCmG,EAAED,OAAO,CACPZ,aAAc0I,EACd3I,aAGJgJ,UAAU,YAEZ,eAACC,GAAA,EAAD,WACyB,MAAtBnI,EAAEL,MAAML,WAAqB,IAAMhB,GAAkB0B,EAAEL,MAAML,WAAY,EAAG,GAD/E,UAC0FU,EAAEL,MAAMV,MAAMjK,MAAM,GAAGwQ,qBAKjH4C,GAAc,WAMlB,IALA,IAAMpI,EAAIC,KACJkH,EAA8B,MAAtBnH,EAAEL,MAAML,WAAqB,GAAKU,EAAEL,MAAML,WAElD8G,EAA6B,GAC7BiC,EAAgC,SAAjBrI,EAAEL,MAAMpD,KAAkB,UAAY,QALnC,WAMf0I,GACP,IAAMqD,EAAoC,MAAtBtI,EAAEL,MAAML,WAAqB,IAAO6H,GAAS,KAAmB,IAAZ/I,OAAO6G,IAAa,KAC5FmB,EAAQnF,KAEJ,cAAC6E,GAAA,EAAD,CAEEyC,WAAW,EACXhP,QAAS,WACa,MAAhB+O,GAGJtI,EAAED,OAAO,CACPb,OAAQoJ,EACRnJ,aAAcb,GAAkBgK,EAAa,EAAG,MAGpD/C,MAAuB,MAAhB+C,EAAsBA,EAAchK,GAAkBgK,EAAa,EAAG,GAC7EjP,MAAOiP,IAAgBtI,EAAEL,MAAMT,OAASmJ,EAAe,WAZlDrI,EAAEL,MAAMpD,KAAO0I,KALnBA,GAAK,EAAGA,GAAK,EAAGA,IAAM,EAAtBA,GAuBT,OACE,cAAC3C,GAAA,EAAD,CAAOnJ,GAAI,CAAEqP,UAAW,GAAKjG,UAAU,MAAME,eAAe,eAAe0B,QAAS,EAApF,SACGiC,KAKDqC,GAAe,IAAM,IAAM,IAC3BC,GAAe,WAAO,IAAD,IACnBC,EAAYzF,eACZlD,EAAIC,KACJI,EAAMrJ,cACN8N,EAAOtJ,IACPV,EAAM,OAAGgK,QAAH,IAAGA,OAAH,EAAGA,EAAMhK,OACf8N,EAAY,OAAG9D,QAAH,IAAGA,OAAH,EAAGA,EAAM5K,OACrB2O,EAAW,OAAG/D,QAAH,IAAGA,OAAH,EAAGA,EAAMlK,OAAOoF,EAAEL,MAAMV,OACnC6J,EAAmB9I,EAAEL,MAAMH,cAAR,iBAAsBoJ,QAAtB,IAAsBA,OAAtB,EAAsBA,EAAchP,cAApC,QAA8C,SAAW,GAC5EmP,EAAI,OAAGjE,QAAH,IAAGA,OAAH,EAAGA,EAAM9J,MAAMgF,EAAEL,MAAMV,OAAOe,EAAEL,MAAMpD,MAC1CgC,EAASyB,EAAEL,MAAMpB,OACjBW,EAASc,EAAEL,MAAMT,OACjBG,EAASW,EAAEL,MAAMN,OACjB2J,EAAO,UAAGhJ,EAAEL,MAAMJ,qBAAX,QAA4B,GACzC,EAAoCG,YAAe,GAAnD,mBAAOuJ,EAAP,KAAmBC,EAAnB,KAEA,EAAoCxJ,YAAe,GAAnD,mBAAOyJ,EAAP,KAAmBC,EAAnB,KACA,EAAsC1J,YAAe,GAArD,mBAAO2J,EAAP,KAAoBC,EAApB,KAEA5J,aAAgB,WACd,GAAc,MAAV5E,GAAkC,MAAhB8N,EAAtB,CAGA,IAAMW,EAAG,uCAAG,8BAAAhJ,EAAA,sEACWF,EAAII,QAAQC,YADvB,cACJ/E,EADI,OAEJ6N,EAAmB9N,EAAakF,QAAQgI,EAAajP,QAASgC,GAF1D,KAGqB6N,EAHrB,SAGsD7N,EAAO8N,aAH7D,+BAG2E3O,EAH3E,eAGsC4O,UAHtC,oCAIWC,GAAG,8EACtBP,GAAc,GAEdA,GAAc,GAPN,4CAAH,qDAWTG,OACC,CAAClJ,EAAKuI,EAAc9N,IAEvB,IAAM8O,EAAUlK,cAAA,sBAAkB,8BAAAa,EAAA,yDAClB,MAAVzF,GAAkC,MAAhB8N,EADU,wDAIhCD,EAAUjF,gBAAgB,iBAC1B4F,GAAe,GALiB,kBAOTjJ,EAAII,QAAQC,YAPH,cAOxB/E,EAPwB,OASxB6N,EAAmB9N,EAAakF,QAAQgI,EAAajP,QAASgC,GATtC,UAUjB6N,EAAiBI,QAAQ9O,EAAQ,gFAVhB,gCAUiG6I,KAAK,GAVtG,QAW9BgF,EAAUjF,gBAAgB,qBAC1B0F,GAAc,GAZgB,kDAc9BT,EAAUjF,gBAAgB,mBAdI,yBAgB9B4F,GAAe,GAhBe,6EAkB/B,CAACjJ,EAAKuI,EAAc9N,EAAQ6N,IAEzBkB,EAASnK,cAAA,sBAAkB,sCAAAa,EAAA,yDACnB,MAARwI,GAA0B,MAAVjO,GAAkC,MAAhB8N,GAAuC,MAAfC,EAD/B,oDAIZ,MAAfxI,EAAII,QAJuB,sDAO3BlC,EAAS,GAPkB,sDAU3BW,EAAS,GAVkB,oDAahB,MAAX8J,EAb2B,0DAgB/BE,GAAc,GAhBiB,oBAkBR7I,EAAII,QAAQC,YAlBJ,eAkBvB/E,EAlBuB,OAoBvBmO,EAAahN,GAAc8D,QAAQ9F,EAAQa,GAC3C6N,EAAmB9N,EAAakF,QAAQgI,EAAajP,QAASgC,GAE9DoO,EAAelD,GAAWtI,EAAQsK,GAClCmB,EAAwB,QAAjBhK,EAAEL,MAAMpD,KAAiB,CAACqM,EAAajP,SAAW,CAACiP,EAAajP,QAASkP,EAAYlP,SAxBrE,KAyBE6P,EAzBF,UAyBmC7N,EAAO8N,aAzB1C,gCAyBwD3O,EAzBxD,eAyBmB4O,UAzBnB,wCA2BRC,GAAGI,GA3BK,kCA4BdP,EAAiBI,QAAQE,EAAWnQ,QAAS,gFA5B/B,gCA4BgHgK,KAAK,GA5BrH,yBA8BbmG,EAAWG,aAAalB,EAAM1J,EAASoJ,GAAcsB,EAAc7K,EAAQ8K,EAAMhB,GA9BpE,eA8BvBvF,EA9BuB,OA+B7BkF,EAAUjF,gBAAgB,mBA/BG,UAgCvBD,EAAEE,KAAK,GAhCgB,QAiC7BgF,EAAUjF,gBAAgB,kBAC1B1D,EAAEF,kBAlC2B,mDAoC7B6I,EAAUjF,gBAAgB,2BApCG,yBAsC7BwF,GAAc,GAtCe,8EAwC9B,CAACH,EAAMjO,EAAQ8N,EAAcC,EAAaxI,EAAII,QAASlC,EAAQW,EAAQ8J,EAAShJ,EAAGX,EAAQsJ,IAE9F,OAAKQ,EAQDF,EAEA,cAAC3P,EAAA,EAAD,CAAQ+K,QAAQ,YAAYtL,UAAU,EAAMM,MAAwB,SAAjB2G,EAAEL,MAAMpD,KAAkB,UAAY,QAAzF,iCAOF,eAACjD,EAAA,EAAD,CAAQP,SAAU+P,EAAmBE,EAASzP,QAASsQ,EAAQxF,QAAQ,YAAYhL,MAAwB,SAAjB2G,EAAEL,MAAMpD,KAAkB,UAAY,QAAhI,oBACUyD,EAAEL,MAAMpD,QAhBhB,eAACjD,EAAA,EAAD,CAAQP,SAAUsQ,EAAa9P,QAASqQ,EAASvF,QAAQ,YAAYhL,MAAM,UAA3E,qBACWyL,EAAK5K,OAAON,OAAO4L,kBAmB9B0E,GAAc,WAClB,IAAMlK,EAAIC,KACJ6E,EAAOtJ,IACPuJ,EAAkB7P,OAAOD,KAAK6P,EAAKlK,QAAQoK,QAAO,SAAAC,GAAC,MAAU,WAANA,KAC7D,OACE,eAACoC,GAAA,EAAD,CAAahD,QAAQ,WAArB,UACE,cAACiD,GAAA,EAAD,0BACA,cAACC,GAAA,EAAD,CACEhC,MAAM,cACNiC,YAAY,IACZ/F,MAAOzB,EAAEL,MAAMP,aACfmH,SAAU,SAAA7R,GACR,IAAMyV,EAAInC,WAAWtT,EAAEoT,OAAOrG,OAC1BwG,MAAMkC,IAIVnK,EAAED,OAAO,CACPxB,OAAQ4L,EACR/K,aAAc1K,EAAEoT,OAAOrG,SAG3BgG,WACE,CACEpR,MAAO,CAAEqR,UAAW,WAGxBC,eACE,cAACC,GAAA,EAAD,CAAgBtR,SAAS,QAAzB,SACE,cAACmP,GAAD,CAAkBhE,MAAOzB,EAAEL,MAAMV,MAAMjK,MAAM,GAAIoR,QAASrB,EAAgB7Q,KAAI,SAAAQ,GAAC,OAAIA,EAAEM,MAAM,MAAKuR,SAAU,SAAAtH,GAAK,OAAIe,EAAED,OAAO,CAAEd,MAAQ,IAAMA,eAOlJmL,GAAe,WACnB,IAAMpK,EAAIC,KAEV,OACE,eAAC/G,EAAA,EAAD,WACE,cAACE,EAAA,EAAD,qBACA,cAACiR,GAAA,EAAD,CACEtR,SAAUiH,EAAEL,MAAMT,SAAWc,EAAEL,MAAML,WACrCgL,aAAc,GACdC,kBAAkB,KAClBC,IAAK,EACL/I,MAAOzB,EAAEL,MAAMT,SAAWc,EAAEL,MAAML,WAAa,GAAKmL,OAAOzK,EAAEL,MAAMN,QACnEkH,SAAU,SAACmE,EAAG7C,GAAJ,OACR7H,EAAED,OAAO,CACPV,OAAQjB,OAAOyJ,MAGnB8C,IAAK,SAKPC,GAAU,WAAO,IAAD,IACdvK,EAAMrJ,cACNgJ,EAAIC,KACJ6E,EAAOtJ,IACPV,EAAM,OAAGgK,QAAH,IAAGA,OAAH,EAAGA,EAAMhK,OACf8N,EAAY,OAAG9D,QAAH,IAAGA,OAAH,EAAGA,EAAM5K,OACrB2O,EAAW,OAAG/D,QAAH,IAAGA,OAAH,EAAGA,EAAMlK,OAAOoF,EAAEL,MAAMV,OACnC6J,EAAmB9I,EAAEL,MAAMH,cAAR,iBAAsBoJ,QAAtB,IAAsBA,OAAtB,EAAsBA,EAAchP,cAApC,QAA8C,SAAW,GAC5EmP,EAAI,OAAGjE,QAAH,IAAGA,OAAH,EAAGA,EAAM9J,MAAMgF,EAAEL,MAAMV,OAAOe,EAAEL,MAAMpD,MAC1CgC,EAASyB,EAAEL,MAAMpB,OACjBW,EAASc,EAAEL,MAAMT,OACjBa,EAASC,EAAED,OACXxD,EAAOyD,EAAEL,MAAMpD,KACf8C,EAASW,EAAEL,MAAMN,OACjBwL,EAAUnL,UAAa,GA4C7B,OA3CAA,aAAgB,WACd,GAAY,MAARqJ,GAGe,MAAf1I,EAAII,WAGJlC,EAAS,MAGTW,EAAS,GAAb,CAIA,IAAMqK,EAAG,uCAAG,oCAAAhJ,EAAA,yDACS,MAAfsI,IAAuBgC,EAAQC,SAA0B,MAAfzK,EAAII,SAA6B,MAAV3F,GAAkC,MAAhB8N,EAD7E,wDAIViC,EAAQC,SAAU,EAJR,SAKWzK,EAAII,QAAQC,YALvB,cAKJ/E,EALI,OAOJmO,EAAahN,GAAc8D,QAAQ9F,EAAQa,GAE3CoP,EAAUlE,GAAWtI,EAAQsK,GAC7BmB,EAAgB,QAATzN,EAAiB,CAACqM,EAAajP,SAAW,CAACiP,EAAajP,QAASkP,EAAYlP,SAVhF,mBAaYmQ,EAAWjJ,WAAWmK,eAAejC,EAAM1J,EAASoJ,GAAcsC,EAAS7L,EAAQ8K,GAb/F,QAaF7C,EAbE,OAcR8D,QAAQC,IAAI/D,EAAO4B,EAAM1J,EAASoJ,GAAcsC,EAAS7L,EAAQ8K,GACjEiB,QAAQC,IAAI/D,EAAMgE,MAAM7J,YACxBvB,EAAO,CACLR,cAAe4H,EAAMgE,MAAM7J,aAjBrB,kDAoBRvB,EAAO,CACLR,cAAe,OArBT,yBAwBRsL,EAAQC,SAAU,EAxBV,6EAAH,qDA2BTvB,OACC,CAACsB,EAASxK,EAAII,QAASlC,EAAQsK,EAAa9I,EAAQjF,EAAQuE,EAAQ9C,EAAM2C,EAAQ0J,EAAcG,IACvF,MAARjE,GAAgC,MAAhB8D,EACX,KAGP,eAACvB,GAAA,EAAD,CAAahD,QAAQ,WAArB,UACE,cAACiD,GAAA,EAAD,sBACA,cAACC,GAAA,EAAD,CACEhC,MAAM,UACNiC,YAAY,MACZ4D,UAAU,EACV3D,WACE,CACEpR,MAAO,CAAEqR,UAAW,WAGxBC,eAAgB,cAAC,GAAD,IAChBlG,MAAgC,MAAzBzB,EAAEL,MAAMJ,cAAwB,IAAMjB,GAAkB0B,EAAEL,MAAMJ,cAAT,iBAAwBqJ,QAAxB,IAAwBA,OAAxB,EAAwBA,EAAc/O,gBAAtC,QAAkD,EAAG,KAErH,eAACsO,GAAA,EAAD,iCAAoCjB,GAAoB4B,EAAkBF,EAAc,UAKjFyC,GAAQ,WACnB,OACE,cAACC,GAAA,EAAD,CAAWC,SAAS,KAApB,SACE,eAACC,GAAA,EAAD,CAAOrS,GAAI,CAAEsS,YAAa,EAAGC,aAAc,EAAGC,cAAe,GAAKtH,QAAQ,WAA1E,UACE,cAACQ,GAAD,IACA,cAAC3L,EAAA,EAAD,CAAK0S,UAAU,OAAOC,YAAU,EAAhC,SACE,eAACvJ,GAAA,EAAD,CAAOC,UAAU,SAAS4B,QAAS,EAAnC,UACE,cAACuC,GAAD,IACA,eAACpE,GAAA,EAAD,CAAOC,UAAU,SAAjB,UACE,cAAC,GAAD,IACA,cAAC,GAAD,OAEF,cAAC,GAAD,IACA,cAAC,GAAD,IACA,cAAC,GAAD,IACA,cAAC,GAAD,e,4DCrWCuJ,GAAc,WACzB,IAAM9L,EAAIC,KACV,EAAgCP,aAAhC,mBAAOqM,EAAP,KAAiBC,EAAjB,KACM3L,EAAMrJ,cAENoJ,EAAc5E,IACduN,EAAI,OAAG3I,QAAH,IAAGA,OAAH,EAAGA,EAAapF,MAAMgF,EAAEL,MAAMV,OAAOe,EAAEL,MAAMpD,MAEjD0P,EAAavM,cAAA,sBAAkB,gCAAAa,EAAA,yDACvB,MAARwI,GAA+B,MAAf1I,EAAIG,SAAkC,MAAfH,EAAII,SAAkC,MAAfL,EAD/B,wDAInC4L,EAAY,MAJuB,SAKd3L,EAAII,QAAQC,UAAUL,EAAIG,SALZ,cAK7B7E,EAL6B,gBAMVsB,GAAkB2D,QAAQR,EAAYrF,WAAYY,GANxC,cAM7BZ,EAN6B,YAOZA,EAPY,UAOsBY,EAAO8N,aAP7B,gCAO2CV,EAP3C,eAODmD,iBAPC,oBAOiD,GAPjD,QAO7BC,EAP6B,OASnCH,EAAYG,GATuB,4CAUlC,CAAC9L,EAAK0I,EAAM3I,IACfV,aAAgB,WACd,IAAM6J,EAAG,uCAAG,sBAAAhJ,EAAA,sEACJ0L,IADI,2CAAH,qDAGT1C,MACC,CAAC0C,IAEJ,IAAMG,EAA0D,GAOhE,OANQ,OAARL,QAAQ,IAARA,KAAUM,oBAAoB/R,SAAQ,SAAAgS,GAChCA,EAAI/N,OAAOgO,UAGfH,EAAKnL,KAAKqL,MAEO,MAAflM,EACK,KAIP,cAACkL,GAAA,EAAD,CAAWC,SAAS,KAApB,SACE,eAACC,GAAA,EAAD,CAAOnH,QAAQ,WAAf,UACE,cAACI,GAAA,EAAD,UACE,cAACrL,EAAA,EAAD,CAAYD,GAAI,CAAEqT,KAAM,YAAcnI,QAAQ,KAAKvP,GAAG,aAAa8W,UAAU,MAA7E,mDAIF,cAACa,GAAA,EAAD,UACE,eAACC,GAAA,EAAD,CAAO,aAAW,eAAlB,UACE,cAACC,GAAA,EAAD,UACE,eAACC,GAAA,EAAD,WACE,cAACC,GAAA,EAAD,CAAWC,MAAM,QAAjB,oBACA,cAACD,GAAA,EAAD,CAAWC,MAAM,QAAjB,wBACA,cAACD,GAAA,EAAD,CAAWC,MAAM,QAAjB,iBACA,cAACD,GAAA,EAAD,CAAWC,MAAM,QAAjB,wBAGJ,cAACC,GAAA,EAAD,UACGX,EAAKlY,KAAI,SAAAoY,GACR,IAAMU,GAAcC,KAAKC,MAA2C,IAAnCZ,EAAIa,kBAAkBC,YAApC,MACbC,EAAWjN,EAAYvF,aAAayR,EAAIgB,OAE9C,OACE,eAACV,GAAA,EAAD,WACE,eAACC,GAAA,EAAD,CAAWC,MAAM,QAAjB,UACGxO,GAAkBgO,EAAI/N,OAAO+C,WAAY+L,EAASxT,SAAUiN,KAAKyG,KAAKF,EAASxT,SAAW,IAAK,IAC/FuG,EAAYvF,aAAayR,EAAIgB,OAAO1T,OAAO5E,MAAM,GAAGwQ,iBAEvD,cAACqH,GAAA,EAAD,CAAWC,MAAM,QAAjB,SAAwC,IAAdR,EAAI3M,MAAcqN,EAAWhG,QAAQ,GAAK,QAAU,MAC9E,cAAC6F,GAAA,EAAD,CAAWC,MAAM,QAAjB,SAA0BxO,GAAkBgO,EAAIkB,IAAIlM,WAAY+L,EAASxT,SAAUiN,KAAKyG,KAAKF,EAASxT,SAAW,MACjH,cAACgT,GAAA,EAAD,CAAWC,MAAM,QAAjB,SACiB,IAAdR,EAAI3M,MACH,cAACmG,GAAA,EAAD,CAAM1B,KAAK,QAAQmB,MAAM,UAAUlM,MAAM,UACzB,IAAdiT,EAAI3M,MACN,cAACrG,EAAA,EAAD,CAAQP,SAAUiU,EAAa,GAA/B,sBAEA,cAAClH,GAAA,EAAD,CAAM1B,KAAK,QAAQmB,MAAM,YAAYlM,MAAM,gBAblCiT,EAAImB,UAAU3O,4BC3DzC4O,GAAkB,WACtB,IAAMzK,EAAOC,eACP7C,EAAMrJ,cACNgJ,EAAIC,KACJ6E,EAAOtJ,IACb,EAA4CkE,YAAe,GAA3D,mBAAOiO,EAAP,KAAuBC,EAAvB,KACMC,EAAyB,QAAjB7N,EAAEL,MAAMpD,KACtB,EAAoCmD,YAAe,GAAnD,mBAAOyJ,EAAP,KAAmBC,EAAnB,KACA,EAAsC1J,YAAe,GAArD,mBAAO2J,EAAP,KAAoBC,EAApB,KACMP,EAAI,OAAGjE,QAAH,IAAGA,OAAH,EAAGA,EAAM9J,MAAMgF,EAAEL,MAAMV,OAAOe,EAAEL,MAAMpD,MAC1CsM,EAAcgF,EAAK,OAAG/I,QAAH,IAAGA,OAAH,EAAGA,EAAM5K,OAAT,OAAmB4K,QAAnB,IAAmBA,OAAnB,EAAmBA,EAAMlK,OAAOoF,EAAEL,MAAMV,OAEjES,aAAgB,WACd,GAAY,MAARqJ,GAA+B,MAAfF,EAApB,CAGA,IAAMU,EAAG,uCAAG,8BAAAhJ,EAAA,sEACWF,EAAII,QAAQC,YADvB,cACJ/E,EADI,OAEJmS,EAAYpS,EAAakF,QAAQiI,EAAYlP,QAASgC,GAFlD,KAGqBmS,EAHrB,SAG+CnS,EAAO8N,aAHtD,+BAGoEV,EAHpE,eAG+BW,UAH/B,oCAIWC,GAAG,8EACtBP,GAAc,GAEdA,GAAc,GAPN,4CAAH,qDAWTG,OACC,CAAClJ,EAAKwI,EAAaE,IAEtB,IAAMa,EAAUlK,cAAA,sBAAkB,gCAAAa,EAAA,yDACpB,MAARwI,GAA+B,MAAfF,EADY,wDAIhCS,GAAe,GAJiB,kBAMTjJ,EAAII,QAAQC,YANH,cAMxB/E,EANwB,OAQxBoS,EAAUrS,EAAakF,QAAQiI,EAAYlP,QAASgC,GAC1DsH,EAAKS,gBAAgB,aATS,UAWdqK,EAAQnE,QAAQb,EAAM,gFAXR,eAWxBtF,EAXwB,iBAYxBA,EAAEE,KAAK,GAZiB,QAa9BV,EAAKS,gBAAgB,qBACrB0F,GAAc,GAdgB,kDAgB9BnG,EAAKS,gBAAgB,mBAhBS,yBAkB9B4F,GAAe,GAlBe,6EAoB/B,CAACjJ,EAAKwI,EAAaE,EAAM9F,IAEtB+K,EAAYtO,cAAA,sBAAkB,sCAAAa,EAAA,yDACf,MAAfF,EAAII,SAAkC,MAAfJ,EAAIG,SAAkC,MAAfqI,GAA+B,MAAR/D,EADvC,yCAEzB,MAFyB,cAIlC8I,GAAkB,GAJgB,SAKbvN,EAAII,QAAQC,UAAUL,EAAIG,SALb,cAK5B7E,EAL4B,OAM5BsS,EAAWvS,EAAakF,QAAQiI,EAAYlP,QAASgC,GACrDuS,EAAWxQ,GAAgBkD,QAAQmI,EAAMpN,GAEzC4C,EAASsI,GAAW7G,EAAEL,MAAMpB,OAAQsK,GATR,UAUVoF,EAASvE,UAAUrJ,EAAIG,QAASuI,GAVtB,mBAWpBY,GAAGpL,GAXiB,kCAYf0P,EAASrE,QAAQb,EAAMxK,GAZR,eAY1B4P,EAZ0B,OAahClL,EAAKS,gBAAgB,uBAbW,UAc1ByK,EAAGxK,KAAK,GAdkB,yBAiBlBuK,EAASE,YAAYzS,EAAO0S,SAAU9P,EAAQ,KAjB5B,eAiB5BkF,EAjB4B,OAkBlCR,EAAKS,gBAAgB,uBAlBa,UAmB5BD,EAAEE,KAAK,GAnBqB,QAoBlCV,EAAKS,gBAAgB,sBAErBkK,GAAkB,GAtBgB,4CAuBjC,CAAC3K,EAAM5C,EAAKyE,EAAM9E,EAAEL,MAAMpB,OAAQsK,EAAaE,IAElD,OAAKI,EAODwE,EAEA,cAACrU,EAAA,EAAD,CAAQ+K,QAAQ,YAAYtL,UAAU,EAAMM,MAAwB,SAAjB2G,EAAEL,MAAMpD,KAAkB,UAAY,QAAzF,iCAMF,eAACjD,EAAA,EAAD,CAAQC,QAASyU,EAAW3J,QAAQ,YAAYhL,MAAwB,SAAjB2G,EAAEL,MAAMpD,KAAkB,UAAY,QAA7F,iCACuByD,EAAEL,MAAMV,MAD/B,IACuCe,EAAEL,MAAMpD,KAD/C,WAbE,eAACjD,EAAA,EAAD,CAAQP,SAAUsQ,EAAa9P,QAASqQ,EAASvF,QAAQ,YAAYhL,MAAM,UAA3E,qBACWwP,EAAYjP,OAAO4L,kBAkB9B8I,GAAmB,WACvB,IAAMtO,EAAIC,KACJ4N,EAAyB,QAAjB7N,EAAEL,MAAMpD,KAChBuI,EAAOtJ,IACb,GAAY,MAARsJ,EACF,OAAO,KAET,IAAMC,EAAkB7P,OAAOD,KAAK6P,EAAKlK,QAAQoK,QAAO,SAAAC,GAAC,MAAU,WAANA,KACvD4D,EAAcgF,EAAQ/I,EAAK5K,OAAS4K,EAAKlK,OAAOoF,EAAEL,MAAMV,OACxD6J,EAAmB9I,EAAEL,MAAMH,cAAcqJ,EAAYjP,SAAW,GAEtE,OACE,cAAC0I,GAAA,EAAD,CAAOC,UAAU,SAAS4B,QAAS,EAAnC,SACE,eAACkD,GAAA,EAAD,CAAahD,QAAQ,WAArB,UACE,cAACiD,GAAA,EAAD,qBACA,cAACC,GAAA,EAAD,CACEhC,MAAM,SACNiC,YAAY,MACZ/F,MAAOzB,EAAEL,MAAMP,aACfmH,SAAU,SAAA7R,GACR,IAAMyV,EAAInC,WAAWtT,EAAEoT,OAAOrG,OAC1BwG,MAAMkC,IAIVnK,EAAED,OAAO,CACPxB,OAAQ4L,EACR/K,aAAc1K,EAAEoT,OAAOrG,SAG3BkG,eACE,cAACC,GAAA,EAAD,CAAgBtR,SAAS,QAAzB,SACE,cAACmP,GAAD,CAAkBhE,MAAOzB,EAAEL,MAAMV,MAAMjK,MAAM,GAAIoR,QAASrB,EAAgB7Q,KAAI,SAAAQ,GAAC,OAAIA,EAAEM,MAAM,MAAKuR,SAAU,SAAAtH,GAAK,OAAIe,EAAED,OAAO,CAAEd,MAAQ,IAAMA,SAGhJwI,WACE,CACEpR,MAAO,CAAEqR,UAAW,aAI1B,eAACS,GAAA,EAAD,CAAgBrT,GAAG,8BAAnB,gCAAqEoS,GAAoB4B,EAAkBD,EAAa,YAKnH0F,GAAS,WACpB,OACE,cAACjD,GAAA,EAAD,CAAWC,SAAS,KAApB,SACE,eAACC,GAAA,EAAD,CAAOrS,GAAI,CAAEsS,YAAa,EAAGC,aAAc,EAAGC,cAAe,GAAKtH,QAAQ,WAA1E,UACE,cAACQ,GAAD,IACA,cAAC3L,EAAA,EAAD,CAAK0S,UAAU,OAAOC,YAAU,EAAhC,SACE,eAACvJ,GAAA,EAAD,CAAOC,UAAU,SAAS4B,QAAS,EAAnC,UACE,cAACuC,GAAD,IACA,cAAC,GAAD,IACA,cAAC,GAAD,e,mBCtJC8H,GAAa,WACxB,IAAMxO,EAAIC,KACJ0I,EAAYzF,eAClB,EAAgCxD,aAAhC,mBAAOqM,EAAP,KAAiBC,EAAjB,KACM3L,EAAMrJ,cACZ,EAAwB0I,WAAe,GAAvC,mBAAO+O,EAAP,KAAaC,EAAb,KAIA,EAAoChP,YAAe,GAAnD,mBAAOiP,EAAP,KAAmBC,EAAnB,KACMxO,EAAc5E,IACpB,EAA8BkE,YAAe,GAA7C,mBAAOmP,EAAP,KAAgBC,EAAhB,KACM7C,EAAavM,cAAA,sBAAkB,gCAAAa,EAAA,yDAChB,MAAfF,EAAII,SAAkC,MAAfJ,EAAIG,SAAkC,MAAfJ,EADf,wDAInC0O,GAAW,GAJwB,kBAMZzO,EAAII,QAAQC,UAAUL,EAAIG,SANd,cAM3B7E,EAN2B,gBAORsB,GAAkB2D,QAAQR,EAAYrF,WAAYY,GAP1C,cAO3BZ,EAP2B,YAQPA,EARO,UAQ0BY,EAAO8N,aARjC,gCAQ+CgF,EAR/C,eAQIM,gBARJ,6BAQ3BC,EAR2B,OAUjChD,EAAYgD,GAVqB,yBAYjCF,GAAW,GAZsB,2EAclC,CAACzO,EAAKoO,EAAMrO,IACfV,aAAgB,WACd,IAAM6J,EAAG,uCAAG,sBAAAhJ,EAAA,sEACJ0L,IADI,2CAAH,qDAGT1C,MACC,CAAC0C,IAEJ,IAAMG,EAAuD,GAO7D,OANQ,OAARL,QAAQ,IAARA,KAAUkD,kBAAkB3U,SAAQ,SAAAgS,GAC9BA,EAAI/N,OAAOgO,UAGfH,EAAKnL,KAAKqL,MAEO,MAAflM,GAAsC,MAAfC,EAAII,SAAkC,MAAfJ,EAAIG,QAC7C,KAGP,cAAC8K,GAAA,EAAD,CAAWC,SAAS,KAApB,SACE,eAACC,GAAA,EAAD,CAAOnH,QAAQ,WAAf,UACE,cAACI,GAAA,EAAD,UACE,cAACrL,EAAA,EAAD,CAAYD,GAAI,CAAEqT,KAAM,YAAcnI,QAAQ,KAAKvP,GAAG,aAAa8W,UAAU,MAA7E,uBAIF,eAACa,GAAA,EAAD,WACE,eAACC,GAAA,EAAD,CAAO,aAAW,eAAlB,UACE,cAACC,GAAA,EAAD,UACE,eAACC,GAAA,EAAD,WACE,cAACC,GAAA,EAAD,CAAWC,MAAM,QAAjB,kBACA,cAACD,GAAA,EAAD,CAAWC,MAAM,QAAjB,mBACA,cAACD,GAAA,EAAD,CAAWC,MAAM,QAAjB,oBACA,cAACD,GAAA,EAAD,CAAWC,MAAM,QAAjB,kBACA,cAACD,GAAA,EAAD,CAAWC,MAAM,QAAjB,iBACA,cAACD,GAAA,EAAD,CAAWC,MAAM,QAAjB,oBACA,cAACD,GAAA,EAAD,CAAWC,MAAM,QAAjB,wBAGJ,cAACC,GAAA,EAAD,UACGX,EAAKlY,KAAI,SAACoY,EAAKrH,GAAN,OACR,eAAC2H,GAAA,EAAD,CAAkBzT,GAAI,CAAE,mCAAoC,CAAE+V,OAAQ,IAAtE,UACE,cAACrC,GAAA,EAAD,CAAWC,MAAM,QAAjB,SAA0BR,EAAI6C,OAAS,cAACrJ,GAAA,EAAD,CAAMP,MAAM,OAAOlM,MAAM,UAAU+K,KAAK,UAAa,cAAC0B,GAAA,EAAD,CAAMP,MAAM,MAAMlM,MAAM,QAAQ+K,KAAK,YAEjI,cAACyI,GAAA,EAAD,CAAWC,MAAM,QAAjB,SAA0B1M,EAAYvF,aAAayR,EAAIgB,OAAO1T,OAAO4L,gBACrE,cAACqH,GAAA,EAAD,CAAWC,MAAM,QAAjB,SAA0BxO,GAAkBgO,EAAIpN,OAAOoC,WAAY,EAAG,KACtE,cAACuL,GAAA,EAAD,CAAWC,MAAM,QAAjB,SAA0BxO,GAAkBgO,EAAI/N,OAAO+C,WAAYlB,EAAYvF,aAAayR,EAAIgB,OAAOzT,SAAU,KACjH,cAACgT,GAAA,EAAD,CAAWC,MAAM,QAAjB,SAA0BxO,GAAkBgO,EAAIkB,IAAIlM,WAAY,GAAI,KACpE,cAACuL,GAAA,EAAD,CAAWC,MAAM,QAAjB,SAAwC,IAAdR,EAAI3M,QAAwC,IAAxB2M,EAAIjN,OAAO+N,WAAoBH,KAAKC,OAArC,OAAqElG,QAAQ,GAAK,QAAU,MACzI,cAAC6F,GAAA,EAAD,CAAWC,MAAM,QAAjB,SACiB,IAAdR,EAAI3M,MACH,cAACmG,GAAA,EAAD,CAAM1B,KAAK,QAAQmB,MAAM,UAAUlM,MAAM,UACzB,IAAdiT,EAAI3M,MACN,cAACrG,EAAA,EAAD,CACE8K,KAAK,QACL7K,QAAO,sBAAE,wCAAAgH,EAAA,yDACPqO,GAAc,GACK,MAAfvO,EAAII,SAAkC,MAAfJ,EAAIG,QAFxB,0EAMgBH,EAAII,QAAQC,UAAUL,EAAIG,SAN1C,cAMC7E,EAND,OAOCmO,EAAahN,GAAc8D,QAAQR,EAAYtF,OAAQa,GAPxD,KASsB8B,GATtB,UAS0DqM,EAAWsF,iBATrE,gCASuFzT,EAAtF0T,EATD,KAS4CzO,QAT5C,qBAWC0O,EAAQhD,EAAIiD,SAASnC,WAXtB,UAYkBiC,EAAmBG,UAAUF,GAZ/C,eAYCG,EAZD,OAaCvB,EAAWxQ,GAAgBkD,QAAQ6O,EAAU9T,GAb9C,UAcWuS,EAASwB,SAASJ,GAd7B,eAcC7L,EAdD,OAeLkF,EAAUjF,gBAAgB,qBAfrB,UAgBCD,EAAEE,KAAK,GAhBR,eAiBLgF,EAAUjF,gBAAgB,qBAjBrB,UAkBCuI,IAlBD,QAmBLjM,EAAEF,kBACF8O,GAAc,GApBT,kDAsBLjG,EAAUjF,gBAAgB,8BAtBrB,yBAwBLkL,GAAc,GAxBT,6EA2BT7V,SAAU4V,GAAcrC,EAAIkB,IAAImC,cAAgB1C,KAAKC,MAAgC,IAAxBZ,EAAIjN,OAAO+N,WA7B1E,sBAiCgB,IAAdd,EAAI3M,MACN,cAACmG,GAAA,EAAD,CAAM1B,KAAK,QAAQmB,MAAM,YAAYlM,MAAM,YAE3C,cAACyM,GAAA,EAAD,CAAM1B,KAAK,QAAQmB,MAAM,gBAhDhBN,WAuDJ,IAAhBmH,EAAK5T,QACJ,cAACoX,GAAA,EAAD,CACEhE,UAAU,MACViE,MAAOzD,EAAK5T,OACZsX,YAAa,EACbC,oBAAqB,aACrBC,mBAAoB,CAAC,GACrBvB,KAAMA,EACNwB,aA5Ha,SAAClK,EAAOmK,GAC/BxB,EAAQwB,SA+HHrB,GACC,cAAC3V,EAAA,EAAD,CAAKC,GAAI,CAAEqL,OAAQ,IAAK9N,MAAO,QAA/B,SACE,cAAC0C,EAAA,EAAD,CAAY0T,MAAM,SAAS3T,GAAI,CAAEqP,UAAW,GAA5C,2BAKFqG,GAA2B,IAAhBzC,EAAK5T,QAChB,eAAC8J,GAAA,EAAD,CAAOE,WAAW,SAASC,eAAe,SAASF,UAAU,SAASpJ,GAAI,CAAEqL,OAAQ,IAAK9N,MAAO,QAAUyN,QAAS,EAAnH,UACE,cAAC/K,EAAA,EAAD,+BACA,cAAC,KAAD,CAAM+W,GAAG,OAAT,SACE,cAAC7W,EAAA,EAAD,CAAQ+K,QAAQ,YAAhB,8C,UC1JP,SAAS+L,GAAWC,GACzB,IAAM5P,EAAU,IAAI6P,KAAaD,GAEjC,OADA5P,EAAQ8P,gB5ChBsB,K4CiBvB9P,EAGT,IAAM+P,GAAiB,WACrB,OACE,cAAClF,GAAA,EAAD,CAAWnS,GAAI,CAAEsX,WAAY,GAAKlF,SAAS,KAA3C,SACE,cAACC,GAAA,EAAD,CAAOrS,GAAI,CAAEuX,QAAS,GAAtB,SACE,cAACpO,GAAA,EAAD,CAAOC,UAAU,SAAS4B,QAAS,EAAnC,SACE,cAAC/K,EAAA,EAAD,qFAOJuX,GAA6B,WACjC,OACE,cAACrF,GAAA,EAAD,CAAWnS,GAAI,CAAEsX,WAAY,GAAKlF,SAAS,KAA3C,SACE,cAACC,GAAA,EAAD,CAAOrS,GAAI,CAAEuX,QAAS,GAAtB,SACE,cAACpO,GAAA,EAAD,CAAOC,UAAU,SAAS4B,QAAS,EAAnC,SACE,cAAC/K,EAAA,EAAD,qDAOJwX,GAAa,WACjB,IAAMvQ,EAAMrJ,cAEZ,OAAoB,QAAhBqJ,EAAIhI,QACC,cAAC,GAAD,IAGW,QAAhBgI,EAAIhI,QAEJ,eAAC,KAAD,WACE,cAAC,KAAD,CAAO2R,KAAK,MAAM6G,QAAS,cAAC,GAAD,MAC3B,cAAC,KAAD,CAAO7G,KAAK,WAAW6G,QAAS,cAAC,GAAD,MAChC,cAAC,KAAD,CAAO7G,KAAK,OAAO6G,QAAS,cAAC,GAAD,MAC5B,cAAC,KAAD,CAAO7G,KAAK,YAAY6G,QAAS,cAAC,GAAD,MACjC,cAAC,KAAD,CAAOC,OAAK,EAACD,QAAS,cAAC,GAAD,SAKrB,cAAC,GAAD,KAGM,SAASE,KACtB,OACE,eAAC,GAAD,WACE,cAACzM,GAAD,IAEA,cAACpL,EAAA,EAAD,CAAKC,GAAI,CAAEqP,UAAW,GAAtB,SACE,cAAC,GAAD,S,cCtED,SAASwI,KACd,OACE,eAAC,IAAD,CAAmBZ,WAAYA,GAA/B,UACE,cAACa,GAAA,EAAD,IACA,cAACF,GAAD,IACA,cAAC,EAAD,OCRN,IAYeG,GAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,iCAAqB3c,MAAK,YAAkD,IAA/C4c,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,iBCDdO,EAASC,OACP,eAAC,IAAMC,WAAP,WACE,uBACEzR,SAAQ,uJAMV,cAAC,KAAD,CACE0R,SAAU,EACVC,aAAc,CACZC,SAAU,SACVC,WAAY,SAEdC,iBAAkB,IANpB,SAQE,cAAC,KAAD,CAAeC,SAAWC,EAAeC,SAAzC,SACE,cAACpB,GAAD,WAINqB,SAASC,eAAe,SAM1BpB,O","file":"static/js/main.3b26a08a.chunk.js","sourcesContent":["var map = {\n\t\"./0xbtc.svg\": [\n\t\t227,\n\t\t4\n\t],\n\t\"./1inch.svg\": [\n\t\t228,\n\t\t5\n\t],\n\t\"./1st.svg\": [\n\t\t229,\n\t\t6\n\t],\n\t\"./aave.svg\": [\n\t\t230,\n\t\t7\n\t],\n\t\"./abbc.svg\": [\n\t\t231,\n\t\t8\n\t],\n\t\"./abt.svg\": [\n\t\t232,\n\t\t9\n\t],\n\t\"./ac3.svg\": [\n\t\t233,\n\t\t10\n\t],\n\t\"./act.svg\": [\n\t\t234,\n\t\t11\n\t],\n\t\"./ada.svg\": [\n\t\t235,\n\t\t12\n\t],\n\t\"./adb.svg\": [\n\t\t236,\n\t\t13\n\t],\n\t\"./adx.svg\": [\n\t\t237,\n\t\t14\n\t],\n\t\"./ae.svg\": [\n\t\t238,\n\t\t15\n\t],\n\t\"./aeon.svg\": [\n\t\t239,\n\t\t16\n\t],\n\t\"./aergo.svg\": [\n\t\t240,\n\t\t17\n\t],\n\t\"./agi.svg\": [\n\t\t241,\n\t\t18\n\t],\n\t\"./aion.svg\": [\n\t\t242,\n\t\t19\n\t],\n\t\"./ait.svg\": [\n\t\t243,\n\t\t20\n\t],\n\t\"./akro.svg\": [\n\t\t244,\n\t\t21\n\t],\n\t\"./akt.svg\": [\n\t\t245,\n\t\t22\n\t],\n\t\"./aleph.svg\": [\n\t\t246,\n\t\t23\n\t],\n\t\"./algo.svg\": [\n\t\t247,\n\t\t24\n\t],\n\t\"./alis.svg\": [\n\t\t248,\n\t\t25\n\t],\n\t\"./alpha.svg\": [\n\t\t249,\n\t\t26\n\t],\n\t\"./alx.svg\": [\n\t\t250,\n\t\t27\n\t],\n\t\"./amb.svg\": [\n\t\t251,\n\t\t28\n\t],\n\t\"./amlt.svg\": [\n\t\t252,\n\t\t29\n\t],\n\t\"./ampl.svg\": [\n\t\t253,\n\t\t30\n\t],\n\t\"./anc.svg\": [\n\t\t254,\n\t\t31\n\t],\n\t\"./anj.svg\": [\n\t\t255,\n\t\t32\n\t],\n\t\"./ankr.svg\": [\n\t\t256,\n\t\t33\n\t],\n\t\"./ant.svg\": [\n\t\t257,\n\t\t34\n\t],\n\t\"./aph.svg\": [\n\t\t258,\n\t\t35\n\t],\n\t\"./apl.svg\": [\n\t\t259,\n\t\t36\n\t],\n\t\"./appc.svg\": [\n\t\t260,\n\t\t37\n\t],\n\t\"./apy.svg\": [\n\t\t261,\n\t\t38\n\t],\n\t\"./ar.svg\": [\n\t\t262,\n\t\t39\n\t],\n\t\"./ardr.svg\": [\n\t\t263,\n\t\t40\n\t],\n\t\"./ark.svg\": [\n\t\t264,\n\t\t41\n\t],\n\t\"./arn.svg\": [\n\t\t265,\n\t\t42\n\t],\n\t\"./aro.svg\": [\n\t\t266,\n\t\t43\n\t],\n\t\"./arrr.svg\": [\n\t\t267,\n\t\t44\n\t],\n\t\"./ast.svg\": [\n\t\t268,\n\t\t45\n\t],\n\t\"./atmi.svg\": [\n\t\t269,\n\t\t46\n\t],\n\t\"./atom.svg\": [\n\t\t270,\n\t\t47\n\t],\n\t\"./auc.svg\": [\n\t\t271,\n\t\t48\n\t],\n\t\"./aura.svg\": [\n\t\t272,\n\t\t49\n\t],\n\t\"./avax.svg\": [\n\t\t273,\n\t\t50\n\t],\n\t\"./awc.svg\": [\n\t\t274,\n\t\t51\n\t],\n\t\"./axp.svg\": [\n\t\t275,\n\t\t52\n\t],\n\t\"./bac.svg\": [\n\t\t276,\n\t\t53\n\t],\n\t\"./bal.svg\": [\n\t\t277,\n\t\t54\n\t],\n\t\"./bam.svg\": [\n\t\t278,\n\t\t55\n\t],\n\t\"./band.svg\": [\n\t\t279,\n\t\t56\n\t],\n\t\"./bao.svg\": [\n\t\t280,\n\t\t57\n\t],\n\t\"./bat.svg\": [\n\t\t281,\n\t\t58\n\t],\n\t\"./bay.svg\": [\n\t\t282,\n\t\t59\n\t],\n\t\"./bbr.svg\": [\n\t\t283,\n\t\t60\n\t],\n\t\"./bcd.svg\": [\n\t\t284,\n\t\t61\n\t],\n\t\"./bch.svg\": [\n\t\t285,\n\t\t62\n\t],\n\t\"./bcn.svg\": [\n\t\t286,\n\t\t63\n\t],\n\t\"./bco.svg\": [\n\t\t287,\n\t\t64\n\t],\n\t\"./bf.svg\": [\n\t\t288,\n\t\t65\n\t],\n\t\"./bifi.svg\": [\n\t\t289,\n\t\t66\n\t],\n\t\"./bix.svg\": [\n\t\t290,\n\t\t67\n\t],\n\t\"./block.svg\": [\n\t\t291,\n\t\t68\n\t],\n\t\"./blt.svg\": [\n\t\t292,\n\t\t69\n\t],\n\t\"./blue.svg\": [\n\t\t293,\n\t\t70\n\t],\n\t\"./blz.svg\": [\n\t\t294,\n\t\t71\n\t],\n\t\"./bnb.svg\": [\n\t\t295,\n\t\t72\n\t],\n\t\"./bnt.svg\": [\n\t\t296,\n\t\t73\n\t],\n\t\"./bond.svg\": [\n\t\t297,\n\t\t74\n\t],\n\t\"./bora.svg\": [\n\t\t298,\n\t\t75\n\t],\n\t\"./box.svg\": [\n\t\t299,\n\t\t76\n\t],\n\t\"./bpt.svg\": [\n\t\t300,\n\t\t77\n\t],\n\t\"./bqx.svg\": [\n\t\t301,\n\t\t78\n\t],\n\t\"./brd.svg\": [\n\t\t302,\n\t\t79\n\t],\n\t\"./btc++.svg\": [\n\t\t303,\n\t\t80\n\t],\n\t\"./btc.svg\": [\n\t\t304,\n\t\t81\n\t],\n\t\"./btcd.svg\": [\n\t\t305,\n\t\t82\n\t],\n\t\"./btcp.svg\": [\n\t\t306,\n\t\t83\n\t],\n\t\"./btg.svg\": [\n\t\t307,\n\t\t84\n\t],\n\t\"./btmx.svg\": [\n\t\t308,\n\t\t85\n\t],\n\t\"./bto.svg\": [\n\t\t309,\n\t\t86\n\t],\n\t\"./bts.svg\": [\n\t\t310,\n\t\t87\n\t],\n\t\"./btt.svg\": [\n\t\t311,\n\t\t88\n\t],\n\t\"./btu.svg\": [\n\t\t312,\n\t\t89\n\t],\n\t\"./bu.svg\": [\n\t\t313,\n\t\t90\n\t],\n\t\"./busd.svg\": [\n\t\t314,\n\t\t91\n\t],\n\t\"./bwt.svg\": [\n\t\t315,\n\t\t92\n\t],\n\t\"./bz.svg\": [\n\t\t316,\n\t\t93\n\t],\n\t\"./bznt.svg\": [\n\t\t317,\n\t\t94\n\t],\n\t\"./bzrx.svg\": [\n\t\t318,\n\t\t95\n\t],\n\t\"./c20.svg\": [\n\t\t319,\n\t\t96\n\t],\n\t\"./cake.svg\": [\n\t\t320,\n\t\t97\n\t],\n\t\"./capp.svg\": [\n\t\t321,\n\t\t98\n\t],\n\t\"./car.svg\": [\n\t\t322,\n\t\t99\n\t],\n\t\"./card.svg\": [\n\t\t323,\n\t\t100\n\t],\n\t\"./cbat.svg\": [\n\t\t324,\n\t\t101\n\t],\n\t\"./cbc.svg\": [\n\t\t325,\n\t\t102\n\t],\n\t\"./cbt.svg\": [\n\t\t326,\n\t\t103\n\t],\n\t\"./cccx.svg\": [\n\t\t327,\n\t\t104\n\t],\n\t\"./cdai.svg\": [\n\t\t328,\n\t\t105\n\t],\n\t\"./cdt.svg\": [\n\t\t329,\n\t\t106\n\t],\n\t\"./cel.svg\": [\n\t\t330,\n\t\t107\n\t],\n\t\"./celr.svg\": [\n\t\t331,\n\t\t108\n\t],\n\t\"./cennz.svg\": [\n\t\t332,\n\t\t109\n\t],\n\t\"./ceth.svg\": [\n\t\t333,\n\t\t110\n\t],\n\t\"./cfx.svg\": [\n\t\t334,\n\t\t111\n\t],\n\t\"./chai.svg\": [\n\t\t335,\n\t\t112\n\t],\n\t\"./chat.svg\": [\n\t\t336,\n\t\t113\n\t],\n\t\"./chsb.svg\": [\n\t\t337,\n\t\t114\n\t],\n\t\"./chz.svg\": [\n\t\t338,\n\t\t115\n\t],\n\t\"./ckb.svg\": [\n\t\t339,\n\t\t116\n\t],\n\t\"./clo.svg\": [\n\t\t340,\n\t\t117\n\t],\n\t\"./cloak.svg\": [\n\t\t341,\n\t\t118\n\t],\n\t\"./cmt.svg\": [\n\t\t342,\n\t\t119\n\t],\n\t\"./cnd.svg\": [\n\t\t343,\n\t\t120\n\t],\n\t\"./cnx.svg\": [\n\t\t344,\n\t\t121\n\t],\n\t\"./comp.svg\": [\n\t\t345,\n\t\t122\n\t],\n\t\"./coni.svg\": [\n\t\t346,\n\t\t123\n\t],\n\t\"./cosm.svg\": [\n\t\t347,\n\t\t124\n\t],\n\t\"./coti.svg\": [\n\t\t348,\n\t\t125\n\t],\n\t\"./cov.svg\": [\n\t\t349,\n\t\t126\n\t],\n\t\"./cova.svg\": [\n\t\t350,\n\t\t127\n\t],\n\t\"./cpc.svg\": [\n\t\t351,\n\t\t128\n\t],\n\t\"./cpx.svg\": [\n\t\t352,\n\t\t129\n\t],\n\t\"./cre.svg\": [\n\t\t353,\n\t\t130\n\t],\n\t\"./cream.svg\": [\n\t\t354,\n\t\t131\n\t],\n\t\"./cred.svg\": [\n\t\t355,\n\t\t132\n\t],\n\t\"./crep.svg\": [\n\t\t356,\n\t\t133\n\t],\n\t\"./cro.svg\": [\n\t\t357,\n\t\t134\n\t],\n\t\"./crpt.svg\": [\n\t\t358,\n\t\t135\n\t],\n\t\"./crv.svg\": [\n\t\t359,\n\t\t136\n\t],\n\t\"./cs.svg\": [\n\t\t360,\n\t\t137\n\t],\n\t\"./csai.svg\": [\n\t\t361,\n\t\t138\n\t],\n\t\"./csc.svg\": [\n\t\t362,\n\t\t139\n\t],\n\t\"./ctc.svg\": [\n\t\t363,\n\t\t140\n\t],\n\t\"./ctxc.svg\": [\n\t\t364,\n\t\t141\n\t],\n\t\"./cube.svg\": [\n\t\t365,\n\t\t142\n\t],\n\t\"./cusdc.svg\": [\n\t\t366,\n\t\t143\n\t],\n\t\"./cv.svg\": [\n\t\t367,\n\t\t144\n\t],\n\t\"./cvc.svg\": [\n\t\t368,\n\t\t145\n\t],\n\t\"./cvt.svg\": [\n\t\t369,\n\t\t146\n\t],\n\t\"./cwbtc.svg\": [\n\t\t370,\n\t\t147\n\t],\n\t\"./czrx.svg\": [\n\t\t371,\n\t\t148\n\t],\n\t\"./dadi.svg\": [\n\t\t372,\n\t\t149\n\t],\n\t\"./dag.svg\": [\n\t\t373,\n\t\t150\n\t],\n\t\"./dai.svg\": [\n\t\t374,\n\t\t151\n\t],\n\t\"./dasc.svg\": [\n\t\t375,\n\t\t152\n\t],\n\t\"./dash.svg\": [\n\t\t376,\n\t\t153\n\t],\n\t\"./dat.svg\": [\n\t\t377,\n\t\t154\n\t],\n\t\"./data.svg\": [\n\t\t378,\n\t\t155\n\t],\n\t\"./datx.svg\": [\n\t\t379,\n\t\t156\n\t],\n\t\"./dbc.svg\": [\n\t\t380,\n\t\t157\n\t],\n\t\"./dcc.svg\": [\n\t\t381,\n\t\t158\n\t],\n\t\"./dcn.svg\": [\n\t\t382,\n\t\t159\n\t],\n\t\"./dcr.svg\": [\n\t\t383,\n\t\t160\n\t],\n\t\"./dct.svg\": [\n\t\t384,\n\t\t161\n\t],\n\t\"./ddd.svg\": [\n\t\t385,\n\t\t162\n\t],\n\t\"./default.svg\": [\n\t\t133\n\t],\n\t\"./dent.svg\": [\n\t\t386,\n\t\t163\n\t],\n\t\"./dfi.svg\": [\n\t\t387,\n\t\t164\n\t],\n\t\"./dft.svg\": [\n\t\t388,\n\t\t165\n\t],\n\t\"./dgb.svg\": [\n\t\t389,\n\t\t166\n\t],\n\t\"./dgd.svg\": [\n\t\t390,\n\t\t167\n\t],\n\t\"./dgtx.svg\": [\n\t\t391,\n\t\t168\n\t],\n\t\"./divi.svg\": [\n\t\t392,\n\t\t169\n\t],\n\t\"./dlt.svg\": [\n\t\t393,\n\t\t170\n\t],\n\t\"./dmt.svg\": [\n\t\t394,\n\t\t171\n\t],\n\t\"./dnt.svg\": [\n\t\t395,\n\t\t172\n\t],\n\t\"./dock.svg\": [\n\t\t396,\n\t\t173\n\t],\n\t\"./dodo.svg\": [\n\t\t397,\n\t\t174\n\t],\n\t\"./doge.svg\": [\n\t\t398,\n\t\t175\n\t],\n\t\"./dor.svg\": [\n\t\t399,\n\t\t176\n\t],\n\t\"./dot.svg\": [\n\t\t400,\n\t\t177\n\t],\n\t\"./drgn.svg\": [\n\t\t401,\n\t\t178\n\t],\n\t\"./drop.svg\": [\n\t\t402,\n\t\t179\n\t],\n\t\"./dta.svg\": [\n\t\t403,\n\t\t180\n\t],\n\t\"./dtr.svg\": [\n\t\t404,\n\t\t181\n\t],\n\t\"./dtx.svg\": [\n\t\t405,\n\t\t182\n\t],\n\t\"./dxt.svg\": [\n\t\t406,\n\t\t183\n\t],\n\t\"./edg.svg\": [\n\t\t407,\n\t\t184\n\t],\n\t\"./edo.svg\": [\n\t\t408,\n\t\t185\n\t],\n\t\"./efx.svg\": [\n\t\t409,\n\t\t186\n\t],\n\t\"./egld.svg\": [\n\t\t410,\n\t\t187\n\t],\n\t\"./egt.svg\": [\n\t\t411,\n\t\t188\n\t],\n\t\"./ekg.svg\": [\n\t\t412,\n\t\t189\n\t],\n\t\"./ekt.svg\": [\n\t\t413,\n\t\t190\n\t],\n\t\"./ela.svg\": [\n\t\t414,\n\t\t191\n\t],\n\t\"./elec.svg\": [\n\t\t415,\n\t\t192\n\t],\n\t\"./elf.svg\": [\n\t\t416,\n\t\t193\n\t],\n\t\"./emc.svg\": [\n\t\t417,\n\t\t194\n\t],\n\t\"./emc2.svg\": [\n\t\t418,\n\t\t195\n\t],\n\t\"./eng.svg\": [\n\t\t419,\n\t\t196\n\t],\n\t\"./enj.svg\": [\n\t\t420,\n\t\t197\n\t],\n\t\"./eos.svg\": [\n\t\t421,\n\t\t198\n\t],\n\t\"./eosdac.svg\": [\n\t\t422,\n\t\t199\n\t],\n\t\"./erd.svg\": [\n\t\t423,\n\t\t200\n\t],\n\t\"./ern.svg\": [\n\t\t424,\n\t\t201\n\t],\n\t\"./esd.svg\": [\n\t\t425,\n\t\t202\n\t],\n\t\"./esp.svg\": [\n\t\t426,\n\t\t203\n\t],\n\t\"./ess.svg\": [\n\t\t427,\n\t\t204\n\t],\n\t\"./etc.svg\": [\n\t\t428,\n\t\t205\n\t],\n\t\"./eth.svg\": [\n\t\t429,\n\t\t206\n\t],\n\t\"./etn.svg\": [\n\t\t430,\n\t\t207\n\t],\n\t\"./etp.svg\": [\n\t\t431,\n\t\t208\n\t],\n\t\"./etz.svg\": [\n\t\t432,\n\t\t209\n\t],\n\t\"./evx.svg\": [\n\t\t433,\n\t\t210\n\t],\n\t\"./ewt.svg\": [\n\t\t434,\n\t\t211\n\t],\n\t\"./exrn.svg\": [\n\t\t435,\n\t\t212\n\t],\n\t\"./exy.svg\": [\n\t\t436,\n\t\t213\n\t],\n\t\"./fct.svg\": [\n\t\t437,\n\t\t214\n\t],\n\t\"./fet.svg\": [\n\t\t438,\n\t\t215\n\t],\n\t\"./fil.svg\": [\n\t\t439,\n\t\t216\n\t],\n\t\"./flow.svg\": [\n\t\t440,\n\t\t217\n\t],\n\t\"./fota.svg\": [\n\t\t441,\n\t\t218\n\t],\n\t\"./frm.svg\": [\n\t\t442,\n\t\t219\n\t],\n\t\"./fsn.svg\": [\n\t\t443,\n\t\t220\n\t],\n\t\"./ft.svg\": [\n\t\t444,\n\t\t221\n\t],\n\t\"./ftm.svg\": [\n\t\t445,\n\t\t222\n\t],\n\t\"./ftt.svg\": [\n\t\t446,\n\t\t223\n\t],\n\t\"./fuel.svg\": [\n\t\t447,\n\t\t224\n\t],\n\t\"./fun.svg\": [\n\t\t448,\n\t\t225\n\t],\n\t\"./fxc.svg\": [\n\t\t449,\n\t\t226\n\t],\n\t\"./fxt.svg\": [\n\t\t450,\n\t\t227\n\t],\n\t\"./gala.svg\": [\n\t\t451,\n\t\t228\n\t],\n\t\"./gdc.svg\": [\n\t\t452,\n\t\t229\n\t],\n\t\"./gem.svg\": [\n\t\t453,\n\t\t230\n\t],\n\t\"./gen.svg\": [\n\t\t454,\n\t\t231\n\t],\n\t\"./gno.svg\": [\n\t\t455,\n\t\t232\n\t],\n\t\"./gnt.svg\": [\n\t\t456,\n\t\t233\n\t],\n\t\"./gnx.svg\": [\n\t\t457,\n\t\t234\n\t],\n\t\"./go.svg\": [\n\t\t458,\n\t\t235\n\t],\n\t\"./goc.svg\": [\n\t\t459,\n\t\t236\n\t],\n\t\"./got.svg\": [\n\t\t460,\n\t\t237\n\t],\n\t\"./grin.svg\": [\n\t\t461,\n\t\t238\n\t],\n\t\"./grs.svg\": [\n\t\t462,\n\t\t239\n\t],\n\t\"./grt.svg\": [\n\t\t463,\n\t\t240\n\t],\n\t\"./gsc.svg\": [\n\t\t464,\n\t\t241\n\t],\n\t\"./gt.svg\": [\n\t\t465,\n\t\t242\n\t],\n\t\"./gtc.svg\": [\n\t\t466,\n\t\t243\n\t],\n\t\"./gto.svg\": [\n\t\t467,\n\t\t244\n\t],\n\t\"./gusd.svg\": [\n\t\t468,\n\t\t245\n\t],\n\t\"./gvt.svg\": [\n\t\t469,\n\t\t246\n\t],\n\t\"./gxs.svg\": [\n\t\t470,\n\t\t247\n\t],\n\t\"./hav.svg\": [\n\t\t471,\n\t\t248\n\t],\n\t\"./hbar.svg\": [\n\t\t472,\n\t\t249\n\t],\n\t\"./hc.svg\": [\n\t\t473,\n\t\t250\n\t],\n\t\"./hedg.svg\": [\n\t\t474,\n\t\t251\n\t],\n\t\"./her.svg\": [\n\t\t475,\n\t\t252\n\t],\n\t\"./hex.svg\": [\n\t\t476,\n\t\t253\n\t],\n\t\"./hive.svg\": [\n\t\t477,\n\t\t254\n\t],\n\t\"./hot-x.svg\": [\n\t\t478,\n\t\t255\n\t],\n\t\"./hot.svg\": [\n\t\t479,\n\t\t256\n\t],\n\t\"./hpb.svg\": [\n\t\t480,\n\t\t257\n\t],\n\t\"./hsr.svg\": [\n\t\t481,\n\t\t258\n\t],\n\t\"./ht.svg\": [\n\t\t482,\n\t\t259\n\t],\n\t\"./hum.svg\": [\n\t\t483,\n\t\t260\n\t],\n\t\"./husd.svg\": [\n\t\t484,\n\t\t261\n\t],\n\t\"./hvn.svg\": [\n\t\t485,\n\t\t262\n\t],\n\t\"./hydro.svg\": [\n\t\t486,\n\t\t263\n\t],\n\t\"./hyn.svg\": [\n\t\t487,\n\t\t264\n\t],\n\t\"./ibat.svg\": [\n\t\t488,\n\t\t265\n\t],\n\t\"./icn.svg\": [\n\t\t489,\n\t\t266\n\t],\n\t\"./icx.svg\": [\n\t\t490,\n\t\t267\n\t],\n\t\"./idai.svg\": [\n\t\t491,\n\t\t268\n\t],\n\t\"./idex.svg\": [\n\t\t492,\n\t\t269\n\t],\n\t\"./ieth.svg\": [\n\t\t493,\n\t\t270\n\t],\n\t\"./ignis.svg\": [\n\t\t494,\n\t\t271\n\t],\n\t\"./iknc.svg\": [\n\t\t495,\n\t\t272\n\t],\n\t\"./ilink.svg\": [\n\t\t496,\n\t\t273\n\t],\n\t\"./inb.svg\": [\n\t\t497,\n\t\t274\n\t],\n\t\"./ins.svg\": [\n\t\t498,\n\t\t275\n\t],\n\t\"./iost.svg\": [\n\t\t499,\n\t\t276\n\t],\n\t\"./iota.svg\": [\n\t\t500,\n\t\t277\n\t],\n\t\"./iotx.svg\": [\n\t\t501,\n\t\t278\n\t],\n\t\"./iq.svg\": [\n\t\t502,\n\t\t279\n\t],\n\t\"./irep.svg\": [\n\t\t503,\n\t\t280\n\t],\n\t\"./iris.svg\": [\n\t\t504,\n\t\t281\n\t],\n\t\"./isusd.svg\": [\n\t\t505,\n\t\t282\n\t],\n\t\"./iusdc.svg\": [\n\t\t506,\n\t\t283\n\t],\n\t\"./iwbtc.svg\": [\n\t\t507,\n\t\t284\n\t],\n\t\"./izrx.svg\": [\n\t\t508,\n\t\t285\n\t],\n\t\"./jnt.svg\": [\n\t\t509,\n\t\t286\n\t],\n\t\"./jrt.svg\": [\n\t\t510,\n\t\t287\n\t],\n\t\"./jst.svg\": [\n\t\t511,\n\t\t288\n\t],\n\t\"./kava.svg\": [\n\t\t512,\n\t\t289\n\t],\n\t\"./kcs.svg\": [\n\t\t513,\n\t\t290\n\t],\n\t\"./keep.svg\": [\n\t\t514,\n\t\t291\n\t],\n\t\"./key.svg\": [\n\t\t515,\n\t\t292\n\t],\n\t\"./kick.svg\": [\n\t\t516,\n\t\t293\n\t],\n\t\"./kin.svg\": [\n\t\t517,\n\t\t294\n\t],\n\t\"./klv.svg\": [\n\t\t518,\n\t\t295\n\t],\n\t\"./kmd.svg\": [\n\t\t519,\n\t\t296\n\t],\n\t\"./knc.svg\": [\n\t\t520,\n\t\t297\n\t],\n\t\"./ksm.svg\": [\n\t\t521,\n\t\t298\n\t],\n\t\"./lamb.svg\": [\n\t\t522,\n\t\t299\n\t],\n\t\"./land.svg\": [\n\t\t523,\n\t\t300\n\t],\n\t\"./lba.svg\": [\n\t\t524,\n\t\t301\n\t],\n\t\"./ldo.svg\": [\n\t\t525,\n\t\t302\n\t],\n\t\"./lend.svg\": [\n\t\t526,\n\t\t303\n\t],\n\t\"./leo.svg\": [\n\t\t527,\n\t\t304\n\t],\n\t\"./link.svg\": [\n\t\t528,\n\t\t305\n\t],\n\t\"./lit.svg\": [\n\t\t529,\n\t\t306\n\t],\n\t\"./lky.svg\": [\n\t\t530,\n\t\t307\n\t],\n\t\"./loki.svg\": [\n\t\t531,\n\t\t308\n\t],\n\t\"./lon.svg\": [\n\t\t532,\n\t\t309\n\t],\n\t\"./loom.svg\": [\n\t\t533,\n\t\t310\n\t],\n\t\"./lpt.svg\": [\n\t\t534,\n\t\t311\n\t],\n\t\"./lqd.svg\": [\n\t\t535,\n\t\t312\n\t],\n\t\"./lrc.svg\": [\n\t\t536,\n\t\t313\n\t],\n\t\"./lsk.svg\": [\n\t\t537,\n\t\t314\n\t],\n\t\"./ltc.svg\": [\n\t\t538,\n\t\t315\n\t],\n\t\"./lto.svg\": [\n\t\t539,\n\t\t316\n\t],\n\t\"./lun.svg\": [\n\t\t540,\n\t\t317\n\t],\n\t\"./luna.svg\": [\n\t\t541,\n\t\t318\n\t],\n\t\"./lxt.svg\": [\n\t\t542,\n\t\t319\n\t],\n\t\"./lym.svg\": [\n\t\t543,\n\t\t320\n\t],\n\t\"./maid.svg\": [\n\t\t544,\n\t\t321\n\t],\n\t\"./man.svg\": [\n\t\t545,\n\t\t322\n\t],\n\t\"./mana-old.svg\": [\n\t\t546,\n\t\t323\n\t],\n\t\"./mana.svg\": [\n\t\t547,\n\t\t324\n\t],\n\t\"./math.svg\": [\n\t\t548,\n\t\t325\n\t],\n\t\"./matic.svg\": [\n\t\t549,\n\t\t326\n\t],\n\t\"./mbc.svg\": [\n\t\t550,\n\t\t327\n\t],\n\t\"./mco.svg\": [\n\t\t551,\n\t\t328\n\t],\n\t\"./mcx.svg\": [\n\t\t552,\n\t\t329\n\t],\n\t\"./mda.svg\": [\n\t\t553,\n\t\t330\n\t],\n\t\"./mds.svg\": [\n\t\t554,\n\t\t331\n\t],\n\t\"./med.svg\": [\n\t\t555,\n\t\t332\n\t],\n\t\"./medx.svg\": [\n\t\t556,\n\t\t333\n\t],\n\t\"./met.svg\": [\n\t\t557,\n\t\t334\n\t],\n\t\"./mfg.svg\": [\n\t\t558,\n\t\t335\n\t],\n\t\"./mft.svg\": [\n\t\t559,\n\t\t336\n\t],\n\t\"./mir.svg\": [\n\t\t560,\n\t\t337\n\t],\n\t\"./mith.svg\": [\n\t\t561,\n\t\t338\n\t],\n\t\"./mkr.svg\": [\n\t\t562,\n\t\t339\n\t],\n\t\"./mln.svg\": [\n\t\t563,\n\t\t340\n\t],\n\t\"./mod.svg\": [\n\t\t564,\n\t\t341\n\t],\n\t\"./mot.svg\": [\n\t\t565,\n\t\t342\n\t],\n\t\"./mta.svg\": [\n\t\t566,\n\t\t343\n\t],\n\t\"./mth.svg\": [\n\t\t567,\n\t\t344\n\t],\n\t\"./mtl.svg\": [\n\t\t568,\n\t\t345\n\t],\n\t\"./mtn.svg\": [\n\t\t569,\n\t\t346\n\t],\n\t\"./mvc.svg\": [\n\t\t570,\n\t\t347\n\t],\n\t\"./mvl.svg\": [\n\t\t571,\n\t\t348\n\t],\n\t\"./mvp.svg\": [\n\t\t572,\n\t\t349\n\t],\n\t\"./mwat.svg\": [\n\t\t573,\n\t\t350\n\t],\n\t\"./mwc.svg\": [\n\t\t574,\n\t\t351\n\t],\n\t\"./mxm.svg\": [\n\t\t575,\n\t\t352\n\t],\n\t\"./myb.svg\": [\n\t\t576,\n\t\t353\n\t],\n\t\"./nano.svg\": [\n\t\t577,\n\t\t354\n\t],\n\t\"./nas.svg\": [\n\t\t578,\n\t\t355\n\t],\n\t\"./nav.svg\": [\n\t\t579,\n\t\t356\n\t],\n\t\"./ncash.svg\": [\n\t\t580,\n\t\t357\n\t],\n\t\"./nct.svg\": [\n\t\t581,\n\t\t358\n\t],\n\t\"./near.svg\": [\n\t\t582,\n\t\t359\n\t],\n\t\"./nebl.svg\": [\n\t\t583,\n\t\t360\n\t],\n\t\"./nec.svg\": [\n\t\t584,\n\t\t361\n\t],\n\t\"./neo.svg\": [\n\t\t585,\n\t\t362\n\t],\n\t\"./new.svg\": [\n\t\t586,\n\t\t363\n\t],\n\t\"./nex.svg\": [\n\t\t587,\n\t\t364\n\t],\n\t\"./nexo.svg\": [\n\t\t588,\n\t\t365\n\t],\n\t\"./nexxo.svg\": [\n\t\t589,\n\t\t366\n\t],\n\t\"./ngc.svg\": [\n\t\t590,\n\t\t367\n\t],\n\t\"./nkn.svg\": [\n\t\t591,\n\t\t368\n\t],\n\t\"./nmr.svg\": [\n\t\t592,\n\t\t369\n\t],\n\t\"./noia.svg\": [\n\t\t593,\n\t\t370\n\t],\n\t\"./nper.svg\": [\n\t\t594,\n\t\t371\n\t],\n\t\"./npxs.svg\": [\n\t\t595,\n\t\t372\n\t],\n\t\"./nrg.svg\": [\n\t\t596,\n\t\t373\n\t],\n\t\"./nrve.svg\": [\n\t\t597,\n\t\t374\n\t],\n\t\"./nu.svg\": [\n\t\t598,\n\t\t375\n\t],\n\t\"./nuls.svg\": [\n\t\t599,\n\t\t376\n\t],\n\t\"./nxs.svg\": [\n\t\t600,\n\t\t377\n\t],\n\t\"./nxt.svg\": [\n\t\t601,\n\t\t378\n\t],\n\t\"./oag.svg\": [\n\t\t602,\n\t\t379\n\t],\n\t\"./oax.svg\": [\n\t\t603,\n\t\t380\n\t],\n\t\"./ocean.svg\": [\n\t\t604,\n\t\t381\n\t],\n\t\"./ocn.svg\": [\n\t\t605,\n\t\t382\n\t],\n\t\"./ode.svg\": [\n\t\t606,\n\t\t383\n\t],\n\t\"./ogn.svg\": [\n\t\t607,\n\t\t384\n\t],\n\t\"./okb.svg\": [\n\t\t608,\n\t\t385\n\t],\n\t\"./olt.svg\": [\n\t\t609,\n\t\t386\n\t],\n\t\"./omg.svg\": [\n\t\t610,\n\t\t387\n\t],\n\t\"./one.svg\": [\n\t\t611,\n\t\t388\n\t],\n\t\"./onion.svg\": [\n\t\t612,\n\t\t389\n\t],\n\t\"./ont.svg\": [\n\t\t613,\n\t\t390\n\t],\n\t\"./open.svg\": [\n\t\t614,\n\t\t391\n\t],\n\t\"./orbs.svg\": [\n\t\t615,\n\t\t392\n\t],\n\t\"./orc.svg\": [\n\t\t616,\n\t\t393\n\t],\n\t\"./orn.svg\": [\n\t\t617,\n\t\t394\n\t],\n\t\"./ost.svg\": [\n\t\t618,\n\t\t395\n\t],\n\t\"./ovc.svg\": [\n\t\t619,\n\t\t396\n\t],\n\t\"./oxt.svg\": [\n\t\t620,\n\t\t397\n\t],\n\t\"./pBTC.svg\": [\n\t\t621,\n\t\t398\n\t],\n\t\"./pai.svg\": [\n\t\t622,\n\t\t399\n\t],\n\t\"./pal.svg\": [\n\t\t623,\n\t\t400\n\t],\n\t\"./part.svg\": [\n\t\t624,\n\t\t401\n\t],\n\t\"./pax.svg\": [\n\t\t625,\n\t\t402\n\t],\n\t\"./paxg.svg\": [\n\t\t626,\n\t\t403\n\t],\n\t\"./pay.svg\": [\n\t\t627,\n\t\t404\n\t],\n\t\"./perl.svg\": [\n\t\t628,\n\t\t405\n\t],\n\t\"./pivx.svg\": [\n\t\t629,\n\t\t406\n\t],\n\t\"./plDAI.svg\": [\n\t\t630,\n\t\t407\n\t],\n\t\"./plUSDC.svg\": [\n\t\t631,\n\t\t408\n\t],\n\t\"./play.svg\": [\n\t\t632,\n\t\t409\n\t],\n\t\"./plr.svg\": [\n\t\t633,\n\t\t410\n\t],\n\t\"./png.svg\": [\n\t\t634,\n\t\t411\n\t],\n\t\"./pnk.svg\": [\n\t\t635,\n\t\t412\n\t],\n\t\"./pnt.svg\": [\n\t\t636,\n\t\t413\n\t],\n\t\"./poa.svg\": [\n\t\t637,\n\t\t414\n\t],\n\t\"./poe.svg\": [\n\t\t638,\n\t\t415\n\t],\n\t\"./poly.svg\": [\n\t\t639,\n\t\t416\n\t],\n\t\"./pond.svg\": [\n\t\t640,\n\t\t417\n\t],\n\t\"./powr.svg\": [\n\t\t641,\n\t\t418\n\t],\n\t\"./ppay.svg\": [\n\t\t642,\n\t\t419\n\t],\n\t\"./ppc.svg\": [\n\t\t643,\n\t\t420\n\t],\n\t\"./ppp.svg\": [\n\t\t644,\n\t\t421\n\t],\n\t\"./ppt.svg\": [\n\t\t645,\n\t\t422\n\t],\n\t\"./pre.svg\": [\n\t\t646,\n\t\t423\n\t],\n\t\"./prl.svg\": [\n\t\t647,\n\t\t424\n\t],\n\t\"./pro.svg\": [\n\t\t648,\n\t\t425\n\t],\n\t\"./prq.svg\": [\n\t\t649,\n\t\t426\n\t],\n\t\"./pst.svg\": [\n\t\t650,\n\t\t427\n\t],\n\t\"./qash.svg\": [\n\t\t651,\n\t\t428\n\t],\n\t\"./qbit.svg\": [\n\t\t652,\n\t\t429\n\t],\n\t\"./qkc.svg\": [\n\t\t653,\n\t\t430\n\t],\n\t\"./qlc.svg\": [\n\t\t654,\n\t\t431\n\t],\n\t\"./qnt.svg\": [\n\t\t655,\n\t\t432\n\t],\n\t\"./qsp.svg\": [\n\t\t656,\n\t\t433\n\t],\n\t\"./qtum.svg\": [\n\t\t657,\n\t\t434\n\t],\n\t\"./r.svg\": [\n\t\t658,\n\t\t435\n\t],\n\t\"./rae.svg\": [\n\t\t659,\n\t\t436\n\t],\n\t\"./rari.svg\": [\n\t\t660,\n\t\t437\n\t],\n\t\"./ray.svg\": [\n\t\t661,\n\t\t438\n\t],\n\t\"./rcn.svg\": [\n\t\t662,\n\t\t439\n\t],\n\t\"./rdd.svg\": [\n\t\t663,\n\t\t440\n\t],\n\t\"./rdn.svg\": [\n\t\t664,\n\t\t441\n\t],\n\t\"./ren.svg\": [\n\t\t665,\n\t\t442\n\t],\n\t\"./rep.svg\": [\n\t\t666,\n\t\t443\n\t],\n\t\"./req.svg\": [\n\t\t667,\n\t\t444\n\t],\n\t\"./rev.svg\": [\n\t\t668,\n\t\t445\n\t],\n\t\"./rfox.svg\": [\n\t\t669,\n\t\t446\n\t],\n\t\"./rhoc.svg\": [\n\t\t670,\n\t\t447\n\t],\n\t\"./rif.svg\": [\n\t\t671,\n\t\t448\n\t],\n\t\"./rlc.svg\": [\n\t\t672,\n\t\t449\n\t],\n\t\"./rose.svg\": [\n\t\t673,\n\t\t450\n\t],\n\t\"./rpx.svg\": [\n\t\t674,\n\t\t451\n\t],\n\t\"./rsr.svg\": [\n\t\t675,\n\t\t452\n\t],\n\t\"./rsv.svg\": [\n\t\t676,\n\t\t453\n\t],\n\t\"./rune.svg\": [\n\t\t677,\n\t\t454\n\t],\n\t\"./rvn.svg\": [\n\t\t678,\n\t\t455\n\t],\n\t\"./s.svg\": [\n\t\t679,\n\t\t456\n\t],\n\t\"./sai.svg\": [\n\t\t680,\n\t\t457\n\t],\n\t\"./salt.svg\": [\n\t\t681,\n\t\t458\n\t],\n\t\"./san.svg\": [\n\t\t682,\n\t\t459\n\t],\n\t\"./scrl.svg\": [\n\t\t683,\n\t\t460\n\t],\n\t\"./scrt.svg\": [\n\t\t684,\n\t\t461\n\t],\n\t\"./seele.svg\": [\n\t\t685,\n\t\t462\n\t],\n\t\"./sem.svg\": [\n\t\t686,\n\t\t463\n\t],\n\t\"./sfp.svg\": [\n\t\t687,\n\t\t464\n\t],\n\t\"./shr.svg\": [\n\t\t688,\n\t\t465\n\t],\n\t\"./shuf.svg\": [\n\t\t689,\n\t\t466\n\t],\n\t\"./sia.svg\": [\n\t\t690,\n\t\t467\n\t],\n\t\"./skl.svg\": [\n\t\t691,\n\t\t468\n\t],\n\t\"./sky.svg\": [\n\t\t692,\n\t\t469\n\t],\n\t\"./slt.svg\": [\n\t\t693,\n\t\t470\n\t],\n\t\"./smart.svg\": [\n\t\t694,\n\t\t471\n\t],\n\t\"./snc.svg\": [\n\t\t695,\n\t\t472\n\t],\n\t\"./sngls.svg\": [\n\t\t696,\n\t\t473\n\t],\n\t\"./snm.svg\": [\n\t\t697,\n\t\t474\n\t],\n\t\"./snt.svg\": [\n\t\t698,\n\t\t475\n\t],\n\t\"./snx.svg\": [\n\t\t699,\n\t\t476\n\t],\n\t\"./sol.svg\": [\n\t\t700,\n\t\t477\n\t],\n\t\"./soul.svg\": [\n\t\t701,\n\t\t478\n\t],\n\t\"./spn.svg\": [\n\t\t702,\n\t\t479\n\t],\n\t\"./srm.svg\": [\n\t\t703,\n\t\t480\n\t],\n\t\"./stake.svg\": [\n\t\t704,\n\t\t481\n\t],\n\t\"./steem.svg\": [\n\t\t705,\n\t\t482\n\t],\n\t\"./steth.svg\": [\n\t\t706,\n\t\t483\n\t],\n\t\"./stmx.svg\": [\n\t\t707,\n\t\t484\n\t],\n\t\"./storj.svg\": [\n\t\t708,\n\t\t485\n\t],\n\t\"./storm.svg\": [\n\t\t709,\n\t\t486\n\t],\n\t\"./strat.svg\": [\n\t\t710,\n\t\t487\n\t],\n\t\"./stx.svg\": [\n\t\t711,\n\t\t488\n\t],\n\t\"./sub.svg\": [\n\t\t712,\n\t\t489\n\t],\n\t\"./super.svg\": [\n\t\t713,\n\t\t490\n\t],\n\t\"./suqa.svg\": [\n\t\t714,\n\t\t491\n\t],\n\t\"./sushi.svg\": [\n\t\t715,\n\t\t492\n\t],\n\t\"./suter.svg\": [\n\t\t716,\n\t\t493\n\t],\n\t\"./swap.svg\": [\n\t\t717,\n\t\t494\n\t],\n\t\"./swth.svg\": [\n\t\t718,\n\t\t495\n\t],\n\t\"./sxdt.svg\": [\n\t\t719,\n\t\t496\n\t],\n\t\"./sxp.svg\": [\n\t\t720,\n\t\t497\n\t],\n\t\"./sys.svg\": [\n\t\t721,\n\t\t498\n\t],\n\t\"./tct.svg\": [\n\t\t722,\n\t\t499\n\t],\n\t\"./tel.svg\": [\n\t\t723,\n\t\t500\n\t],\n\t\"./tfuel.svg\": [\n\t\t724,\n\t\t501\n\t],\n\t\"./thc.svg\": [\n\t\t725,\n\t\t502\n\t],\n\t\"./theta.svg\": [\n\t\t726,\n\t\t503\n\t],\n\t\"./thr.svg\": [\n\t\t727,\n\t\t504\n\t],\n\t\"./tio.svg\": [\n\t\t728,\n\t\t505\n\t],\n\t\"./titan.svg\": [\n\t\t729,\n\t\t506\n\t],\n\t\"./tkn.svg\": [\n\t\t730,\n\t\t507\n\t],\n\t\"./tky.svg\": [\n\t\t731,\n\t\t508\n\t],\n\t\"./tnb.svg\": [\n\t\t732,\n\t\t509\n\t],\n\t\"./tnc.svg\": [\n\t\t733,\n\t\t510\n\t],\n\t\"./tnt.svg\": [\n\t\t734,\n\t\t511\n\t],\n\t\"./tomo.svg\": [\n\t\t735,\n\t\t512\n\t],\n\t\"./tpay.svg\": [\n\t\t736,\n\t\t513\n\t],\n\t\"./trac.svg\": [\n\t\t737,\n\t\t514\n\t],\n\t\"./trb.svg\": [\n\t\t738,\n\t\t515\n\t],\n\t\"./trig.svg\": [\n\t\t739,\n\t\t516\n\t],\n\t\"./trtl.svg\": [\n\t\t740,\n\t\t517\n\t],\n\t\"./trx.svg\": [\n\t\t741,\n\t\t518\n\t],\n\t\"./tryb.svg\": [\n\t\t742,\n\t\t519\n\t],\n\t\"./ttc.svg\": [\n\t\t743,\n\t\t520\n\t],\n\t\"./tube.svg\": [\n\t\t744,\n\t\t521\n\t],\n\t\"./tusd.svg\": [\n\t\t745,\n\t\t522\n\t],\n\t\"./ubq.svg\": [\n\t\t746,\n\t\t523\n\t],\n\t\"./ubt.svg\": [\n\t\t747,\n\t\t524\n\t],\n\t\"./ult.svg\": [\n\t\t748,\n\t\t525\n\t],\n\t\"./uma.svg\": [\n\t\t749,\n\t\t526\n\t],\n\t\"./unfi.svg\": [\n\t\t750,\n\t\t527\n\t],\n\t\"./uni.svg\": [\n\t\t751,\n\t\t528\n\t],\n\t\"./unn.svg\": [\n\t\t752,\n\t\t529\n\t],\n\t\"./uos.svg\": [\n\t\t753,\n\t\t530\n\t],\n\t\"./upp.svg\": [\n\t\t754,\n\t\t531\n\t],\n\t\"./usd.svg\": [\n\t\t755,\n\t\t532\n\t],\n\t\"./usdc.svg\": [\n\t\t756,\n\t\t533\n\t],\n\t\"./usds.svg\": [\n\t\t757,\n\t\t534\n\t],\n\t\"./usdt.svg\": [\n\t\t758,\n\t\t535\n\t],\n\t\"./utk.svg\": [\n\t\t759,\n\t\t536\n\t],\n\t\"./uuu.svg\": [\n\t\t760,\n\t\t537\n\t],\n\t\"./veri.svg\": [\n\t\t761,\n\t\t538\n\t],\n\t\"./vest.svg\": [\n\t\t762,\n\t\t539\n\t],\n\t\"./vet.svg\": [\n\t\t763,\n\t\t540\n\t],\n\t\"./via.svg\": [\n\t\t764,\n\t\t541\n\t],\n\t\"./vib.svg\": [\n\t\t765,\n\t\t542\n\t],\n\t\"./vibe.svg\": [\n\t\t766,\n\t\t543\n\t],\n\t\"./vidt.svg\": [\n\t\t767,\n\t\t544\n\t],\n\t\"./vikky.svg\": [\n\t\t768,\n\t\t545\n\t],\n\t\"./vin.svg\": [\n\t\t769,\n\t\t546\n\t],\n\t\"./vite.svg\": [\n\t\t770,\n\t\t547\n\t],\n\t\"./viu.svg\": [\n\t\t771,\n\t\t548\n\t],\n\t\"./vlx.svg\": [\n\t\t772,\n\t\t549\n\t],\n\t\"./vrs.svg\": [\n\t\t773,\n\t\t550\n\t],\n\t\"./vsp.svg\": [\n\t\t774,\n\t\t551\n\t],\n\t\"./vsys.svg\": [\n\t\t775,\n\t\t552\n\t],\n\t\"./vtc.svg\": [\n\t\t776,\n\t\t553\n\t],\n\t\"./wabi.svg\": [\n\t\t777,\n\t\t554\n\t],\n\t\"./wan.svg\": [\n\t\t778,\n\t\t555\n\t],\n\t\"./waves.svg\": [\n\t\t779,\n\t\t556\n\t],\n\t\"./wbtc.svg\": [\n\t\t780,\n\t\t557\n\t],\n\t\"./wct.svg\": [\n\t\t781,\n\t\t558\n\t],\n\t\"./whale.svg\": [\n\t\t782,\n\t\t559\n\t],\n\t\"./wib.svg\": [\n\t\t783,\n\t\t560\n\t],\n\t\"./wings.svg\": [\n\t\t784,\n\t\t561\n\t],\n\t\"./woo.svg\": [\n\t\t785,\n\t\t562\n\t],\n\t\"./wpr.svg\": [\n\t\t786,\n\t\t563\n\t],\n\t\"./wrx.svg\": [\n\t\t787,\n\t\t564\n\t],\n\t\"./wtc.svg\": [\n\t\t788,\n\t\t565\n\t],\n\t\"./wxt.svg\": [\n\t\t789,\n\t\t566\n\t],\n\t\"./xas.svg\": [\n\t\t790,\n\t\t567\n\t],\n\t\"./xchf.svg\": [\n\t\t791,\n\t\t568\n\t],\n\t\"./xem.svg\": [\n\t\t792,\n\t\t569\n\t],\n\t\"./xin.svg\": [\n\t\t793,\n\t\t570\n\t],\n\t\"./xlm.svg\": [\n\t\t794,\n\t\t571\n\t],\n\t\"./xlq.svg\": [\n\t\t795,\n\t\t572\n\t],\n\t\"./xmark.svg\": [\n\t\t796,\n\t\t573\n\t],\n\t\"./xmr.svg\": [\n\t\t797,\n\t\t574\n\t],\n\t\"./xmx.svg\": [\n\t\t798,\n\t\t575\n\t],\n\t\"./xnk.svg\": [\n\t\t799,\n\t\t576\n\t],\n\t\"./xns.svg\": [\n\t\t800,\n\t\t577\n\t],\n\t\"./xor.svg\": [\n\t\t801,\n\t\t578\n\t],\n\t\"./xrp.svg\": [\n\t\t802,\n\t\t579\n\t],\n\t\"./xsn.svg\": [\n\t\t803,\n\t\t580\n\t],\n\t\"./xsr.svg\": [\n\t\t804,\n\t\t581\n\t],\n\t\"./xtz.svg\": [\n\t\t805,\n\t\t582\n\t],\n\t\"./xvg.svg\": [\n\t\t806,\n\t\t583\n\t],\n\t\"./xyo.svg\": [\n\t\t807,\n\t\t584\n\t],\n\t\"./xzc.svg\": [\n\t\t808,\n\t\t585\n\t],\n\t\"./yfi.svg\": [\n\t\t809,\n\t\t586\n\t],\n\t\"./yoyo.svg\": [\n\t\t810,\n\t\t587\n\t],\n\t\"./zai.svg\": [\n\t\t811,\n\t\t588\n\t],\n\t\"./zb.svg\": [\n\t\t812,\n\t\t589\n\t],\n\t\"./zco.svg\": [\n\t\t813,\n\t\t590\n\t],\n\t\"./zec.svg\": [\n\t\t814,\n\t\t591\n\t],\n\t\"./zel.svg\": [\n\t\t815,\n\t\t592\n\t],\n\t\"./zen.svg\": [\n\t\t816,\n\t\t593\n\t],\n\t\"./zil.svg\": [\n\t\t817,\n\t\t594\n\t],\n\t\"./zks.svg\": [\n\t\t818,\n\t\t595\n\t],\n\t\"./zrx.svg\": [\n\t\t819,\n\t\t596\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn Promise.all(ids.slice(1).map(__webpack_require__.e)).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 215;\nmodule.exports = webpackAsyncContext;","import { InjectedConnector } from \"@web3-react/injected-connector\";\nimport { WalletConnectConnector } from \"@web3-react/walletconnect-connector\";\n\nexport const POLLING_INTERVAL = 12000;\nexport const injected = new InjectedConnector({\n  supportedChainIds: [43113, 43114],\n});\n\nconst RPC_URLS: { [chainId: number]: string } = {\n  43113: \"https://api.avax-test.network/ext/bc/C/rpc\",\n  43114: \"https://api.avax.network/ext/bc/C/rpc\",\n};\n\nexport const walletconnect = new WalletConnectConnector({\n  rpc: RPC_URLS,\n  qrcode: true,\n});\n","import loglevel from \"loglevel\";\n\nexport default {\n  warn: loglevel.warn,\n  debug: loglevel.debug,\n  info: loglevel.info,\n  error: loglevel.error,\n  trace: loglevel.trace,\n  setLevel: loglevel.setLevel,\n};\n","import { injected, walletconnect } from \"../dapp/connectors\";\nimport { useEagerConnect, useInactiveListener } from \"../dapp/hooks\";\nimport logger from \"../logger\";\nimport { Web3Provider } from \"@ethersproject/providers\";\nimport Box from \"@mui/material/Box\";\nimport Button from \"@mui/material/Button\";\nimport Modal from \"@mui/material/Modal\";\nimport Typography from \"@mui/material/Typography\";\nimport { useWeb3React } from \"@web3-react/core\";\nimport { useEffect, useState } from \"react\";\n\nfunction getErrorMessage(error: Error) {\n  logger.error(error);\n  return \"An unknown error occurred. Check the console for more details.\";\n}\nconst style = {\n  position: \"absolute\",\n  top: \"50%\",\n  left: \"50%\",\n  transform: \"translate(-50%, -50%)\",\n  width: 400,\n  bgcolor: \"background.paper\",\n  boxShadow: 24,\n  p: 4,\n};\n\nexport const ConnectionsModal = () => {\n  const context = useWeb3React<Web3Provider>();\n  const { connector, activate, error } = context;\n\n  // handle logic to recognize the connector currently being activated\n  const [activatingConnector, setActivatingConnector] = useState<any>();\n  useEffect(() => {\n    if (activatingConnector && activatingConnector === connector) {\n      setActivatingConnector(undefined);\n    }\n  }, [activatingConnector, connector]);\n\n  // handle logic to eagerly connect to the injected ethereum provider, if it exists and has granted access already\n  const triedEager = useEagerConnect();\n\n  // handle logic to connect in reaction to certain events on the injected ethereum provider, if it exists\n  useInactiveListener(!triedEager || !!activatingConnector);\n\n  const activating = (connection: typeof injected | typeof walletconnect) => connection === activatingConnector;\n  const connected = (connection: typeof injected | typeof walletconnect) => connection === connector;\n  const disabled = !triedEager || !!activatingConnector || connected(injected) || connected(walletconnect) || !!error;\n\n  return (\n    <Modal open={!connected(injected)} aria-labelledby=\"modal-modal-title\" aria-describedby=\"modal-modal-description\">\n      <Box sx={style as any}>\n        <Typography>To use the demo, please connect using metamask</Typography>\n        {!!error && <Typography sx={{ color: \"error.main\" }}>{getErrorMessage(error)}</Typography>}\n        <Button\n          disabled={disabled}\n          onClick={() => {\n            setActivatingConnector(injected);\n            activate(injected);\n          }}\n        >\n          {activating(injected) && <span>loading...</span>}\n          {connected(injected) && (\n            <span role=\"img\" aria-label=\"check\">\n              ✅\n            </span>\n          )}\n          Connect with MetaMask\n        </Button>\n      </Box>\n    </Modal>\n  );\n};\n","import { useWeb3React } from \"@web3-react/core\";\nimport { useState, useEffect } from \"react\";\n\nimport logger from \"../logger\";\nimport { injected } from \"./connectors\";\n\nexport function useEagerConnect() {\n  const { activate, active } = useWeb3React();\n\n  const [tried, setTried] = useState(false);\n\n  useEffect(() => {\n    injected.isAuthorized().then((isAuthorized: boolean) => {\n      if (isAuthorized) {\n        activate(injected, undefined, true).catch(() => {\n          setTried(true);\n        });\n      } else {\n        setTried(true);\n      }\n    });\n  }, []); // intentionally only running on mount (make sure it's only mounted once :))\n\n  // if the connection worked, wait until we get confirmation of that to flip the flag\n  useEffect(() => {\n    if (!tried && active) {\n      setTried(true);\n    }\n  }, [tried, active]);\n\n  return tried;\n}\n\nexport function useInactiveListener(suppress = false) {\n  const { active, error, activate } = useWeb3React();\n\n  useEffect((): any => {\n    const { ethereum } = window as any;\n    if (ethereum && ethereum.on && !active && !error && !suppress) {\n      const handleConnect = () => {\n        logger.warn(\"Handling 'connect' event\");\n        activate(injected);\n      };\n      const handleChainChanged = (chainId: string | number) => {\n        logger.warn(\"Handling 'chainChanged' event with payload\", chainId);\n        activate(injected);\n      };\n      const handleAccountsChanged = (accounts: string[]) => {\n        logger.warn(\"Handling 'accountsChanged' event with payload\", accounts);\n        if (accounts.length > 0) {\n          activate(injected);\n        }\n      };\n      const handleNetworkChanged = (networkId: string | number) => {\n        logger.warn(\"Handling 'networkChanged' event with payload\", networkId);\n        activate(injected);\n      };\n\n      ethereum.on(\"connect\", handleConnect);\n      ethereum.on(\"chainChanged\", handleChainChanged);\n      ethereum.on(\"accountsChanged\", handleAccountsChanged);\n      ethereum.on(\"networkChanged\", handleNetworkChanged);\n\n      return () => {\n        if (ethereum.removeListener) {\n          ethereum.removeListener(\"connect\", handleConnect);\n          ethereum.removeListener(\"chainChanged\", handleChainChanged);\n          ethereum.removeListener(\"accountsChanged\", handleAccountsChanged);\n          ethereum.removeListener(\"networkChanged\", handleNetworkChanged);\n        }\n      };\n    }\n  }, [active, error, suppress, activate]);\n}\n","import { useWeb3React } from \"@web3-react/core\";\n\nexport type Network = \"testnet\" | \"mainnet\" | \"invalid\";\n\nexport const useNetworkType = (): Network | null => {\n  const { chainId } = useWeb3React();\n  if (chainId === 43113) {\n    return \"testnet\";\n  }\n  if (chainId === 43114) {\n    return \"mainnet\";\n  }\n\n  if (chainId == null) {\n    return null;\n  }\n  return \"invalid\";\n};\n\nexport const useOnValidNetwork = (): boolean => {\n  const { chainId } = useWeb3React();\n  if (chainId === 43113) {\n    return true;\n  }\n  if (chainId === 43114) {\n    return true;\n  }\n  return false;\n};\n\nexport const useOnTestnet = (): boolean => {\n  const { chainId } = useWeb3React();\n  if (chainId === 43113) {\n    return true;\n  }\n  return false;\n};\nexport const useOnMainnet = (): boolean => {\n  const { chainId } = useWeb3React();\n  if (chainId === 43114) {\n    return true;\n  }\n  return false;\n};\n\nconst mkCoin = (address: string, symbol: string, decimals: number) => {\n  return {\n    address,\n    symbol,\n    decimals,\n  };\n};\ntype CoinType = ReturnType<typeof mkCoin>\nconst TESTNET_STABLE = mkCoin(\"0x400573b29F7A9B38C3A3B06370b59878caF862F4\", \"mim\", 6);\nconst TESTNET_TOKENS = {\n  weth: mkCoin(\"0x24038B61Ffb0325AAdF02874C5A52975eD1791F2\", \"weth\", 18),\n  // wavax: mkCoin(\"0x866c797a3315466C8D8b9011D6424A5373de2F7d\", \"wavax\", 18),\n  wbtc: mkCoin(\"0x69F5d32d753b9F579413E50264969A755DD1649a\", \"wbtc\", 8),\n  stable: TESTNET_STABLE,\n} as Record<string, CoinType>\n\nconst toLookup = (toks: any): Record<string, CoinType> => {\n  const out: Record<string, CoinType> = {}\n  Object.keys(toks).forEach(key => {\n    const coin = toks[key] as CoinType\n    out[coin.address] = coin\n  })\n  return out\n}\nconst TESTNET = {\n  priceOracles: {\n    wbtc: \"0x69150180854E3209edF55afD25702C905F89aC6d\",\n    weth: \"0x6712978f663cF7D7596913161C8748e97be8c8eE\",\n    wavax: \"0x8CcF960E748589f10AEc2985E53530eD07fEBeCd\",\n  } as Record<string, string>,\n  tokens: TESTNET_TOKENS,\n  tokensLookup: toLookup(TESTNET_TOKENS),\n  stable: TESTNET_STABLE,\n  facade: \"0xBC6Fc799b54263e7f386aae61a192B39e8A52b5C\",\n  uiProvider: \"0x8AF0a97E02dD73537a8dCe777d53AEe5BBe84737\",\n  pools: {\n    weth: {\n      call: \"0xaD5fdE22532a184bcdA69a842396c63dB02E5B49\",\n      put: \"0x91d20e837C9A9ACdB75cd9Cd113B3BBA3d4A2F03\",\n    },\n    wbtc: {\n      call: \"0xF63120c606E68e38e2f9f6B728ca36093a2AD7bD\",\n      put: \"0xb72C90e40F471AF62fe321479be8eacbb0C7C35B\",\n    },\n  },\n};\n\nconst STABLE = mkCoin(\"0x130966628846BFd36ff31a822705796e8cb8C18D\", \"mim\", 16);\nconst STABLE_TOKENS = {\n  weth: mkCoin(\"0x49D5c2BdFfac6CE2BFdB6640F4F80f226bc10bAB\", \"weth\", 18),\n  wavax: mkCoin(\"0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7\", \"wavax\", 18),\n  wbtc: mkCoin(\"0x50b7545627a5162F82A992c33b87aDc75187B218\", \"wbtc\", 8),\n  stable: STABLE,\n} as Record<string, CoinType>\n\n\nexport const networks = {\n  testnet: TESTNET,\n  mainnet: {\n    priceOracles: {\n      wbtc: \"0x2779D32d5166BAaa2B2b658333bA7e6Ec0C65743\",\n      weth: \"0x976B3D034E162d8bD72D6b9C989d545b839003b0\",\n      wavax: \"0x0A77230d17318075983913bC2145DB16C7366156\",\n    },\n    tokens: STABLE_TOKENS,\n    tokensLookup: toLookup(STABLE_TOKENS),\n    stable: STABLE,\n    facade: \"0xBC6Fc799b54263e7f386aae61a192B39e8A52b5C\",\n    uiProvider: \"0x8AF0a97E02dD73537a8dCe777d53AEe5BBe84737\",\n    pools: {\n      weth: {\n        call: \"0xaD5fdE22532a184bcdA69a842396c63dB02E5B49\",\n        put: \"0x91d20e837C9A9ACdB75cd9Cd113B3BBA3d4A2F03\",\n      },\n      wbtc: {\n        call: \"0xF63120c606E68e38e2f9f6B728ca36093a2AD7bD\",\n        put: \"0xb72C90e40F471AF62fe321479be8eacbb0C7C35B\",\n      },\n    },\n  }\n};\n\nexport type Token = typeof networks.testnet.stable;\n\nexport const useCurrentNetworkData = () => {\n  const network = useNetworkType();\n  if (network == null || network === \"invalid\") {\n    return null;\n  }\n\n  return networks[network];\n};\n","/* Autogenerated file. Do not edit manually. */\n/* tslint:disable */\n/* eslint-disable */\n\nimport { Signer } from \"ethers\";\nimport { Provider, TransactionRequest } from \"@ethersproject/providers\";\nimport { Contract, ContractFactory, Overrides } from \"@ethersproject/contracts\";\n\nimport type { Erc20 } from \"./Erc20\";\n\nexport class Erc20Factory extends ContractFactory {\n  constructor(signer?: Signer) {\n    super(_abi, _bytecode, signer);\n  }\n\n  deploy(\n    name_: string,\n    symbol_: string,\n    overrides?: Overrides\n  ): Promise<Erc20> {\n    return super.deploy(name_, symbol_, overrides || {}) as Promise<Erc20>;\n  }\n  getDeployTransaction(\n    name_: string,\n    symbol_: string,\n    overrides?: Overrides\n  ): TransactionRequest {\n    return super.getDeployTransaction(name_, symbol_, overrides || {});\n  }\n  attach(address: string): Erc20 {\n    return super.attach(address) as Erc20;\n  }\n  connect(signer: Signer): Erc20Factory {\n    return super.connect(signer) as Erc20Factory;\n  }\n  static connect(address: string, signerOrProvider: Signer | Provider): Erc20 {\n    return new Contract(address, _abi, signerOrProvider) as Erc20;\n  }\n}\n\nconst _abi = [\n  {\n    inputs: [\n      {\n        internalType: \"string\",\n        name: \"name_\",\n        type: \"string\",\n      },\n      {\n        internalType: \"string\",\n        name: \"symbol_\",\n        type: \"string\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"constructor\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"owner\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"spender\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"value\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"Approval\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"from\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"value\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"Transfer\",\n    type: \"event\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"owner\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"spender\",\n        type: \"address\",\n      },\n    ],\n    name: \"allowance\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"spender\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amount\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"approve\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n    ],\n    name: \"balanceOf\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"decimals\",\n    outputs: [\n      {\n        internalType: \"uint8\",\n        name: \"\",\n        type: \"uint8\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"spender\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"subtractedValue\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"decreaseAllowance\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"spender\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"addedValue\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"increaseAllowance\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"name\",\n    outputs: [\n      {\n        internalType: \"string\",\n        name: \"\",\n        type: \"string\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"symbol\",\n    outputs: [\n      {\n        internalType: \"string\",\n        name: \"\",\n        type: \"string\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"totalSupply\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"recipient\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amount\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"transfer\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"sender\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"recipient\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amount\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"transferFrom\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n];\n\nconst _bytecode =\n  \"0x60806040523480156200001157600080fd5b5060405162000b4738038062000b478339810160408190526200003491620001c1565b81516200004990600390602085019062000068565b5080516200005f90600490602084019062000068565b5050506200027b565b828054620000769062000228565b90600052602060002090601f0160209004810192826200009a5760008555620000e5565b82601f10620000b557805160ff1916838001178555620000e5565b82800160010185558215620000e5579182015b82811115620000e5578251825591602001919060010190620000c8565b50620000f3929150620000f7565b5090565b5b80821115620000f35760008155600101620000f8565b600082601f8301126200011f578081fd5b81516001600160401b03808211156200013c576200013c62000265565b604051601f8301601f19908116603f0116810190828211818310171562000167576200016762000265565b8160405283815260209250868385880101111562000183578485fd5b8491505b83821015620001a6578582018301518183018401529082019062000187565b83821115620001b757848385830101525b9695505050505050565b60008060408385031215620001d4578182fd5b82516001600160401b0380821115620001eb578384fd5b620001f9868387016200010e565b935060208501519150808211156200020f578283fd5b506200021e858286016200010e565b9150509250929050565b600181811c908216806200023d57607f821691505b602082108114156200025f57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fd5b6108bc806200028b6000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461012357806370a082311461013657806395d89b411461015f578063a457c2d714610167578063a9059cbb1461017a578063dd62ed3e1461018d57600080fd5b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100ef57806323b872dd14610101578063313ce56714610114575b600080fd5b6100b66101c6565b6040516100c391906107d4565b60405180910390f35b6100df6100da3660046107ab565b610258565b60405190151581526020016100c3565b6002545b6040519081526020016100c3565b6100df61010f366004610770565b61026e565b604051601281526020016100c3565b6100df6101313660046107ab565b61031d565b6100f361014436600461071d565b6001600160a01b031660009081526020819052604090205490565b6100b6610359565b6100df6101753660046107ab565b610368565b6100df6101883660046107ab565b610401565b6100f361019b36600461073e565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6060600380546101d59061084b565b80601f01602080910402602001604051908101604052809291908181526020018280546102019061084b565b801561024e5780601f106102235761010080835404028352916020019161024e565b820191906000526020600020905b81548152906001019060200180831161023157829003601f168201915b5050505050905090565b600061026533848461040e565b50600192915050565b600061027b848484610532565b6001600160a01b0384166000908152600160209081526040808320338452909152902054828110156103055760405162461bcd60e51b815260206004820152602860248201527f45524332303a207472616e7366657220616d6f756e74206578636565647320616044820152676c6c6f77616e636560c01b60648201526084015b60405180910390fd5b610312853385840361040e565b506001949350505050565b3360008181526001602090815260408083206001600160a01b03871684529091528120549091610265918590610354908690610827565b61040e565b6060600480546101d59061084b565b3360009081526001602090815260408083206001600160a01b0386168452909152812054828110156103ea5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084016102fc565b6103f7338585840361040e565b5060019392505050565b6000610265338484610532565b6001600160a01b0383166104705760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016102fc565b6001600160a01b0382166104d15760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016102fc565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b0383166105965760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016102fc565b6001600160a01b0382166105f85760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016102fc565b6001600160a01b038316600090815260208190526040902054818110156106705760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016102fc565b6001600160a01b038085166000908152602081905260408082208585039055918516815290812080548492906106a7908490610827565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516106f391815260200190565b60405180910390a350505050565b80356001600160a01b038116811461071857600080fd5b919050565b60006020828403121561072e578081fd5b61073782610701565b9392505050565b60008060408385031215610750578081fd5b61075983610701565b915061076760208401610701565b90509250929050565b600080600060608486031215610784578081fd5b61078d84610701565b925061079b60208501610701565b9150604084013590509250925092565b600080604083850312156107bd578182fd5b6107c683610701565b946020939093013593505050565b6000602080835283518082850152825b81811015610800578581018301518582016040015282016107e4565b818111156108115783604083870101525b50601f01601f1916929092016040019392505050565b6000821982111561084657634e487b7160e01b81526011600452602481fd5b500190565b600181811c9082168061085f57607f821691505b6020821081141561088057634e487b7160e01b600052602260045260246000fd5b5091905056fea264697066735822122053b2facb6f516eae779f644016d7b31599018977339474ce9458ab3c47047c2a64736f6c63430008040033\";\n","/* Autogenerated file. Do not edit manually. */\n/* tslint:disable */\n/* eslint-disable */\n\nimport { Signer } from \"ethers\";\nimport { Provider, TransactionRequest } from \"@ethersproject/providers\";\nimport { Contract, ContractFactory, Overrides } from \"@ethersproject/contracts\";\n\nimport type { Erc721 } from \"./Erc721\";\n\nexport class Erc721Factory extends ContractFactory {\n  constructor(signer?: Signer) {\n    super(_abi, _bytecode, signer);\n  }\n\n  deploy(\n    name_: string,\n    symbol_: string,\n    overrides?: Overrides\n  ): Promise<Erc721> {\n    return super.deploy(name_, symbol_, overrides || {}) as Promise<Erc721>;\n  }\n  getDeployTransaction(\n    name_: string,\n    symbol_: string,\n    overrides?: Overrides\n  ): TransactionRequest {\n    return super.getDeployTransaction(name_, symbol_, overrides || {});\n  }\n  attach(address: string): Erc721 {\n    return super.attach(address) as Erc721;\n  }\n  connect(signer: Signer): Erc721Factory {\n    return super.connect(signer) as Erc721Factory;\n  }\n  static connect(address: string, signerOrProvider: Signer | Provider): Erc721 {\n    return new Contract(address, _abi, signerOrProvider) as Erc721;\n  }\n}\n\nconst _abi = [\n  {\n    inputs: [\n      {\n        internalType: \"string\",\n        name: \"name_\",\n        type: \"string\",\n      },\n      {\n        internalType: \"string\",\n        name: \"symbol_\",\n        type: \"string\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"constructor\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"owner\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"approved\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"uint256\",\n        name: \"tokenId\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"Approval\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"owner\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"operator\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"bool\",\n        name: \"approved\",\n        type: \"bool\",\n      },\n    ],\n    name: \"ApprovalForAll\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"from\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"uint256\",\n        name: \"tokenId\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"Transfer\",\n    type: \"event\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"tokenId\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"approve\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"owner\",\n        type: \"address\",\n      },\n    ],\n    name: \"balanceOf\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"tokenId\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"getApproved\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"owner\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"operator\",\n        type: \"address\",\n      },\n    ],\n    name: \"isApprovedForAll\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"name\",\n    outputs: [\n      {\n        internalType: \"string\",\n        name: \"\",\n        type: \"string\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"tokenId\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"ownerOf\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"from\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"tokenId\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"safeTransferFrom\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"from\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"tokenId\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"bytes\",\n        name: \"_data\",\n        type: \"bytes\",\n      },\n    ],\n    name: \"safeTransferFrom\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"operator\",\n        type: \"address\",\n      },\n      {\n        internalType: \"bool\",\n        name: \"approved\",\n        type: \"bool\",\n      },\n    ],\n    name: \"setApprovalForAll\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"bytes4\",\n        name: \"interfaceId\",\n        type: \"bytes4\",\n      },\n    ],\n    name: \"supportsInterface\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"symbol\",\n    outputs: [\n      {\n        internalType: \"string\",\n        name: \"\",\n        type: \"string\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"tokenId\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"tokenURI\",\n    outputs: [\n      {\n        internalType: \"string\",\n        name: \"\",\n        type: \"string\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"from\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"tokenId\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"transferFrom\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n];\n\nconst _bytecode =\n  \"0x60806040523480156200001157600080fd5b50604051620014c7380380620014c78339810160408190526200003491620001c1565b81516200004990600090602085019062000068565b5080516200005f90600190602084019062000068565b5050506200027b565b828054620000769062000228565b90600052602060002090601f0160209004810192826200009a5760008555620000e5565b82601f10620000b557805160ff1916838001178555620000e5565b82800160010185558215620000e5579182015b82811115620000e5578251825591602001919060010190620000c8565b50620000f3929150620000f7565b5090565b5b80821115620000f35760008155600101620000f8565b600082601f8301126200011f578081fd5b81516001600160401b03808211156200013c576200013c62000265565b604051601f8301601f19908116603f0116810190828211818310171562000167576200016762000265565b8160405283815260209250868385880101111562000183578485fd5b8491505b83821015620001a6578582018301518183018401529082019062000187565b83821115620001b757848385830101525b9695505050505050565b60008060408385031215620001d4578182fd5b82516001600160401b0380821115620001eb578384fd5b620001f9868387016200010e565b935060208501519150808211156200020f578283fd5b506200021e858286016200010e565b9150509250929050565b600181811c908216806200023d57607f821691505b602082108114156200025f57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fd5b61123c806200028b6000396000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c80636352211e1161008c578063a22cb46511610066578063a22cb465146101b3578063b88d4fde146101c6578063c87b56dd146101d9578063e985e9c5146101ec57600080fd5b80636352211e1461017757806370a082311461018a57806395d89b41146101ab57600080fd5b806301ffc9a7146100d457806306fdde03146100fc578063081812fc14610111578063095ea7b31461013c57806323b872dd1461015157806342842e0e14610164575b600080fd5b6100e76100e2366004610f34565b610228565b60405190151581526020015b60405180910390f35b61010461027a565b6040516100f3919061101c565b61012461011f366004610f6c565b61030c565b6040516001600160a01b0390911681526020016100f3565b61014f61014a366004610f0b565b6103a6565b005b61014f61015f366004610dc1565b6104bc565b61014f610172366004610dc1565b6104ed565b610124610185366004610f6c565b610508565b61019d610198366004610d75565b61057f565b6040519081526020016100f3565b610104610606565b61014f6101c1366004610ed1565b610615565b61014f6101d4366004610dfc565b6106da565b6101046101e7366004610f6c565b610712565b6100e76101fa366004610d8f565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b60006001600160e01b031982166380ac58cd60e01b148061025957506001600160e01b03198216635b5e139f60e01b145b8061027457506301ffc9a760e01b6001600160e01b03198316145b92915050565b60606000805461028990611141565b80601f01602080910402602001604051908101604052809291908181526020018280546102b590611141565b80156103025780601f106102d757610100808354040283529160200191610302565b820191906000526020600020905b8154815290600101906020018083116102e557829003601f168201915b5050505050905090565b6000818152600260205260408120546001600160a01b031661038a5760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084015b60405180910390fd5b506000908152600460205260409020546001600160a01b031690565b60006103b182610508565b9050806001600160a01b0316836001600160a01b0316141561041f5760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b6064820152608401610381565b336001600160a01b038216148061043b575061043b81336101fa565b6104ad5760405162461bcd60e51b815260206004820152603860248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760448201527f6e6572206e6f7220617070726f76656420666f7220616c6c00000000000000006064820152608401610381565b6104b783836107fa565b505050565b6104c63382610868565b6104e25760405162461bcd60e51b815260040161038190611081565b6104b783838361095f565b6104b7838383604051806020016040528060008152506106da565b6000818152600260205260408120546001600160a01b0316806102745760405162461bcd60e51b815260206004820152602960248201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460448201526832b73a103a37b5b2b760b91b6064820152608401610381565b60006001600160a01b0382166105ea5760405162461bcd60e51b815260206004820152602a60248201527f4552433732313a2062616c616e636520717565727920666f7220746865207a65604482015269726f206164647265737360b01b6064820152608401610381565b506001600160a01b031660009081526003602052604090205490565b60606001805461028990611141565b6001600160a01b03821633141561066e5760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c6572000000000000006044820152606401610381565b3360008181526005602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b6106e43383610868565b6107005760405162461bcd60e51b815260040161038190611081565b61070c84848484610aff565b50505050565b6000818152600260205260409020546060906001600160a01b03166107915760405162461bcd60e51b815260206004820152602f60248201527f4552433732314d657461646174613a2055524920717565727920666f72206e6f60448201526e3732bc34b9ba32b73a103a37b5b2b760891b6064820152608401610381565b60006107a860408051602081019091526000815290565b905060008151116107c857604051806020016040528060008152506107f3565b806107d284610b32565b6040516020016107e3929190610fb0565b6040516020818303038152906040525b9392505050565b600081815260046020526040902080546001600160a01b0319166001600160a01b038416908117909155819061082f82610508565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6000818152600260205260408120546001600160a01b03166108e15760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b6064820152608401610381565b60006108ec83610508565b9050806001600160a01b0316846001600160a01b031614806109275750836001600160a01b031661091c8461030c565b6001600160a01b0316145b8061095757506001600160a01b0380821660009081526005602090815260408083209388168352929052205460ff165b949350505050565b826001600160a01b031661097282610508565b6001600160a01b0316146109da5760405162461bcd60e51b815260206004820152602960248201527f4552433732313a207472616e73666572206f6620746f6b656e2074686174206960448201526839903737ba1037bbb760b91b6064820152608401610381565b6001600160a01b038216610a3c5760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b6064820152608401610381565b610a476000826107fa565b6001600160a01b0383166000908152600360205260408120805460019290610a709084906110fe565b90915550506001600160a01b0382166000908152600360205260408120805460019290610a9e9084906110d2565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b610b0a84848461095f565b610b1684848484610c4c565b61070c5760405162461bcd60e51b81526004016103819061102f565b606081610b565750506040805180820190915260018152600360fc1b602082015290565b8160005b8115610b805780610b6a8161117c565b9150610b799050600a836110ea565b9150610b5a565b60008167ffffffffffffffff811115610ba957634e487b7160e01b600052604160045260246000fd5b6040519080825280601f01601f191660200182016040528015610bd3576020820181803683370190505b5090505b841561095757610be86001836110fe565b9150610bf5600a86611197565b610c009060306110d2565b60f81b818381518110610c2357634e487b7160e01b600052603260045260246000fd5b60200101906001600160f81b031916908160001a905350610c45600a866110ea565b9450610bd7565b60006001600160a01b0384163b15610d4e57604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290610c90903390899088908890600401610fdf565b602060405180830381600087803b158015610caa57600080fd5b505af1925050508015610cda575060408051601f3d908101601f19168201909252610cd791810190610f50565b60015b610d34573d808015610d08576040519150601f19603f3d011682016040523d82523d6000602084013e610d0d565b606091505b508051610d2c5760405162461bcd60e51b81526004016103819061102f565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050610957565b506001949350505050565b80356001600160a01b0381168114610d7057600080fd5b919050565b600060208284031215610d86578081fd5b6107f382610d59565b60008060408385031215610da1578081fd5b610daa83610d59565b9150610db860208401610d59565b90509250929050565b600080600060608486031215610dd5578081fd5b610dde84610d59565b9250610dec60208501610d59565b9150604084013590509250925092565b60008060008060808587031215610e11578081fd5b610e1a85610d59565b9350610e2860208601610d59565b925060408501359150606085013567ffffffffffffffff80821115610e4b578283fd5b818701915087601f830112610e5e578283fd5b813581811115610e7057610e706111d7565b604051601f8201601f19908116603f01168101908382118183101715610e9857610e986111d7565b816040528281528a6020848701011115610eb0578586fd5b82602086016020830137918201602001949094529598949750929550505050565b60008060408385031215610ee3578182fd5b610eec83610d59565b915060208301358015158114610f00578182fd5b809150509250929050565b60008060408385031215610f1d578182fd5b610f2683610d59565b946020939093013593505050565b600060208284031215610f45578081fd5b81356107f3816111ed565b600060208284031215610f61578081fd5b81516107f3816111ed565b600060208284031215610f7d578081fd5b5035919050565b60008151808452610f9c816020860160208601611115565b601f01601f19169290920160200192915050565b60008351610fc2818460208801611115565b835190830190610fd6818360208801611115565b01949350505050565b6001600160a01b038581168252841660208201526040810183905260806060820181905260009061101290830184610f84565b9695505050505050565b6020815260006107f36020830184610f84565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b60208082526031908201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f6040820152701ddb995c881b9bdc88185c1c1c9bdd9959607a1b606082015260800190565b600082198211156110e5576110e56111ab565b500190565b6000826110f9576110f96111c1565b500490565b600082821015611110576111106111ab565b500390565b60005b83811015611130578181015183820152602001611118565b8381111561070c5750506000910152565b600181811c9082168061115557607f821691505b6020821081141561117657634e487b7160e01b600052602260045260246000fd5b50919050565b6000600019821415611190576111906111ab565b5060010190565b6000826111a6576111a66111c1565b500690565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160e01b03198116811461120357600080fd5b5056fea2646970667358221220c5a45a145d640475e0845e1b749dd3d7810811efe43c59df0bbf8cebd78c765464736f6c63430008040033\";\n","/* Autogenerated file. Do not edit manually. */\n/* tslint:disable */\n/* eslint-disable */\n\nimport { Signer } from \"ethers\";\nimport { Provider, TransactionRequest } from \"@ethersproject/providers\";\nimport { Contract, ContractFactory, Overrides } from \"@ethersproject/contracts\";\n\nimport type { UniswapV2Erc20 } from \"./UniswapV2Erc20\";\n\nexport class UniswapV2Erc20Factory extends ContractFactory {\n  constructor(signer?: Signer) {\n    super(_abi, _bytecode, signer);\n  }\n\n  deploy(overrides?: Overrides): Promise<UniswapV2Erc20> {\n    return super.deploy(overrides || {}) as Promise<UniswapV2Erc20>;\n  }\n  getDeployTransaction(overrides?: Overrides): TransactionRequest {\n    return super.getDeployTransaction(overrides || {});\n  }\n  attach(address: string): UniswapV2Erc20 {\n    return super.attach(address) as UniswapV2Erc20;\n  }\n  connect(signer: Signer): UniswapV2Erc20Factory {\n    return super.connect(signer) as UniswapV2Erc20Factory;\n  }\n  static connect(\n    address: string,\n    signerOrProvider: Signer | Provider\n  ): UniswapV2Erc20 {\n    return new Contract(address, _abi, signerOrProvider) as UniswapV2Erc20;\n  }\n}\n\nconst _abi = [\n  {\n    inputs: [],\n    payable: false,\n    stateMutability: \"nonpayable\",\n    type: \"constructor\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"owner\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"spender\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"value\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"Approval\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"from\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"value\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"Transfer\",\n    type: \"event\",\n  },\n  {\n    constant: true,\n    inputs: [],\n    name: \"DOMAIN_SEPARATOR\",\n    outputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"\",\n        type: \"bytes32\",\n      },\n    ],\n    payable: false,\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    constant: true,\n    inputs: [],\n    name: \"PERMIT_TYPEHASH\",\n    outputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"\",\n        type: \"bytes32\",\n      },\n    ],\n    payable: false,\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    constant: true,\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    name: \"allowance\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    payable: false,\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    constant: false,\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"spender\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"value\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"approve\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    payable: false,\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    constant: true,\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    name: \"balanceOf\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    payable: false,\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    constant: true,\n    inputs: [],\n    name: \"decimals\",\n    outputs: [\n      {\n        internalType: \"uint8\",\n        name: \"\",\n        type: \"uint8\",\n      },\n    ],\n    payable: false,\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    constant: true,\n    inputs: [],\n    name: \"name\",\n    outputs: [\n      {\n        internalType: \"string\",\n        name: \"\",\n        type: \"string\",\n      },\n    ],\n    payable: false,\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    constant: true,\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    name: \"nonces\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    payable: false,\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    constant: false,\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"owner\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"spender\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"value\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"deadline\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint8\",\n        name: \"v\",\n        type: \"uint8\",\n      },\n      {\n        internalType: \"bytes32\",\n        name: \"r\",\n        type: \"bytes32\",\n      },\n      {\n        internalType: \"bytes32\",\n        name: \"s\",\n        type: \"bytes32\",\n      },\n    ],\n    name: \"permit\",\n    outputs: [],\n    payable: false,\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    constant: true,\n    inputs: [],\n    name: \"symbol\",\n    outputs: [\n      {\n        internalType: \"string\",\n        name: \"\",\n        type: \"string\",\n      },\n    ],\n    payable: false,\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    constant: true,\n    inputs: [],\n    name: \"totalSupply\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    payable: false,\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    constant: false,\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"value\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"transfer\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    payable: false,\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    constant: false,\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"from\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"value\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"transferFrom\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    payable: false,\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n];\n\nconst _bytecode =\n  \"0x608060405234801561001057600080fd5b50604051469080605261096c8239604080519182900360520182208282018252600a8352692ab734b9bbb0b8102b1960b11b6020938401528151808301835260018152603160f81b908401528151808401919091527fbfcc8ef98ffbf7b6c3fec7bf5185b566b9863e35a9d83acd49ad6824b5969738818301527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6606082015260808101949094523060a0808601919091528151808603909101815260c0909401905282519201919091206003555061087e806100ee6000396000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c80633644e5151161008c57806395d89b411161006657806395d89b411461025b578063a9059cbb14610263578063d505accf1461028f578063dd62ed3e146102e2576100cf565b80633644e5151461020757806370a082311461020f5780637ecebe0014610235576100cf565b806306fdde03146100d4578063095ea7b31461015157806318160ddd1461019157806323b872dd146101ab57806330adf81f146101e1578063313ce567146101e9575b600080fd5b6100dc610310565b6040805160208082528351818301528351919283929083019185019080838360005b838110156101165781810151838201526020016100fe565b50505050905090810190601f1680156101435780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b61017d6004803603604081101561016757600080fd5b506001600160a01b038135169060200135610336565b604080519115158252519081900360200190f35b61019961034d565b60408051918252519081900360200190f35b61017d600480360360608110156101c157600080fd5b506001600160a01b03813581169160208101359091169060400135610353565b6101996103ed565b6101f1610411565b6040805160ff9092168252519081900360200190f35b610199610416565b6101996004803603602081101561022557600080fd5b50356001600160a01b031661041c565b6101996004803603602081101561024b57600080fd5b50356001600160a01b031661042e565b6100dc610440565b61017d6004803603604081101561027957600080fd5b506001600160a01b038135169060200135610462565b6102e0600480360360e08110156102a557600080fd5b506001600160a01b03813581169160208101359091169060408101359060608101359060ff6080820135169060a08101359060c0013561046f565b005b610199600480360360408110156102f857600080fd5b506001600160a01b0381358116916020013516610671565b6040518060400160405280600a8152602001692ab734b9bbb0b8102b1960b11b81525081565b600061034333848461068e565b5060015b92915050565b60005481565b6001600160a01b0383166000908152600260209081526040808320338452909152812054600019146103d8576001600160a01b03841660009081526002602090815260408083203384529091529020546103b3908363ffffffff6106f016565b6001600160a01b03851660009081526002602090815260408083203384529091529020555b6103e3848484610740565b5060019392505050565b7f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c981565b601281565b60035481565b60016020526000908152604090205481565b60046020526000908152604090205481565b604051806040016040528060068152602001652aa72496ab1960d11b81525081565b6000610343338484610740565b428410156104b9576040805162461bcd60e51b8152602060048201526012602482015271155b9a5cddd85c158c8e881156141254915160721b604482015290519081900360640190fd5b6003546001600160a01b0380891660008181526004602090815260408083208054600180820190925582517f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c98186015280840196909652958d166060860152608085018c905260a085019590955260c08085018b90528151808603909101815260e08501825280519083012061190160f01b6101008601526101028501969096526101228085019690965280518085039096018652610142840180825286519683019690962095839052610162840180825286905260ff89166101828501526101a284018890526101c28401879052519193926101e280820193601f1981019281900390910190855afa1580156105d4573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b0381161580159061060a5750886001600160a01b0316816001600160a01b0316145b61065b576040805162461bcd60e51b815260206004820152601c60248201527f556e697377617056323a20494e56414c49445f5349474e415455524500000000604482015290519081900360640190fd5b61066689898961068e565b505050505050505050565b600260209081526000928352604080842090915290825290205481565b6001600160a01b03808416600081815260026020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b80820382811115610347576040805162461bcd60e51b815260206004820152601560248201527464732d6d6174682d7375622d756e646572666c6f7760581b604482015290519081900360640190fd5b6001600160a01b038316600090815260016020526040902054610769908263ffffffff6106f016565b6001600160a01b03808516600090815260016020526040808220939093559084168152205461079e908263ffffffff6107fa16565b6001600160a01b0380841660008181526001602090815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b80820182811015610347576040805162461bcd60e51b815260206004820152601460248201527364732d6d6174682d6164642d6f766572666c6f7760601b604482015290519081900360640190fdfea265627a7a723158200dee5f68c956790d87f863addee91935c5535d96a08edbfe0dd64005cda471f164736f6c63430005100032454950373132446f6d61696e28737472696e67206e616d652c737472696e672076657273696f6e2c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e747261637429\";\n","/* Autogenerated file. Do not edit manually. */\n/* tslint:disable */\n/* eslint-disable */\n\nimport { Signer } from \"ethers\";\nimport { Provider, TransactionRequest } from \"@ethersproject/providers\";\nimport { Contract, ContractFactory, Overrides } from \"@ethersproject/contracts\";\n\nimport type { UniswapV2Factory } from \"./UniswapV2Factory\";\n\nexport class UniswapV2FactoryFactory extends ContractFactory {\n  constructor(signer?: Signer) {\n    super(_abi, _bytecode, signer);\n  }\n\n  deploy(\n    _feeToSetter: string,\n    overrides?: Overrides\n  ): Promise<UniswapV2Factory> {\n    return super.deploy(\n      _feeToSetter,\n      overrides || {}\n    ) as Promise<UniswapV2Factory>;\n  }\n  getDeployTransaction(\n    _feeToSetter: string,\n    overrides?: Overrides\n  ): TransactionRequest {\n    return super.getDeployTransaction(_feeToSetter, overrides || {});\n  }\n  attach(address: string): UniswapV2Factory {\n    return super.attach(address) as UniswapV2Factory;\n  }\n  connect(signer: Signer): UniswapV2FactoryFactory {\n    return super.connect(signer) as UniswapV2FactoryFactory;\n  }\n  static connect(\n    address: string,\n    signerOrProvider: Signer | Provider\n  ): UniswapV2Factory {\n    return new Contract(address, _abi, signerOrProvider) as UniswapV2Factory;\n  }\n}\n\nconst _abi = [\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"_feeToSetter\",\n        type: \"address\",\n      },\n    ],\n    payable: false,\n    stateMutability: \"nonpayable\",\n    type: \"constructor\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"token0\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"token1\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"address\",\n        name: \"pair\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"PairCreated\",\n    type: \"event\",\n  },\n  {\n    constant: true,\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"allPairs\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    payable: false,\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    constant: true,\n    inputs: [],\n    name: \"allPairsLength\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    payable: false,\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    constant: false,\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"tokenA\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"tokenB\",\n        type: \"address\",\n      },\n    ],\n    name: \"createPair\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"pair\",\n        type: \"address\",\n      },\n    ],\n    payable: false,\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    constant: true,\n    inputs: [],\n    name: \"feeTo\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    payable: false,\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    constant: true,\n    inputs: [],\n    name: \"feeToSetter\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    payable: false,\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    constant: true,\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    name: \"getPair\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    payable: false,\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    constant: false,\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"_feeTo\",\n        type: \"address\",\n      },\n    ],\n    name: \"setFeeTo\",\n    outputs: [],\n    payable: false,\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    constant: false,\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"_feeToSetter\",\n        type: \"address\",\n      },\n    ],\n    name: \"setFeeToSetter\",\n    outputs: [],\n    payable: false,\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n];\n\nconst _bytecode =\n  \"0x608060405234801561001057600080fd5b50604051612aa9380380612aa98339818101604052602081101561003357600080fd5b5051600180546001600160a01b0319166001600160a01b03909216919091179055612a46806100636000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c8063a2e74af61161005b578063a2e74af6146100f0578063c9c6539614610118578063e6a4390514610146578063f46901ed1461017457610088565b8063017e7e581461008d578063094b7415146100b15780631e3dd18b146100b9578063574f2ba3146100d6575b600080fd5b61009561019a565b604080516001600160a01b039092168252519081900360200190f35b6100956101a9565b610095600480360360208110156100cf57600080fd5b50356101b8565b6100de6101df565b60408051918252519081900360200190f35b6101166004803603602081101561010657600080fd5b50356001600160a01b03166101e5565b005b6100956004803603604081101561012e57600080fd5b506001600160a01b038135811691602001351661025d565b6100956004803603604081101561015c57600080fd5b506001600160a01b038135811691602001351661058e565b6101166004803603602081101561018a57600080fd5b50356001600160a01b03166105b4565b6000546001600160a01b031681565b6001546001600160a01b031681565b600381815481106101c557fe5b6000918252602090912001546001600160a01b0316905081565b60035490565b6001546001600160a01b0316331461023b576040805162461bcd60e51b81526020600482015260146024820152732ab734b9bbb0b82b191d102327a92124a22222a760611b604482015290519081900360640190fd5b600180546001600160a01b0319166001600160a01b0392909216919091179055565b6000816001600160a01b0316836001600160a01b031614156102c6576040805162461bcd60e51b815260206004820152601e60248201527f556e697377617056323a204944454e544943414c5f4144445245535345530000604482015290519081900360640190fd5b600080836001600160a01b0316856001600160a01b0316106102e95783856102ec565b84845b90925090506001600160a01b03821661034c576040805162461bcd60e51b815260206004820152601760248201527f556e697377617056323a205a45524f5f41444452455353000000000000000000604482015290519081900360640190fd5b6001600160a01b038281166000908152600260209081526040808320858516845290915290205416156103bf576040805162461bcd60e51b8152602060048201526016602482015275556e697377617056323a20504149525f45584953545360501b604482015290519081900360640190fd5b6060604051806020016103d19061062c565b6020820181038252601f19601f8201166040525090506000838360405160200180836001600160a01b03166001600160a01b031660601b8152601401826001600160a01b03166001600160a01b031660601b815260140192505050604051602081830303815290604052805190602001209050808251602084016000f56040805163485cc95560e01b81526001600160a01b038781166004830152868116602483015291519297509087169163485cc9559160448082019260009290919082900301818387803b1580156104a457600080fd5b505af11580156104b8573d6000803e3d6000fd5b505050506001600160a01b0384811660008181526002602081815260408084208987168086529083528185208054978d166001600160a01b031998891681179091559383528185208686528352818520805488168517905560038054600181018255958190527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b90950180549097168417909655925483519283529082015281517f0d3648bd0f6ba80134a33ba9275ac585d9d315f0ad8355cddefde31afa28d0e9929181900390910190a35050505092915050565b60026020908152600092835260408084209091529082529020546001600160a01b031681565b6001546001600160a01b0316331461060a576040805162461bcd60e51b81526020600482015260146024820152732ab734b9bbb0b82b191d102327a92124a22222a760611b604482015290519081900360640190fd5b600080546001600160a01b0319166001600160a01b0392909216919091179055565b6123d88061063a8339019056fe60806040526001600c5534801561001557600080fd5b5060405146908060526123868239604080519182900360520182208282018252600a8352692ab734b9bbb0b8102b1960b11b6020938401528151808301835260018152603160f81b908401528151808401919091527fbfcc8ef98ffbf7b6c3fec7bf5185b566b9863e35a9d83acd49ad6824b5969738818301527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6606082015260808101949094523060a0808601919091528151808603909101815260c09094019052825192019190912060035550600580546001600160a01b03191633179055612281806101056000396000f3fe608060405234801561001057600080fd5b50600436106101a95760003560e01c80636a627842116100f9578063ba9a7a5611610097578063d21220a711610071578063d21220a714610534578063d505accf1461053c578063dd62ed3e1461058d578063fff6cae9146105bb576101a9565b8063ba9a7a56146104fe578063bc25cf7714610506578063c45a01551461052c576101a9565b80637ecebe00116100d35780637ecebe001461046557806389afcb441461048b57806395d89b41146104ca578063a9059cbb146104d2576101a9565b80636a6278421461041157806370a08231146104375780637464fc3d1461045d576101a9565b806323b872dd116101665780633644e515116101405780633644e515146103cb578063485cc955146103d35780635909c0d5146104015780635a3d549314610409576101a9565b806323b872dd1461036f57806330adf81f146103a5578063313ce567146103ad576101a9565b8063022c0d9f146101ae57806306fdde031461023c5780630902f1ac146102b9578063095ea7b3146102f15780630dfe16811461033157806318160ddd14610355575b600080fd5b61023a600480360360808110156101c457600080fd5b8135916020810135916001600160a01b0360408301351691908101906080810160608201356401000000008111156101fb57600080fd5b82018360208201111561020d57600080fd5b8035906020019184600183028401116401000000008311171561022f57600080fd5b5090925090506105c3565b005b610244610afe565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561027e578181015183820152602001610266565b50505050905090810190601f1680156102ab5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6102c1610b24565b604080516001600160701b03948516815292909316602083015263ffffffff168183015290519081900360600190f35b61031d6004803603604081101561030757600080fd5b506001600160a01b038135169060200135610b4e565b604080519115158252519081900360200190f35b610339610b65565b604080516001600160a01b039092168252519081900360200190f35b61035d610b74565b60408051918252519081900360200190f35b61031d6004803603606081101561038557600080fd5b506001600160a01b03813581169160208101359091169060400135610b7a565b61035d610c14565b6103b5610c38565b6040805160ff9092168252519081900360200190f35b61035d610c3d565b61023a600480360360408110156103e957600080fd5b506001600160a01b0381358116916020013516610c43565b61035d610cc7565b61035d610ccd565b61035d6004803603602081101561042757600080fd5b50356001600160a01b0316610cd3565b61035d6004803603602081101561044d57600080fd5b50356001600160a01b0316610fd3565b61035d610fe5565b61035d6004803603602081101561047b57600080fd5b50356001600160a01b0316610feb565b6104b1600480360360208110156104a157600080fd5b50356001600160a01b0316610ffd565b6040805192835260208301919091528051918290030190f35b6102446113a3565b61031d600480360360408110156104e857600080fd5b506001600160a01b0381351690602001356113c5565b61035d6113d2565b61023a6004803603602081101561051c57600080fd5b50356001600160a01b03166113d8565b610339611543565b610339611552565b61023a600480360360e081101561055257600080fd5b506001600160a01b03813581169160208101359091169060408101359060608101359060ff6080820135169060a08101359060c00135611561565b61035d600480360360408110156105a357600080fd5b506001600160a01b0381358116916020013516611763565b61023a611780565b600c5460011461060e576040805162461bcd60e51b8152602060048201526011602482015270155b9a5cddd85c158c8e881313d0d2d151607a1b604482015290519081900360640190fd5b6000600c55841515806106215750600084115b61065c5760405162461bcd60e51b81526004018080602001828103825260258152602001806121936025913960400191505060405180910390fd5b600080610667610b24565b5091509150816001600160701b03168710801561068c5750806001600160701b031686105b6106c75760405162461bcd60e51b81526004018080602001828103825260218152602001806121dc6021913960400191505060405180910390fd5b60065460075460009182916001600160a01b039182169190811690891682148015906107055750806001600160a01b0316896001600160a01b031614155b61074e576040805162461bcd60e51b8152602060048201526015602482015274556e697377617056323a20494e56414c49445f544f60581b604482015290519081900360640190fd5b8a1561075f5761075f828a8d6118e2565b891561077057610770818a8c6118e2565b861561082b57886001600160a01b03166310d1e85c338d8d8c8c6040518663ffffffff1660e01b815260040180866001600160a01b03166001600160a01b03168152602001858152602001848152602001806020018281038252848482818152602001925080828437600081840152601f19601f8201169050808301925050509650505050505050600060405180830381600087803b15801561081257600080fd5b505af1158015610826573d6000803e3d6000fd5b505050505b604080516370a0823160e01b815230600482015290516001600160a01b038416916370a08231916024808301926020929190829003018186803b15801561087157600080fd5b505afa158015610885573d6000803e3d6000fd5b505050506040513d602081101561089b57600080fd5b5051604080516370a0823160e01b815230600482015290519195506001600160a01b038316916370a0823191602480820192602092909190829003018186803b1580156108e757600080fd5b505afa1580156108fb573d6000803e3d6000fd5b505050506040513d602081101561091157600080fd5b5051925060009150506001600160701b0385168a90038311610934576000610943565b89856001600160701b03160383035b9050600089856001600160701b031603831161096057600061096f565b89856001600160701b03160383035b905060008211806109805750600081115b6109bb5760405162461bcd60e51b81526004018080602001828103825260248152602001806121b86024913960400191505060405180910390fd5b60006109ef6109d184600363ffffffff611a7c16565b6109e3876103e863ffffffff611a7c16565b9063ffffffff611adf16565b90506000610a076109d184600363ffffffff611a7c16565b9050610a38620f4240610a2c6001600160701b038b8116908b1663ffffffff611a7c16565b9063ffffffff611a7c16565b610a48838363ffffffff611a7c16565b1015610a8a576040805162461bcd60e51b815260206004820152600c60248201526b556e697377617056323a204b60a01b604482015290519081900360640190fd5b5050610a9884848888611b2f565b60408051838152602081018390528082018d9052606081018c905290516001600160a01b038b169133917fd78ad95fa46c994b6551d0da85fc275fe613ce37657fb8d5e3d130840159d8229181900360800190a350506001600c55505050505050505050565b6040518060400160405280600a8152602001692ab734b9bbb0b8102b1960b11b81525081565b6008546001600160701b0380821692600160701b830490911691600160e01b900463ffffffff1690565b6000610b5b338484611cf4565b5060015b92915050565b6006546001600160a01b031681565b60005481565b6001600160a01b038316600090815260026020908152604080832033845290915281205460001914610bff576001600160a01b0384166000908152600260209081526040808320338452909152902054610bda908363ffffffff611adf16565b6001600160a01b03851660009081526002602090815260408083203384529091529020555b610c0a848484611d56565b5060019392505050565b7f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c981565b601281565b60035481565b6005546001600160a01b03163314610c99576040805162461bcd60e51b81526020600482015260146024820152732ab734b9bbb0b82b191d102327a92124a22222a760611b604482015290519081900360640190fd5b600680546001600160a01b039384166001600160a01b03199182161790915560078054929093169116179055565b60095481565b600a5481565b6000600c54600114610d20576040805162461bcd60e51b8152602060048201526011602482015270155b9a5cddd85c158c8e881313d0d2d151607a1b604482015290519081900360640190fd5b6000600c81905580610d30610b24565b50600654604080516370a0823160e01b815230600482015290519395509193506000926001600160a01b03909116916370a08231916024808301926020929190829003018186803b158015610d8457600080fd5b505afa158015610d98573d6000803e3d6000fd5b505050506040513d6020811015610dae57600080fd5b5051600754604080516370a0823160e01b815230600482015290519293506000926001600160a01b03909216916370a0823191602480820192602092909190829003018186803b158015610e0157600080fd5b505afa158015610e15573d6000803e3d6000fd5b505050506040513d6020811015610e2b57600080fd5b505190506000610e4a836001600160701b03871663ffffffff611adf16565b90506000610e67836001600160701b03871663ffffffff611adf16565b90506000610e758787611e10565b60005490915080610eb257610e9e6103e86109e3610e99878763ffffffff611a7c16565b611f6e565b9850610ead60006103e8611fc0565b610f01565b610efe6001600160701b038916610ecf868463ffffffff611a7c16565b81610ed657fe5b046001600160701b038916610ef1868563ffffffff611a7c16565b81610ef857fe5b04612056565b98505b60008911610f405760405162461bcd60e51b81526004018080602001828103825260288152602001806122256028913960400191505060405180910390fd5b610f4a8a8a611fc0565b610f5686868a8a611b2f565b8115610f8657600854610f82906001600160701b0380821691600160701b90041663ffffffff611a7c16565b600b555b6040805185815260208101859052815133927f4c209b5fc8ad50758f13e2e1088ba56a560dff690a1c6fef26394f4c03821c4f928290030190a250506001600c5550949695505050505050565b60016020526000908152604090205481565b600b5481565b60046020526000908152604090205481565b600080600c5460011461104b576040805162461bcd60e51b8152602060048201526011602482015270155b9a5cddd85c158c8e881313d0d2d151607a1b604482015290519081900360640190fd5b6000600c8190558061105b610b24565b50600654600754604080516370a0823160e01b815230600482015290519496509294506001600160a01b039182169391169160009184916370a08231916024808301926020929190829003018186803b1580156110b757600080fd5b505afa1580156110cb573d6000803e3d6000fd5b505050506040513d60208110156110e157600080fd5b5051604080516370a0823160e01b815230600482015290519192506000916001600160a01b038516916370a08231916024808301926020929190829003018186803b15801561112f57600080fd5b505afa158015611143573d6000803e3d6000fd5b505050506040513d602081101561115957600080fd5b5051306000908152600160205260408120549192506111788888611e10565b6000549091508061118f848763ffffffff611a7c16565b8161119657fe5b049a50806111aa848663ffffffff611a7c16565b816111b157fe5b04995060008b1180156111c4575060008a115b6111ff5760405162461bcd60e51b81526004018080602001828103825260288152602001806121fd6028913960400191505060405180910390fd5b611209308461206e565b611214878d8d6118e2565b61121f868d8c6118e2565b604080516370a0823160e01b815230600482015290516001600160a01b038916916370a08231916024808301926020929190829003018186803b15801561126557600080fd5b505afa158015611279573d6000803e3d6000fd5b505050506040513d602081101561128f57600080fd5b5051604080516370a0823160e01b815230600482015290519196506001600160a01b038816916370a0823191602480820192602092909190829003018186803b1580156112db57600080fd5b505afa1580156112ef573d6000803e3d6000fd5b505050506040513d602081101561130557600080fd5b5051935061131585858b8b611b2f565b811561134557600854611341906001600160701b0380821691600160701b90041663ffffffff611a7c16565b600b555b604080518c8152602081018c905281516001600160a01b038f169233927fdccd412f0b1252819cb1fd330b93224ca42612892bb3f4f789976e6d81936496929081900390910190a35050505050505050506001600c81905550915091565b604051806040016040528060068152602001652aa72496ab1960d11b81525081565b6000610b5b338484611d56565b6103e881565b600c54600114611423576040805162461bcd60e51b8152602060048201526011602482015270155b9a5cddd85c158c8e881313d0d2d151607a1b604482015290519081900360640190fd5b6000600c55600654600754600854604080516370a0823160e01b815230600482015290516001600160a01b0394851694909316926114d292859287926114cd926001600160701b03169185916370a0823191602480820192602092909190829003018186803b15801561149557600080fd5b505afa1580156114a9573d6000803e3d6000fd5b505050506040513d60208110156114bf57600080fd5b50519063ffffffff611adf16565b6118e2565b600854604080516370a0823160e01b8152306004820152905161153992849287926114cd92600160701b90046001600160701b0316916001600160a01b038616916370a0823191602480820192602092909190829003018186803b15801561149557600080fd5b50506001600c5550565b6005546001600160a01b031681565b6007546001600160a01b031681565b428410156115ab576040805162461bcd60e51b8152602060048201526012602482015271155b9a5cddd85c158c8e881156141254915160721b604482015290519081900360640190fd5b6003546001600160a01b0380891660008181526004602090815260408083208054600180820190925582517f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c98186015280840196909652958d166060860152608085018c905260a085019590955260c08085018b90528151808603909101815260e08501825280519083012061190160f01b6101008601526101028501969096526101228085019690965280518085039096018652610142840180825286519683019690962095839052610162840180825286905260ff89166101828501526101a284018890526101c28401879052519193926101e280820193601f1981019281900390910190855afa1580156116c6573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116158015906116fc5750886001600160a01b0316816001600160a01b0316145b61174d576040805162461bcd60e51b815260206004820152601c60248201527f556e697377617056323a20494e56414c49445f5349474e415455524500000000604482015290519081900360640190fd5b611758898989611cf4565b505050505050505050565b600260209081526000928352604080842090915290825290205481565b600c546001146117cb576040805162461bcd60e51b8152602060048201526011602482015270155b9a5cddd85c158c8e881313d0d2d151607a1b604482015290519081900360640190fd5b6000600c55600654604080516370a0823160e01b815230600482015290516118db926001600160a01b0316916370a08231916024808301926020929190829003018186803b15801561181c57600080fd5b505afa158015611830573d6000803e3d6000fd5b505050506040513d602081101561184657600080fd5b5051600754604080516370a0823160e01b815230600482015290516001600160a01b03909216916370a0823191602480820192602092909190829003018186803b15801561189357600080fd5b505afa1580156118a7573d6000803e3d6000fd5b505050506040513d60208110156118bd57600080fd5b50516008546001600160701b0380821691600160701b900416611b2f565b6001600c55565b604080518082018252601981527f7472616e7366657228616464726573732c75696e74323536290000000000000060209182015281516001600160a01b0385811660248301526044808301869052845180840390910181526064909201845291810180516001600160e01b031663a9059cbb60e01b1781529251815160009460609489169392918291908083835b6020831061198f5780518252601f199092019160209182019101611970565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d80600081146119f1576040519150601f19603f3d011682016040523d82523d6000602084013e6119f6565b606091505b5091509150818015611a24575080511580611a245750808060200190516020811015611a2157600080fd5b50515b611a75576040805162461bcd60e51b815260206004820152601a60248201527f556e697377617056323a205452414e534645525f4641494c4544000000000000604482015290519081900360640190fd5b5050505050565b6000811580611a9757505080820282828281611a9457fe5b04145b610b5f576040805162461bcd60e51b815260206004820152601460248201527364732d6d6174682d6d756c2d6f766572666c6f7760601b604482015290519081900360640190fd5b80820382811115610b5f576040805162461bcd60e51b815260206004820152601560248201527464732d6d6174682d7375622d756e646572666c6f7760581b604482015290519081900360640190fd5b6001600160701b038411801590611b4d57506001600160701b038311155b611b94576040805162461bcd60e51b8152602060048201526013602482015272556e697377617056323a204f564552464c4f5760681b604482015290519081900360640190fd5b60085463ffffffff42811691600160e01b90048116820390811615801590611bc457506001600160701b03841615155b8015611bd857506001600160701b03831615155b15611c49578063ffffffff16611c0685611bf18661210c565b6001600160e01b03169063ffffffff61211e16565b600980546001600160e01b03929092169290920201905563ffffffff8116611c3184611bf18761210c565b600a80546001600160e01b0392909216929092020190555b600880546dffffffffffffffffffffffffffff19166001600160701b03888116919091176dffffffffffffffffffffffffffff60701b1916600160701b8883168102919091176001600160e01b0316600160e01b63ffffffff871602179283905560408051848416815291909304909116602082015281517f1c411e9a96e071241c2f21f7726b17ae89e3cab4c78be50e062b03a9fffbbad1929181900390910190a1505050505050565b6001600160a01b03808416600081815260026020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b6001600160a01b038316600090815260016020526040902054611d7f908263ffffffff611adf16565b6001600160a01b038085166000908152600160205260408082209390935590841681522054611db4908263ffffffff61214316565b6001600160a01b0380841660008181526001602090815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b600080600560009054906101000a90046001600160a01b03166001600160a01b031663017e7e586040518163ffffffff1660e01b815260040160206040518083038186803b158015611e6157600080fd5b505afa158015611e75573d6000803e3d6000fd5b505050506040513d6020811015611e8b57600080fd5b5051600b546001600160a01b038216158015945091925090611f5a578015611f55576000611ece610e996001600160701b0388811690881663ffffffff611a7c16565b90506000611edb83611f6e565b905080821115611f52576000611f09611efa848463ffffffff611adf16565b6000549063ffffffff611a7c16565b90506000611f2e83611f2286600563ffffffff611a7c16565b9063ffffffff61214316565b90506000818381611f3b57fe5b0490508015611f4e57611f4e8782611fc0565b5050505b50505b611f66565b8015611f66576000600b555b505092915050565b60006003821115611fb1575080600160028204015b81811015611fab57809150600281828581611f9a57fe5b040181611fa357fe5b049050611f83565b50611fbb565b8115611fbb575060015b919050565b600054611fd3908263ffffffff61214316565b60009081556001600160a01b038316815260016020526040902054611ffe908263ffffffff61214316565b6001600160a01b03831660008181526001602090815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35050565b60008183106120655781612067565b825b9392505050565b6001600160a01b038216600090815260016020526040902054612097908263ffffffff611adf16565b6001600160a01b038316600090815260016020526040812091909155546120c4908263ffffffff611adf16565b60009081556040805183815290516001600160a01b038516917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef919081900360200190a35050565b6001600160701b0316600160701b0290565b60006001600160701b0382166001600160e01b0384168161213b57fe5b049392505050565b80820182811015610b5f576040805162461bcd60e51b815260206004820152601460248201527364732d6d6174682d6164642d6f766572666c6f7760601b604482015290519081900360640190fdfe556e697377617056323a20494e53554646494349454e545f4f55545055545f414d4f554e54556e697377617056323a20494e53554646494349454e545f494e5055545f414d4f554e54556e697377617056323a20494e53554646494349454e545f4c4951554944495459556e697377617056323a20494e53554646494349454e545f4c49515549444954595f4255524e4544556e697377617056323a20494e53554646494349454e545f4c49515549444954595f4d494e544544a265627a7a72315820370a754d761ea0667cb15d4b6f538b0b768471c706ffc179958dd155cf627fb064736f6c63430005100032454950373132446f6d61696e28737472696e67206e616d652c737472696e672076657273696f6e2c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e747261637429a265627a7a7231582061cdc8fa81b9af9ab1ef957a587a6af02645fb193b34ea1631e94cb8b425658a64736f6c63430005100032\";\n","/* Autogenerated file. Do not edit manually. */\n/* tslint:disable */\n/* eslint-disable */\n\nimport { Signer } from \"ethers\";\nimport { Provider, TransactionRequest } from \"@ethersproject/providers\";\nimport { Contract, ContractFactory, Overrides } from \"@ethersproject/contracts\";\n\nimport type { UniswapV2Pair } from \"./UniswapV2Pair\";\n\nexport class UniswapV2PairFactory extends ContractFactory {\n  constructor(signer?: Signer) {\n    super(_abi, _bytecode, signer);\n  }\n\n  deploy(overrides?: Overrides): Promise<UniswapV2Pair> {\n    return super.deploy(overrides || {}) as Promise<UniswapV2Pair>;\n  }\n  getDeployTransaction(overrides?: Overrides): TransactionRequest {\n    return super.getDeployTransaction(overrides || {});\n  }\n  attach(address: string): UniswapV2Pair {\n    return super.attach(address) as UniswapV2Pair;\n  }\n  connect(signer: Signer): UniswapV2PairFactory {\n    return super.connect(signer) as UniswapV2PairFactory;\n  }\n  static connect(\n    address: string,\n    signerOrProvider: Signer | Provider\n  ): UniswapV2Pair {\n    return new Contract(address, _abi, signerOrProvider) as UniswapV2Pair;\n  }\n}\n\nconst _abi = [\n  {\n    inputs: [],\n    payable: false,\n    stateMutability: \"nonpayable\",\n    type: \"constructor\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"owner\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"spender\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"value\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"Approval\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"sender\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"amount0\",\n        type: \"uint256\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"amount1\",\n        type: \"uint256\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n    ],\n    name: \"Burn\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"sender\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"amount0\",\n        type: \"uint256\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"amount1\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"Mint\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"sender\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"amount0In\",\n        type: \"uint256\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"amount1In\",\n        type: \"uint256\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"amount0Out\",\n        type: \"uint256\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"amount1Out\",\n        type: \"uint256\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n    ],\n    name: \"Swap\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: \"uint112\",\n        name: \"reserve0\",\n        type: \"uint112\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint112\",\n        name: \"reserve1\",\n        type: \"uint112\",\n      },\n    ],\n    name: \"Sync\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"from\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"value\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"Transfer\",\n    type: \"event\",\n  },\n  {\n    constant: true,\n    inputs: [],\n    name: \"DOMAIN_SEPARATOR\",\n    outputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"\",\n        type: \"bytes32\",\n      },\n    ],\n    payable: false,\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    constant: true,\n    inputs: [],\n    name: \"MINIMUM_LIQUIDITY\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    payable: false,\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    constant: true,\n    inputs: [],\n    name: \"PERMIT_TYPEHASH\",\n    outputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"\",\n        type: \"bytes32\",\n      },\n    ],\n    payable: false,\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    constant: true,\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    name: \"allowance\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    payable: false,\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    constant: false,\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"spender\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"value\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"approve\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    payable: false,\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    constant: true,\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    name: \"balanceOf\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    payable: false,\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    constant: false,\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n    ],\n    name: \"burn\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"amount0\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amount1\",\n        type: \"uint256\",\n      },\n    ],\n    payable: false,\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    constant: true,\n    inputs: [],\n    name: \"decimals\",\n    outputs: [\n      {\n        internalType: \"uint8\",\n        name: \"\",\n        type: \"uint8\",\n      },\n    ],\n    payable: false,\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    constant: true,\n    inputs: [],\n    name: \"factory\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    payable: false,\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    constant: true,\n    inputs: [],\n    name: \"getReserves\",\n    outputs: [\n      {\n        internalType: \"uint112\",\n        name: \"_reserve0\",\n        type: \"uint112\",\n      },\n      {\n        internalType: \"uint112\",\n        name: \"_reserve1\",\n        type: \"uint112\",\n      },\n      {\n        internalType: \"uint32\",\n        name: \"_blockTimestampLast\",\n        type: \"uint32\",\n      },\n    ],\n    payable: false,\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    constant: false,\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"_token0\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"_token1\",\n        type: \"address\",\n      },\n    ],\n    name: \"initialize\",\n    outputs: [],\n    payable: false,\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    constant: true,\n    inputs: [],\n    name: \"kLast\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    payable: false,\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    constant: false,\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n    ],\n    name: \"mint\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"liquidity\",\n        type: \"uint256\",\n      },\n    ],\n    payable: false,\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    constant: true,\n    inputs: [],\n    name: \"name\",\n    outputs: [\n      {\n        internalType: \"string\",\n        name: \"\",\n        type: \"string\",\n      },\n    ],\n    payable: false,\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    constant: true,\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    name: \"nonces\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    payable: false,\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    constant: false,\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"owner\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"spender\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"value\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"deadline\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint8\",\n        name: \"v\",\n        type: \"uint8\",\n      },\n      {\n        internalType: \"bytes32\",\n        name: \"r\",\n        type: \"bytes32\",\n      },\n      {\n        internalType: \"bytes32\",\n        name: \"s\",\n        type: \"bytes32\",\n      },\n    ],\n    name: \"permit\",\n    outputs: [],\n    payable: false,\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    constant: true,\n    inputs: [],\n    name: \"price0CumulativeLast\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    payable: false,\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    constant: true,\n    inputs: [],\n    name: \"price1CumulativeLast\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    payable: false,\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    constant: false,\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n    ],\n    name: \"skim\",\n    outputs: [],\n    payable: false,\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    constant: false,\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"amount0Out\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amount1Out\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        internalType: \"bytes\",\n        name: \"data\",\n        type: \"bytes\",\n      },\n    ],\n    name: \"swap\",\n    outputs: [],\n    payable: false,\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    constant: true,\n    inputs: [],\n    name: \"symbol\",\n    outputs: [\n      {\n        internalType: \"string\",\n        name: \"\",\n        type: \"string\",\n      },\n    ],\n    payable: false,\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    constant: false,\n    inputs: [],\n    name: \"sync\",\n    outputs: [],\n    payable: false,\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    constant: true,\n    inputs: [],\n    name: \"token0\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    payable: false,\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    constant: true,\n    inputs: [],\n    name: \"token1\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    payable: false,\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    constant: true,\n    inputs: [],\n    name: \"totalSupply\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    payable: false,\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    constant: false,\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"value\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"transfer\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    payable: false,\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    constant: false,\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"from\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"value\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"transferFrom\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    payable: false,\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n];\n\nconst _bytecode =\n  \"0x60806040526001600c5534801561001557600080fd5b5060405146908060526123868239604080519182900360520182208282018252600a8352692ab734b9bbb0b8102b1960b11b6020938401528151808301835260018152603160f81b908401528151808401919091527fbfcc8ef98ffbf7b6c3fec7bf5185b566b9863e35a9d83acd49ad6824b5969738818301527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6606082015260808101949094523060a0808601919091528151808603909101815260c09094019052825192019190912060035550600580546001600160a01b03191633179055612281806101056000396000f3fe608060405234801561001057600080fd5b50600436106101a95760003560e01c80636a627842116100f9578063ba9a7a5611610097578063d21220a711610071578063d21220a714610534578063d505accf1461053c578063dd62ed3e1461058d578063fff6cae9146105bb576101a9565b8063ba9a7a56146104fe578063bc25cf7714610506578063c45a01551461052c576101a9565b80637ecebe00116100d35780637ecebe001461046557806389afcb441461048b57806395d89b41146104ca578063a9059cbb146104d2576101a9565b80636a6278421461041157806370a08231146104375780637464fc3d1461045d576101a9565b806323b872dd116101665780633644e515116101405780633644e515146103cb578063485cc955146103d35780635909c0d5146104015780635a3d549314610409576101a9565b806323b872dd1461036f57806330adf81f146103a5578063313ce567146103ad576101a9565b8063022c0d9f146101ae57806306fdde031461023c5780630902f1ac146102b9578063095ea7b3146102f15780630dfe16811461033157806318160ddd14610355575b600080fd5b61023a600480360360808110156101c457600080fd5b8135916020810135916001600160a01b0360408301351691908101906080810160608201356401000000008111156101fb57600080fd5b82018360208201111561020d57600080fd5b8035906020019184600183028401116401000000008311171561022f57600080fd5b5090925090506105c3565b005b610244610afe565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561027e578181015183820152602001610266565b50505050905090810190601f1680156102ab5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6102c1610b24565b604080516001600160701b03948516815292909316602083015263ffffffff168183015290519081900360600190f35b61031d6004803603604081101561030757600080fd5b506001600160a01b038135169060200135610b4e565b604080519115158252519081900360200190f35b610339610b65565b604080516001600160a01b039092168252519081900360200190f35b61035d610b74565b60408051918252519081900360200190f35b61031d6004803603606081101561038557600080fd5b506001600160a01b03813581169160208101359091169060400135610b7a565b61035d610c14565b6103b5610c38565b6040805160ff9092168252519081900360200190f35b61035d610c3d565b61023a600480360360408110156103e957600080fd5b506001600160a01b0381358116916020013516610c43565b61035d610cc7565b61035d610ccd565b61035d6004803603602081101561042757600080fd5b50356001600160a01b0316610cd3565b61035d6004803603602081101561044d57600080fd5b50356001600160a01b0316610fd3565b61035d610fe5565b61035d6004803603602081101561047b57600080fd5b50356001600160a01b0316610feb565b6104b1600480360360208110156104a157600080fd5b50356001600160a01b0316610ffd565b6040805192835260208301919091528051918290030190f35b6102446113a3565b61031d600480360360408110156104e857600080fd5b506001600160a01b0381351690602001356113c5565b61035d6113d2565b61023a6004803603602081101561051c57600080fd5b50356001600160a01b03166113d8565b610339611543565b610339611552565b61023a600480360360e081101561055257600080fd5b506001600160a01b03813581169160208101359091169060408101359060608101359060ff6080820135169060a08101359060c00135611561565b61035d600480360360408110156105a357600080fd5b506001600160a01b0381358116916020013516611763565b61023a611780565b600c5460011461060e576040805162461bcd60e51b8152602060048201526011602482015270155b9a5cddd85c158c8e881313d0d2d151607a1b604482015290519081900360640190fd5b6000600c55841515806106215750600084115b61065c5760405162461bcd60e51b81526004018080602001828103825260258152602001806121936025913960400191505060405180910390fd5b600080610667610b24565b5091509150816001600160701b03168710801561068c5750806001600160701b031686105b6106c75760405162461bcd60e51b81526004018080602001828103825260218152602001806121dc6021913960400191505060405180910390fd5b60065460075460009182916001600160a01b039182169190811690891682148015906107055750806001600160a01b0316896001600160a01b031614155b61074e576040805162461bcd60e51b8152602060048201526015602482015274556e697377617056323a20494e56414c49445f544f60581b604482015290519081900360640190fd5b8a1561075f5761075f828a8d6118e2565b891561077057610770818a8c6118e2565b861561082b57886001600160a01b03166310d1e85c338d8d8c8c6040518663ffffffff1660e01b815260040180866001600160a01b03166001600160a01b03168152602001858152602001848152602001806020018281038252848482818152602001925080828437600081840152601f19601f8201169050808301925050509650505050505050600060405180830381600087803b15801561081257600080fd5b505af1158015610826573d6000803e3d6000fd5b505050505b604080516370a0823160e01b815230600482015290516001600160a01b038416916370a08231916024808301926020929190829003018186803b15801561087157600080fd5b505afa158015610885573d6000803e3d6000fd5b505050506040513d602081101561089b57600080fd5b5051604080516370a0823160e01b815230600482015290519195506001600160a01b038316916370a0823191602480820192602092909190829003018186803b1580156108e757600080fd5b505afa1580156108fb573d6000803e3d6000fd5b505050506040513d602081101561091157600080fd5b5051925060009150506001600160701b0385168a90038311610934576000610943565b89856001600160701b03160383035b9050600089856001600160701b031603831161096057600061096f565b89856001600160701b03160383035b905060008211806109805750600081115b6109bb5760405162461bcd60e51b81526004018080602001828103825260248152602001806121b86024913960400191505060405180910390fd5b60006109ef6109d184600363ffffffff611a7c16565b6109e3876103e863ffffffff611a7c16565b9063ffffffff611adf16565b90506000610a076109d184600363ffffffff611a7c16565b9050610a38620f4240610a2c6001600160701b038b8116908b1663ffffffff611a7c16565b9063ffffffff611a7c16565b610a48838363ffffffff611a7c16565b1015610a8a576040805162461bcd60e51b815260206004820152600c60248201526b556e697377617056323a204b60a01b604482015290519081900360640190fd5b5050610a9884848888611b2f565b60408051838152602081018390528082018d9052606081018c905290516001600160a01b038b169133917fd78ad95fa46c994b6551d0da85fc275fe613ce37657fb8d5e3d130840159d8229181900360800190a350506001600c55505050505050505050565b6040518060400160405280600a8152602001692ab734b9bbb0b8102b1960b11b81525081565b6008546001600160701b0380821692600160701b830490911691600160e01b900463ffffffff1690565b6000610b5b338484611cf4565b5060015b92915050565b6006546001600160a01b031681565b60005481565b6001600160a01b038316600090815260026020908152604080832033845290915281205460001914610bff576001600160a01b0384166000908152600260209081526040808320338452909152902054610bda908363ffffffff611adf16565b6001600160a01b03851660009081526002602090815260408083203384529091529020555b610c0a848484611d56565b5060019392505050565b7f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c981565b601281565b60035481565b6005546001600160a01b03163314610c99576040805162461bcd60e51b81526020600482015260146024820152732ab734b9bbb0b82b191d102327a92124a22222a760611b604482015290519081900360640190fd5b600680546001600160a01b039384166001600160a01b03199182161790915560078054929093169116179055565b60095481565b600a5481565b6000600c54600114610d20576040805162461bcd60e51b8152602060048201526011602482015270155b9a5cddd85c158c8e881313d0d2d151607a1b604482015290519081900360640190fd5b6000600c81905580610d30610b24565b50600654604080516370a0823160e01b815230600482015290519395509193506000926001600160a01b03909116916370a08231916024808301926020929190829003018186803b158015610d8457600080fd5b505afa158015610d98573d6000803e3d6000fd5b505050506040513d6020811015610dae57600080fd5b5051600754604080516370a0823160e01b815230600482015290519293506000926001600160a01b03909216916370a0823191602480820192602092909190829003018186803b158015610e0157600080fd5b505afa158015610e15573d6000803e3d6000fd5b505050506040513d6020811015610e2b57600080fd5b505190506000610e4a836001600160701b03871663ffffffff611adf16565b90506000610e67836001600160701b03871663ffffffff611adf16565b90506000610e758787611e10565b60005490915080610eb257610e9e6103e86109e3610e99878763ffffffff611a7c16565b611f6e565b9850610ead60006103e8611fc0565b610f01565b610efe6001600160701b038916610ecf868463ffffffff611a7c16565b81610ed657fe5b046001600160701b038916610ef1868563ffffffff611a7c16565b81610ef857fe5b04612056565b98505b60008911610f405760405162461bcd60e51b81526004018080602001828103825260288152602001806122256028913960400191505060405180910390fd5b610f4a8a8a611fc0565b610f5686868a8a611b2f565b8115610f8657600854610f82906001600160701b0380821691600160701b90041663ffffffff611a7c16565b600b555b6040805185815260208101859052815133927f4c209b5fc8ad50758f13e2e1088ba56a560dff690a1c6fef26394f4c03821c4f928290030190a250506001600c5550949695505050505050565b60016020526000908152604090205481565b600b5481565b60046020526000908152604090205481565b600080600c5460011461104b576040805162461bcd60e51b8152602060048201526011602482015270155b9a5cddd85c158c8e881313d0d2d151607a1b604482015290519081900360640190fd5b6000600c8190558061105b610b24565b50600654600754604080516370a0823160e01b815230600482015290519496509294506001600160a01b039182169391169160009184916370a08231916024808301926020929190829003018186803b1580156110b757600080fd5b505afa1580156110cb573d6000803e3d6000fd5b505050506040513d60208110156110e157600080fd5b5051604080516370a0823160e01b815230600482015290519192506000916001600160a01b038516916370a08231916024808301926020929190829003018186803b15801561112f57600080fd5b505afa158015611143573d6000803e3d6000fd5b505050506040513d602081101561115957600080fd5b5051306000908152600160205260408120549192506111788888611e10565b6000549091508061118f848763ffffffff611a7c16565b8161119657fe5b049a50806111aa848663ffffffff611a7c16565b816111b157fe5b04995060008b1180156111c4575060008a115b6111ff5760405162461bcd60e51b81526004018080602001828103825260288152602001806121fd6028913960400191505060405180910390fd5b611209308461206e565b611214878d8d6118e2565b61121f868d8c6118e2565b604080516370a0823160e01b815230600482015290516001600160a01b038916916370a08231916024808301926020929190829003018186803b15801561126557600080fd5b505afa158015611279573d6000803e3d6000fd5b505050506040513d602081101561128f57600080fd5b5051604080516370a0823160e01b815230600482015290519196506001600160a01b038816916370a0823191602480820192602092909190829003018186803b1580156112db57600080fd5b505afa1580156112ef573d6000803e3d6000fd5b505050506040513d602081101561130557600080fd5b5051935061131585858b8b611b2f565b811561134557600854611341906001600160701b0380821691600160701b90041663ffffffff611a7c16565b600b555b604080518c8152602081018c905281516001600160a01b038f169233927fdccd412f0b1252819cb1fd330b93224ca42612892bb3f4f789976e6d81936496929081900390910190a35050505050505050506001600c81905550915091565b604051806040016040528060068152602001652aa72496ab1960d11b81525081565b6000610b5b338484611d56565b6103e881565b600c54600114611423576040805162461bcd60e51b8152602060048201526011602482015270155b9a5cddd85c158c8e881313d0d2d151607a1b604482015290519081900360640190fd5b6000600c55600654600754600854604080516370a0823160e01b815230600482015290516001600160a01b0394851694909316926114d292859287926114cd926001600160701b03169185916370a0823191602480820192602092909190829003018186803b15801561149557600080fd5b505afa1580156114a9573d6000803e3d6000fd5b505050506040513d60208110156114bf57600080fd5b50519063ffffffff611adf16565b6118e2565b600854604080516370a0823160e01b8152306004820152905161153992849287926114cd92600160701b90046001600160701b0316916001600160a01b038616916370a0823191602480820192602092909190829003018186803b15801561149557600080fd5b50506001600c5550565b6005546001600160a01b031681565b6007546001600160a01b031681565b428410156115ab576040805162461bcd60e51b8152602060048201526012602482015271155b9a5cddd85c158c8e881156141254915160721b604482015290519081900360640190fd5b6003546001600160a01b0380891660008181526004602090815260408083208054600180820190925582517f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c98186015280840196909652958d166060860152608085018c905260a085019590955260c08085018b90528151808603909101815260e08501825280519083012061190160f01b6101008601526101028501969096526101228085019690965280518085039096018652610142840180825286519683019690962095839052610162840180825286905260ff89166101828501526101a284018890526101c28401879052519193926101e280820193601f1981019281900390910190855afa1580156116c6573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116158015906116fc5750886001600160a01b0316816001600160a01b0316145b61174d576040805162461bcd60e51b815260206004820152601c60248201527f556e697377617056323a20494e56414c49445f5349474e415455524500000000604482015290519081900360640190fd5b611758898989611cf4565b505050505050505050565b600260209081526000928352604080842090915290825290205481565b600c546001146117cb576040805162461bcd60e51b8152602060048201526011602482015270155b9a5cddd85c158c8e881313d0d2d151607a1b604482015290519081900360640190fd5b6000600c55600654604080516370a0823160e01b815230600482015290516118db926001600160a01b0316916370a08231916024808301926020929190829003018186803b15801561181c57600080fd5b505afa158015611830573d6000803e3d6000fd5b505050506040513d602081101561184657600080fd5b5051600754604080516370a0823160e01b815230600482015290516001600160a01b03909216916370a0823191602480820192602092909190829003018186803b15801561189357600080fd5b505afa1580156118a7573d6000803e3d6000fd5b505050506040513d60208110156118bd57600080fd5b50516008546001600160701b0380821691600160701b900416611b2f565b6001600c55565b604080518082018252601981527f7472616e7366657228616464726573732c75696e74323536290000000000000060209182015281516001600160a01b0385811660248301526044808301869052845180840390910181526064909201845291810180516001600160e01b031663a9059cbb60e01b1781529251815160009460609489169392918291908083835b6020831061198f5780518252601f199092019160209182019101611970565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d80600081146119f1576040519150601f19603f3d011682016040523d82523d6000602084013e6119f6565b606091505b5091509150818015611a24575080511580611a245750808060200190516020811015611a2157600080fd5b50515b611a75576040805162461bcd60e51b815260206004820152601a60248201527f556e697377617056323a205452414e534645525f4641494c4544000000000000604482015290519081900360640190fd5b5050505050565b6000811580611a9757505080820282828281611a9457fe5b04145b610b5f576040805162461bcd60e51b815260206004820152601460248201527364732d6d6174682d6d756c2d6f766572666c6f7760601b604482015290519081900360640190fd5b80820382811115610b5f576040805162461bcd60e51b815260206004820152601560248201527464732d6d6174682d7375622d756e646572666c6f7760581b604482015290519081900360640190fd5b6001600160701b038411801590611b4d57506001600160701b038311155b611b94576040805162461bcd60e51b8152602060048201526013602482015272556e697377617056323a204f564552464c4f5760681b604482015290519081900360640190fd5b60085463ffffffff42811691600160e01b90048116820390811615801590611bc457506001600160701b03841615155b8015611bd857506001600160701b03831615155b15611c49578063ffffffff16611c0685611bf18661210c565b6001600160e01b03169063ffffffff61211e16565b600980546001600160e01b03929092169290920201905563ffffffff8116611c3184611bf18761210c565b600a80546001600160e01b0392909216929092020190555b600880546dffffffffffffffffffffffffffff19166001600160701b03888116919091176dffffffffffffffffffffffffffff60701b1916600160701b8883168102919091176001600160e01b0316600160e01b63ffffffff871602179283905560408051848416815291909304909116602082015281517f1c411e9a96e071241c2f21f7726b17ae89e3cab4c78be50e062b03a9fffbbad1929181900390910190a1505050505050565b6001600160a01b03808416600081815260026020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b6001600160a01b038316600090815260016020526040902054611d7f908263ffffffff611adf16565b6001600160a01b038085166000908152600160205260408082209390935590841681522054611db4908263ffffffff61214316565b6001600160a01b0380841660008181526001602090815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b600080600560009054906101000a90046001600160a01b03166001600160a01b031663017e7e586040518163ffffffff1660e01b815260040160206040518083038186803b158015611e6157600080fd5b505afa158015611e75573d6000803e3d6000fd5b505050506040513d6020811015611e8b57600080fd5b5051600b546001600160a01b038216158015945091925090611f5a578015611f55576000611ece610e996001600160701b0388811690881663ffffffff611a7c16565b90506000611edb83611f6e565b905080821115611f52576000611f09611efa848463ffffffff611adf16565b6000549063ffffffff611a7c16565b90506000611f2e83611f2286600563ffffffff611a7c16565b9063ffffffff61214316565b90506000818381611f3b57fe5b0490508015611f4e57611f4e8782611fc0565b5050505b50505b611f66565b8015611f66576000600b555b505092915050565b60006003821115611fb1575080600160028204015b81811015611fab57809150600281828581611f9a57fe5b040181611fa357fe5b049050611f83565b50611fbb565b8115611fbb575060015b919050565b600054611fd3908263ffffffff61214316565b60009081556001600160a01b038316815260016020526040902054611ffe908263ffffffff61214316565b6001600160a01b03831660008181526001602090815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35050565b60008183106120655781612067565b825b9392505050565b6001600160a01b038216600090815260016020526040902054612097908263ffffffff611adf16565b6001600160a01b038316600090815260016020526040812091909155546120c4908263ffffffff611adf16565b60009081556040805183815290516001600160a01b038516917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef919081900360200190a35050565b6001600160701b0316600160701b0290565b60006001600160701b0382166001600160e01b0384168161213b57fe5b049392505050565b80820182811015610b5f576040805162461bcd60e51b815260206004820152601460248201527364732d6d6174682d6164642d6f766572666c6f7760601b604482015290519081900360640190fdfe556e697377617056323a20494e53554646494349454e545f4f55545055545f414d4f554e54556e697377617056323a20494e53554646494349454e545f494e5055545f414d4f554e54556e697377617056323a20494e53554646494349454e545f4c4951554944495459556e697377617056323a20494e53554646494349454e545f4c49515549444954595f4255524e4544556e697377617056323a20494e53554646494349454e545f4c49515549444954595f4d494e544544a265627a7a72315820370a754d761ea0667cb15d4b6f538b0b768471c706ffc179958dd155cf627fb064736f6c63430005100032454950373132446f6d61696e28737472696e67206e616d652c737472696e672076657273696f6e2c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e747261637429\";\n","/* Autogenerated file. Do not edit manually. */\n/* tslint:disable */\n/* eslint-disable */\n\nimport { Signer } from \"ethers\";\nimport { Provider, TransactionRequest } from \"@ethersproject/providers\";\nimport { Contract, ContractFactory, Overrides } from \"@ethersproject/contracts\";\n\nimport type { UniswapV2Router01 } from \"./UniswapV2Router01\";\n\nexport class UniswapV2Router01Factory extends ContractFactory {\n  constructor(signer?: Signer) {\n    super(_abi, _bytecode, signer);\n  }\n\n  deploy(\n    _factory: string,\n    _WETH: string,\n    overrides?: Overrides\n  ): Promise<UniswapV2Router01> {\n    return super.deploy(\n      _factory,\n      _WETH,\n      overrides || {}\n    ) as Promise<UniswapV2Router01>;\n  }\n  getDeployTransaction(\n    _factory: string,\n    _WETH: string,\n    overrides?: Overrides\n  ): TransactionRequest {\n    return super.getDeployTransaction(_factory, _WETH, overrides || {});\n  }\n  attach(address: string): UniswapV2Router01 {\n    return super.attach(address) as UniswapV2Router01;\n  }\n  connect(signer: Signer): UniswapV2Router01Factory {\n    return super.connect(signer) as UniswapV2Router01Factory;\n  }\n  static connect(\n    address: string,\n    signerOrProvider: Signer | Provider\n  ): UniswapV2Router01 {\n    return new Contract(address, _abi, signerOrProvider) as UniswapV2Router01;\n  }\n}\n\nconst _abi = [\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"_factory\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"_WETH\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"constructor\",\n  },\n  {\n    inputs: [],\n    name: \"WETH\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"tokenA\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"tokenB\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amountADesired\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amountBDesired\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amountAMin\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amountBMin\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"deadline\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"addLiquidity\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"amountA\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amountB\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"liquidity\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"token\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amountTokenDesired\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amountTokenMin\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amountETHMin\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"deadline\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"addLiquidityETH\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"amountToken\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amountETH\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"liquidity\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"payable\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"factory\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"amountOut\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"reserveIn\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"reserveOut\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"getAmountIn\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"amountIn\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"pure\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"amountIn\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"reserveIn\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"reserveOut\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"getAmountOut\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"amountOut\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"pure\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"amountOut\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"address[]\",\n        name: \"path\",\n        type: \"address[]\",\n      },\n    ],\n    name: \"getAmountsIn\",\n    outputs: [\n      {\n        internalType: \"uint256[]\",\n        name: \"amounts\",\n        type: \"uint256[]\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"amountIn\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"address[]\",\n        name: \"path\",\n        type: \"address[]\",\n      },\n    ],\n    name: \"getAmountsOut\",\n    outputs: [\n      {\n        internalType: \"uint256[]\",\n        name: \"amounts\",\n        type: \"uint256[]\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"amountA\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"reserveA\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"reserveB\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"quote\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"amountB\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"pure\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"tokenA\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"tokenB\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"liquidity\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amountAMin\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amountBMin\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"deadline\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"removeLiquidity\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"amountA\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amountB\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"token\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"liquidity\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amountTokenMin\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amountETHMin\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"deadline\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"removeLiquidityETH\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"amountToken\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amountETH\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"token\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"liquidity\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amountTokenMin\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amountETHMin\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"deadline\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"bool\",\n        name: \"approveMax\",\n        type: \"bool\",\n      },\n      {\n        internalType: \"uint8\",\n        name: \"v\",\n        type: \"uint8\",\n      },\n      {\n        internalType: \"bytes32\",\n        name: \"r\",\n        type: \"bytes32\",\n      },\n      {\n        internalType: \"bytes32\",\n        name: \"s\",\n        type: \"bytes32\",\n      },\n    ],\n    name: \"removeLiquidityETHWithPermit\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"amountToken\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amountETH\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"tokenA\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"tokenB\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"liquidity\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amountAMin\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amountBMin\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"deadline\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"bool\",\n        name: \"approveMax\",\n        type: \"bool\",\n      },\n      {\n        internalType: \"uint8\",\n        name: \"v\",\n        type: \"uint8\",\n      },\n      {\n        internalType: \"bytes32\",\n        name: \"r\",\n        type: \"bytes32\",\n      },\n      {\n        internalType: \"bytes32\",\n        name: \"s\",\n        type: \"bytes32\",\n      },\n    ],\n    name: \"removeLiquidityWithPermit\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"amountA\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amountB\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"amountOut\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"address[]\",\n        name: \"path\",\n        type: \"address[]\",\n      },\n      {\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"deadline\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"swapETHForExactTokens\",\n    outputs: [\n      {\n        internalType: \"uint256[]\",\n        name: \"amounts\",\n        type: \"uint256[]\",\n      },\n    ],\n    stateMutability: \"payable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"amountOutMin\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"address[]\",\n        name: \"path\",\n        type: \"address[]\",\n      },\n      {\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"deadline\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"swapExactETHForTokens\",\n    outputs: [\n      {\n        internalType: \"uint256[]\",\n        name: \"amounts\",\n        type: \"uint256[]\",\n      },\n    ],\n    stateMutability: \"payable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"amountIn\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amountOutMin\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"address[]\",\n        name: \"path\",\n        type: \"address[]\",\n      },\n      {\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"deadline\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"swapExactTokensForETH\",\n    outputs: [\n      {\n        internalType: \"uint256[]\",\n        name: \"amounts\",\n        type: \"uint256[]\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"amountIn\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amountOutMin\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"address[]\",\n        name: \"path\",\n        type: \"address[]\",\n      },\n      {\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"deadline\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"swapExactTokensForTokens\",\n    outputs: [\n      {\n        internalType: \"uint256[]\",\n        name: \"amounts\",\n        type: \"uint256[]\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"amountOut\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amountInMax\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"address[]\",\n        name: \"path\",\n        type: \"address[]\",\n      },\n      {\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"deadline\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"swapTokensForExactETH\",\n    outputs: [\n      {\n        internalType: \"uint256[]\",\n        name: \"amounts\",\n        type: \"uint256[]\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"amountOut\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amountInMax\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"address[]\",\n        name: \"path\",\n        type: \"address[]\",\n      },\n      {\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"deadline\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"swapTokensForExactTokens\",\n    outputs: [\n      {\n        internalType: \"uint256[]\",\n        name: \"amounts\",\n        type: \"uint256[]\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    stateMutability: \"payable\",\n    type: \"receive\",\n  },\n];\n\nconst _bytecode =\n  \"0x60c060405234801561001057600080fd5b506040516136143803806136148339818101604052604081101561003357600080fd5b5080516020909101516001600160601b0319606092831b8116608052911b1660a05260805160601c60a05160601c6134d861013c600039806101285280610a015280610a3c5280610b335280610d5152806110db528061125f52806113a5528061142d528061168252806119725280611be55280611c3b5280611c6f5280611ce35280611e835280611fc6528061204e525080610bc15280610c985280610e175280610e505280610f8b528061116952806112f2528061145f52806115d252806116ff52806118f7528061192052806119505280611abd5280611c195280611f1652806120805280612927528061296a5280612db15280612e5f5280612edf52506134d86000f3fe6080604052600436106101185760003560e01c80638803dbee116100a0578063d06ca61f11610064578063d06ca61f14610742578063ded9382a146107f7578063e8e337001461086a578063f305d719146108ea578063fb3bdb411461093057610151565b80638803dbee146105d3578063ad5c464814610669578063ad615dec1461069a578063baa2abde146106d0578063c45a01551461072d57610151565b80632195995c116100e75780632195995c146103a557806338ed1739146104235780634a25d94a146104b95780637ff36ab51461054f57806385f8c259146101c257610151565b806302751cec14610156578063054d50d4146101c257806318cbafe51461020a5780631f00ca74146102f057610151565b3661015157336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461014f57fe5b005b600080fd5b34801561016257600080fd5b506101a9600480360360c081101561017957600080fd5b506001600160a01b0381358116916020810135916040820135916060810135916080820135169060a001356109b4565b6040805192835260208301919091528051918290030190f35b3480156101ce57600080fd5b506101f8600480360360608110156101e557600080fd5b5080359060208101359060400135610ace565b60408051918252519081900360200190f35b34801561021657600080fd5b506102a0600480360360a081101561022d57600080fd5b813591602081013591810190606081016040820135600160201b81111561025357600080fd5b82018360208201111561026557600080fd5b803590602001918460208302840111600160201b8311171561028657600080fd5b91935091506001600160a01b038135169060200135610ae3565b60408051602080825283518183015283519192839290830191858101910280838360005b838110156102dc5781810151838201526020016102c4565b505050509050019250505060405180910390f35b3480156102fc57600080fd5b506102a06004803603604081101561031357600080fd5b81359190810190604081016020820135600160201b81111561033457600080fd5b82018360208201111561034657600080fd5b803590602001918460208302840111600160201b8311171561036757600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250929550610e10945050505050565b3480156103b157600080fd5b506101a960048036036101608110156103c957600080fd5b506001600160a01b038135811691602081013582169160408201359160608101359160808201359160a08101359091169060c08101359060e081013515159060ff6101008201351690610120810135906101400135610e46565b34801561042f57600080fd5b506102a0600480360360a081101561044657600080fd5b813591602081013591810190606081016040820135600160201b81111561046c57600080fd5b82018360208201111561047e57600080fd5b803590602001918460208302840111600160201b8311171561049f57600080fd5b91935091506001600160a01b038135169060200135610f40565b3480156104c557600080fd5b506102a0600480360360a08110156104dc57600080fd5b813591602081013591810190606081016040820135600160201b81111561050257600080fd5b82018360208201111561051457600080fd5b803590602001918460208302840111600160201b8311171561053557600080fd5b91935091506001600160a01b03813516906020013561108b565b6102a06004803603608081101561056557600080fd5b81359190810190604081016020820135600160201b81111561058657600080fd5b82018360208201111561059857600080fd5b803590602001918460208302840111600160201b831117156105b957600080fd5b91935091506001600160a01b038135169060200135611217565b3480156105df57600080fd5b506102a0600480360360a08110156105f657600080fd5b813591602081013591810190606081016040820135600160201b81111561061c57600080fd5b82018360208201111561062e57600080fd5b803590602001918460208302840111600160201b8311171561064f57600080fd5b91935091506001600160a01b038135169060200135611587565b34801561067557600080fd5b5061067e611680565b604080516001600160a01b039092168252519081900360200190f35b3480156106a657600080fd5b506101f8600480360360608110156106bd57600080fd5b50803590602081013590604001356116a4565b3480156106dc57600080fd5b506101a9600480360360e08110156106f357600080fd5b506001600160a01b038135811691602081013582169160408201359160608101359160808201359160a08101359091169060c001356116b1565b34801561073957600080fd5b5061067e6118f5565b34801561074e57600080fd5b506102a06004803603604081101561076557600080fd5b81359190810190604081016020820135600160201b81111561078657600080fd5b82018360208201111561079857600080fd5b803590602001918460208302840111600160201b831117156107b957600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250929550611919945050505050565b34801561080357600080fd5b506101a9600480360361014081101561081b57600080fd5b506001600160a01b0381358116916020810135916040820135916060810135916080820135169060a08101359060c081013515159060ff60e08201351690610100810135906101200135611946565b34801561087657600080fd5b506108cc600480360361010081101561088e57600080fd5b506001600160a01b038135811691602081013582169160408201359160608101359160808201359160a08101359160c0820135169060e00135611a5a565b60408051938452602084019290925282820152519081900360600190f35b6108cc600480360360c081101561090057600080fd5b506001600160a01b0381358116916020810135916040820135916060810135916080820135169060a00135611b96565b6102a06004803603608081101561094657600080fd5b81359190810190604081016020820135600160201b81111561096757600080fd5b82018360208201111561097957600080fd5b803590602001918460208302840111600160201b8311171561099a57600080fd5b91935091506001600160a01b038135169060200135611e3b565b60008082428110156109fb576040805162461bcd60e51b81526020600482015260186024820152600080516020613483833981519152604482015290519081900360640190fd5b610a2a897f00000000000000000000000000000000000000000000000000000000000000008a8a8a308a6116b1565b9093509150610a3a8986856121bd565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316632e1a7d4d836040518263ffffffff1660e01b815260040180828152602001915050600060405180830381600087803b158015610aa057600080fd5b505af1158015610ab4573d6000803e3d6000fd5b50505050610ac28583612327565b50965096945050505050565b6000610adb84848461241f565b949350505050565b60608142811015610b29576040805162461bcd60e51b81526020600482015260186024820152600080516020613483833981519152604482015290519081900360640190fd5b6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001686866000198101818110610b6357fe5b905060200201356001600160a01b03166001600160a01b031614610bbc576040805162461bcd60e51b815260206004820152601d60248201526000805160206133a0833981519152604482015290519081900360640190fd5b610c1a7f00000000000000000000000000000000000000000000000000000000000000008988888080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525061250f92505050565b91508682600184510381518110610c2d57fe5b60200260200101511015610c725760405162461bcd60e51b815260040180806020018281038252602b815260200180613409602b913960400191505060405180910390fd5b610d1086866000818110610c8257fe5b905060200201356001600160a01b031633610cf67f00000000000000000000000000000000000000000000000000000000000000008a8a6000818110610cc457fe5b905060200201356001600160a01b03168b8b6001818110610ce157fe5b905060200201356001600160a01b031661265b565b85600081518110610d0357fe5b602002602001015161271b565b610d4f82878780806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250309250612878915050565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316632e1a7d4d83600185510381518110610d8e57fe5b60200260200101516040518263ffffffff1660e01b815260040180828152602001915050600060405180830381600087803b158015610dcc57600080fd5b505af1158015610de0573d6000803e3d6000fd5b50505050610e058483600185510381518110610df857fe5b6020026020010151612327565b509695505050505050565b6060610e3d7f00000000000000000000000000000000000000000000000000000000000000008484612abe565b90505b92915050565b6000806000610e767f00000000000000000000000000000000000000000000000000000000000000008f8f61265b565b9050600087610e85578c610e89565b6000195b6040805163d505accf60e01b815233600482015230602482015260448101839052606481018c905260ff8a16608482015260a4810189905260c4810188905290519192506001600160a01b0384169163d505accf9160e48082019260009290919082900301818387803b158015610eff57600080fd5b505af1158015610f13573d6000803e3d6000fd5b50505050610f268f8f8f8f8f8f8f6116b1565b809450819550505050509b509b9950505050505050505050565b60608142811015610f86576040805162461bcd60e51b81526020600482015260186024820152600080516020613483833981519152604482015290519081900360640190fd5b610fe47f00000000000000000000000000000000000000000000000000000000000000008988888080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525061250f92505050565b91508682600184510381518110610ff757fe5b6020026020010151101561103c5760405162461bcd60e51b815260040180806020018281038252602b815260200180613409602b913960400191505060405180910390fd5b61104c86866000818110610c8257fe5b610e0582878780806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250899250612878915050565b606081428110156110d1576040805162461bcd60e51b81526020600482015260186024820152600080516020613483833981519152604482015290519081900360640190fd5b6001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000168686600019810181811061110b57fe5b905060200201356001600160a01b03166001600160a01b031614611164576040805162461bcd60e51b815260206004820152601d60248201526000805160206133a0833981519152604482015290519081900360640190fd5b6111c27f000000000000000000000000000000000000000000000000000000000000000089888880806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250612abe92505050565b915086826000815181106111d257fe5b60200260200101511115610c725760405162461bcd60e51b81526004018080602001828103825260278152602001806133796027913960400191505060405180910390fd5b6060814281101561125d576040805162461bcd60e51b81526020600482015260186024820152600080516020613483833981519152604482015290519081900360640190fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168686600081811061129457fe5b905060200201356001600160a01b03166001600160a01b0316146112ed576040805162461bcd60e51b815260206004820152601d60248201526000805160206133a0833981519152604482015290519081900360640190fd5b61134b7f00000000000000000000000000000000000000000000000000000000000000003488888080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525061250f92505050565b9150868260018451038151811061135e57fe5b602002602001015110156113a35760405162461bcd60e51b815260040180806020018281038252602b815260200180613409602b913960400191505060405180910390fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663d0e30db0836000815181106113df57fe5b60200260200101516040518263ffffffff1660e01b81526004016000604051808303818588803b15801561141257600080fd5b505af1158015611426573d6000803e3d6000fd5b50505050507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663a9059cbb6114a87f00000000000000000000000000000000000000000000000000000000000000008989600081811061148b57fe5b905060200201356001600160a01b03168a8a6001818110610ce157fe5b846000815181106114b557fe5b60200260200101516040518363ffffffff1660e01b815260040180836001600160a01b03166001600160a01b0316815260200182815260200192505050602060405180830381600087803b15801561150c57600080fd5b505af1158015611520573d6000803e3d6000fd5b505050506040513d602081101561153657600080fd5b505161153e57fe5b61157d82878780806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250899250612878915050565b5095945050505050565b606081428110156115cd576040805162461bcd60e51b81526020600482015260186024820152600080516020613483833981519152604482015290519081900360640190fd5b61162b7f000000000000000000000000000000000000000000000000000000000000000089888880806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250612abe92505050565b9150868260008151811061163b57fe5b6020026020010151111561103c5760405162461bcd60e51b81526004018080602001828103825260278152602001806133796027913960400191505060405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000081565b6000610adb848484612bf6565b60008082428110156116f8576040805162461bcd60e51b81526020600482015260186024820152600080516020613483833981519152604482015290519081900360640190fd5b60006117257f00000000000000000000000000000000000000000000000000000000000000008c8c61265b565b604080516323b872dd60e01b81523360048201526001600160a01b03831660248201819052604482018d9052915192935090916323b872dd916064808201926020929091908290030181600087803b15801561178057600080fd5b505af1158015611794573d6000803e3d6000fd5b505050506040513d60208110156117aa57600080fd5b50506040805163226bf2d160e21b81526001600160a01b03888116600483015282516000938493928616926389afcb44926024808301939282900301818787803b1580156117f757600080fd5b505af115801561180b573d6000803e3d6000fd5b505050506040513d604081101561182157600080fd5b5080516020909101519092509050600061183b8e8e612ca2565b509050806001600160a01b03168e6001600160a01b03161461185e578183611861565b82825b90975095508a8710156118a55760405162461bcd60e51b81526004018080602001828103825260268152602001806133c06026913960400191505060405180910390fd5b898610156118e45760405162461bcd60e51b81526004018080602001828103825260268152602001806133066026913960400191505060405180910390fd5b505050505097509795505050505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b6060610e3d7f0000000000000000000000000000000000000000000000000000000000000000848461250f565b60008060006119967f00000000000000000000000000000000000000000000000000000000000000008e7f000000000000000000000000000000000000000000000000000000000000000061265b565b90506000876119a5578c6119a9565b6000195b6040805163d505accf60e01b815233600482015230602482015260448101839052606481018c905260ff8a16608482015260a4810189905260c4810188905290519192506001600160a01b0384169163d505accf9160e48082019260009290919082900301818387803b158015611a1f57600080fd5b505af1158015611a33573d6000803e3d6000fd5b50505050611a458e8e8e8e8e8e6109b4565b909f909e509c50505050505050505050505050565b60008060008342811015611aa3576040805162461bcd60e51b81526020600482015260186024820152600080516020613483833981519152604482015290519081900360640190fd5b611ab18c8c8c8c8c8c612d80565b90945092506000611ae37f00000000000000000000000000000000000000000000000000000000000000008e8e61265b565b9050611af18d33838861271b565b611afd8c33838761271b565b806001600160a01b0316636a627842886040518263ffffffff1660e01b815260040180826001600160a01b03166001600160a01b03168152602001915050602060405180830381600087803b158015611b5557600080fd5b505af1158015611b69573d6000803e3d6000fd5b505050506040513d6020811015611b7f57600080fd5b5051949d939c50939a509198505050505050505050565b60008060008342811015611bdf576040805162461bcd60e51b81526020600482015260186024820152600080516020613483833981519152604482015290519081900360640190fd5b611c0d8a7f00000000000000000000000000000000000000000000000000000000000000008b348c8c612d80565b90945092506000611c5f7f00000000000000000000000000000000000000000000000000000000000000008c7f000000000000000000000000000000000000000000000000000000000000000061265b565b9050611c6d8b33838861271b565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663d0e30db0856040518263ffffffff1660e01b81526004016000604051808303818588803b158015611cc857600080fd5b505af1158015611cdc573d6000803e3d6000fd5b50505050507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663a9059cbb82866040518363ffffffff1660e01b815260040180836001600160a01b03166001600160a01b0316815260200182815260200192505050602060405180830381600087803b158015611d6157600080fd5b505af1158015611d75573d6000803e3d6000fd5b505050506040513d6020811015611d8b57600080fd5b5051611d9357fe5b806001600160a01b0316636a627842886040518263ffffffff1660e01b815260040180826001600160a01b03166001600160a01b03168152602001915050602060405180830381600087803b158015611deb57600080fd5b505af1158015611dff573d6000803e3d6000fd5b505050506040513d6020811015611e1557600080fd5b5051925034841015611e2d57611e2d33853403612327565b505096509650969350505050565b60608142811015611e81576040805162461bcd60e51b81526020600482015260186024820152600080516020613483833981519152604482015290519081900360640190fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031686866000818110611eb857fe5b905060200201356001600160a01b03166001600160a01b031614611f11576040805162461bcd60e51b815260206004820152601d60248201526000805160206133a0833981519152604482015290519081900360640190fd5b611f6f7f000000000000000000000000000000000000000000000000000000000000000088888880806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250612abe92505050565b91503482600081518110611f7f57fe5b60200260200101511115611fc45760405162461bcd60e51b81526004018080602001828103825260278152602001806133796027913960400191505060405180910390fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663d0e30db08360008151811061200057fe5b60200260200101516040518263ffffffff1660e01b81526004016000604051808303818588803b15801561203357600080fd5b505af1158015612047573d6000803e3d6000fd5b50505050507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663a9059cbb6120ac7f00000000000000000000000000000000000000000000000000000000000000008989600081811061148b57fe5b846000815181106120b957fe5b60200260200101516040518363ffffffff1660e01b815260040180836001600160a01b03166001600160a01b0316815260200182815260200192505050602060405180830381600087803b15801561211057600080fd5b505af1158015612124573d6000803e3d6000fd5b505050506040513d602081101561213a57600080fd5b505161214257fe5b61218182878780806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250899250612878915050565b8160008151811061218e57fe5b602002602001015134111561157d5761157d33836000815181106121ae57fe5b60200260200101513403612327565b604080516001600160a01b038481166024830152604480830185905283518084039091018152606490920183526020820180516001600160e01b031663a9059cbb60e01b178152925182516000946060949389169392918291908083835b6020831061223a5780518252601f19909201916020918201910161221b565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d806000811461229c576040519150601f19603f3d011682016040523d82523d6000602084013e6122a1565b606091505b50915091508180156122cf5750805115806122cf57508080602001905160208110156122cc57600080fd5b50515b612320576040805162461bcd60e51b815260206004820152601f60248201527f5472616e7366657248656c7065723a205452414e534645525f4641494c454400604482015290519081900360640190fd5b5050505050565b604080516000808252602082019092526001600160a01b0384169083906040518082805190602001908083835b602083106123735780518252601f199092019160209182019101612354565b6001836020036101000a03801982511681845116808217855250505050505090500191505060006040518083038185875af1925050503d80600081146123d5576040519150601f19603f3d011682016040523d82523d6000602084013e6123da565b606091505b505090508061241a5760405162461bcd60e51b81526004018080602001828103825260238152602001806133e66023913960400191505060405180910390fd5b505050565b600080841161245f5760405162461bcd60e51b815260040180806020018281038252602b815260200180613458602b913960400191505060405180910390fd5b60008311801561246f5750600082115b6124aa5760405162461bcd60e51b815260040180806020018281038252602881526020018061332c6028913960400191505060405180910390fd5b60006124be856103e563ffffffff612ff416565b905060006124d2828563ffffffff612ff416565b905060006124f8836124ec886103e863ffffffff612ff416565b9063ffffffff61305716565b905080828161250357fe5b04979650505050505050565b6060600282511015612568576040805162461bcd60e51b815260206004820152601e60248201527f556e697377617056324c6962726172793a20494e56414c49445f504154480000604482015290519081900360640190fd5b815167ffffffffffffffff8111801561258057600080fd5b506040519080825280602002602001820160405280156125aa578160200160208202803683370190505b50905082816000815181106125bb57fe5b60200260200101818152505060005b60018351038110156126535760008061260d878685815181106125e957fe5b602002602001015187866001018151811061260057fe5b60200260200101516130a6565b9150915061262f84848151811061262057fe5b6020026020010151838361241f565b84846001018151811061263e57fe5b602090810291909101015250506001016125ca565b509392505050565b600080600061266a8585612ca2565b604080516bffffffffffffffffffffffff19606094851b811660208084019190915293851b81166034830152825160288184030181526048830184528051908501206001600160f81b031960688401529a90941b9093166069840152607d8301989098527f96e8ac4277198ff8b6f785478aa9a39f403cb768dd02cbee326c3e7da348845f609d808401919091528851808403909101815260bd909201909752805196019590952095945050505050565b604080516001600160a01b0385811660248301528481166044830152606480830185905283518084039091018152608490920183526020820180516001600160e01b03166323b872dd60e01b17815292518251600094606094938a169392918291908083835b602083106127a05780518252601f199092019160209182019101612781565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d8060008114612802576040519150601f19603f3d011682016040523d82523d6000602084013e612807565b606091505b5091509150818015612835575080511580612835575080806020019051602081101561283257600080fd5b50515b6128705760405162461bcd60e51b81526004018080602001828103825260248152602001806134346024913960400191505060405180910390fd5b505050505050565b60005b6001835103811015612ab85760008084838151811061289657fe5b60200260200101518584600101815181106128ad57fe5b60200260200101519150915060006128c58383612ca2565b50905060008785600101815181106128d957fe5b60200260200101519050600080836001600160a01b0316866001600160a01b0316146129075782600061290b565b6000835b91509150600060028a510388106129225788612963565b6129637f0000000000000000000000000000000000000000000000000000000000000000878c8b6002018151811061295657fe5b602002602001015161265b565b90506129907f0000000000000000000000000000000000000000000000000000000000000000888861265b565b6001600160a01b031663022c0d9f84848460006040519080825280601f01601f1916602001820160405280156129cd576020820181803683370190505b506040518563ffffffff1660e01b815260040180858152602001848152602001836001600160a01b03166001600160a01b0316815260200180602001828103825283818151815260200191508051906020019080838360005b83811015612a3e578181015183820152602001612a26565b50505050905090810190601f168015612a6b5780820380516001836020036101000a031916815260200191505b5095505050505050600060405180830381600087803b158015612a8d57600080fd5b505af1158015612aa1573d6000803e3d6000fd5b50506001909901985061287b975050505050505050565b50505050565b6060600282511015612b17576040805162461bcd60e51b815260206004820152601e60248201527f556e697377617056324c6962726172793a20494e56414c49445f504154480000604482015290519081900360640190fd5b815167ffffffffffffffff81118015612b2f57600080fd5b50604051908082528060200260200182016040528015612b59578160200160208202803683370190505b5090508281600183510381518110612b6d57fe5b60209081029190910101528151600019015b801561265357600080612baf87866001860381518110612b9b57fe5b602002602001015187868151811061260057fe5b91509150612bd1848481518110612bc257fe5b60200260200101518383613174565b846001850381518110612be057fe5b6020908102919091010152505060001901612b7f565b6000808411612c365760405162461bcd60e51b81526004018080602001828103825260258152602001806133546025913960400191505060405180910390fd5b600083118015612c465750600082115b612c815760405162461bcd60e51b815260040180806020018281038252602881526020018061332c6028913960400191505060405180910390fd5b82612c92858463ffffffff612ff416565b81612c9957fe5b04949350505050565b600080826001600160a01b0316846001600160a01b03161415612cf65760405162461bcd60e51b81526004018080602001828103825260258152602001806132e16025913960400191505060405180910390fd5b826001600160a01b0316846001600160a01b031610612d16578284612d19565b83835b90925090506001600160a01b038216612d79576040805162461bcd60e51b815260206004820152601e60248201527f556e697377617056324c6962726172793a205a45524f5f414444524553530000604482015290519081900360640190fd5b9250929050565b6040805163e6a4390560e01b81526001600160a01b03888116600483015287811660248301529151600092839283927f00000000000000000000000000000000000000000000000000000000000000009092169163e6a4390591604480820192602092909190829003018186803b158015612dfa57600080fd5b505afa158015612e0e573d6000803e3d6000fd5b505050506040513d6020811015612e2457600080fd5b50516001600160a01b03161415612ed757604080516364e329cb60e11b81526001600160a01b038a81166004830152898116602483015291517f00000000000000000000000000000000000000000000000000000000000000009092169163c9c65396916044808201926020929091908290030181600087803b158015612eaa57600080fd5b505af1158015612ebe573d6000803e3d6000fd5b505050506040513d6020811015612ed457600080fd5b50505b600080612f057f00000000000000000000000000000000000000000000000000000000000000008b8b6130a6565b91509150816000148015612f17575080155b15612f2757879350869250612fe7565b6000612f34898484612bf6565b9050878111612f875785811015612f7c5760405162461bcd60e51b81526004018080602001828103825260268152602001806133066026913960400191505060405180910390fd5b889450925082612fe5565b6000612f94898486612bf6565b905089811115612fa057fe5b87811015612fdf5760405162461bcd60e51b81526004018080602001828103825260268152602001806133c06026913960400191505060405180910390fd5b94508793505b505b5050965096945050505050565b600081158061300f5750508082028282828161300c57fe5b04145b610e40576040805162461bcd60e51b815260206004820152601460248201527364732d6d6174682d6d756c2d6f766572666c6f7760601b604482015290519081900360640190fd5b80820182811015610e40576040805162461bcd60e51b815260206004820152601460248201527364732d6d6174682d6164642d6f766572666c6f7760601b604482015290519081900360640190fd5b60008060006130b58585612ca2565b5090506000806130c688888861265b565b6001600160a01b0316630902f1ac6040518163ffffffff1660e01b815260040160606040518083038186803b1580156130fe57600080fd5b505afa158015613112573d6000803e3d6000fd5b505050506040513d606081101561312857600080fd5b5080516020909101516dffffffffffffffffffffffffffff91821693501690506001600160a01b0387811690841614613162578082613165565b81815b90999098509650505050505050565b60008084116131b45760405162461bcd60e51b815260040180806020018281038252602c8152602001806132b5602c913960400191505060405180910390fd5b6000831180156131c45750600082115b6131ff5760405162461bcd60e51b815260040180806020018281038252602881526020018061332c6028913960400191505060405180910390fd5b60006132236103e8613217868863ffffffff612ff416565b9063ffffffff612ff416565b9050600061323d6103e5613217868963ffffffff61326416565b905061325a600182848161324d57fe5b049063ffffffff61305716565b9695505050505050565b80820382811115610e40576040805162461bcd60e51b815260206004820152601560248201527464732d6d6174682d7375622d756e646572666c6f7760581b604482015290519081900360640190fdfe556e697377617056324c6962726172793a20494e53554646494349454e545f4f55545055545f414d4f554e54556e697377617056324c6962726172793a204944454e544943414c5f414444524553534553556e69737761705632526f757465723a20494e53554646494349454e545f425f414d4f554e54556e697377617056324c6962726172793a20494e53554646494349454e545f4c4951554944495459556e697377617056324c6962726172793a20494e53554646494349454e545f414d4f554e54556e69737761705632526f757465723a204558434553534956455f494e5055545f414d4f554e54556e69737761705632526f757465723a20494e56414c49445f50415448000000556e69737761705632526f757465723a20494e53554646494349454e545f415f414d4f554e545472616e7366657248656c7065723a204554485f5452414e534645525f4641494c4544556e69737761705632526f757465723a20494e53554646494349454e545f4f55545055545f414d4f554e545472616e7366657248656c7065723a205452414e534645525f46524f4d5f4641494c4544556e697377617056324c6962726172793a20494e53554646494349454e545f494e5055545f414d4f554e54556e69737761705632526f757465723a20455850495245440000000000000000a2646970667358221220ea4d1062eab8d02f8c4285232f372b51e59af54f5fa83207a3c79e2f2465c83664736f6c63430006060033\";\n","/* Autogenerated file. Do not edit manually. */\n/* tslint:disable */\n/* eslint-disable */\n\nimport { Signer } from \"ethers\";\nimport { Provider, TransactionRequest } from \"@ethersproject/providers\";\nimport { Contract, ContractFactory, Overrides } from \"@ethersproject/contracts\";\n\nimport type { Exerciser } from \"./Exerciser\";\n\nexport class ExerciserFactory extends ContractFactory {\n  constructor(signer?: Signer) {\n    super(_abi, _bytecode, signer);\n  }\n\n  deploy(manager: string, overrides?: Overrides): Promise<Exerciser> {\n    return super.deploy(manager, overrides || {}) as Promise<Exerciser>;\n  }\n  getDeployTransaction(\n    manager: string,\n    overrides?: Overrides\n  ): TransactionRequest {\n    return super.getDeployTransaction(manager, overrides || {});\n  }\n  attach(address: string): Exerciser {\n    return super.attach(address) as Exerciser;\n  }\n  connect(signer: Signer): ExerciserFactory {\n    return super.connect(signer) as ExerciserFactory;\n  }\n  static connect(\n    address: string,\n    signerOrProvider: Signer | Provider\n  ): Exerciser {\n    return new Contract(address, _abi, signerOrProvider) as Exerciser;\n  }\n}\n\nconst _abi = [\n  {\n    inputs: [\n      {\n        internalType: \"contract IOptionsManager\",\n        name: \"manager\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"constructor\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"optionId\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"exercise\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n];\n\nconst _bytecode =\n  \"0x60a060405234801561001057600080fd5b506040516103ec3803806103ec83398101604081905261002f91610044565b60601b6001600160601b031916608052610072565b600060208284031215610055578081fd5b81516001600160a01b038116811461006b578182fd5b9392505050565b60805160601c61035d61008f6000396000605e015261035d6000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063b07f0a4114610030575b600080fd5b61004361003e3660046102ec565b610045565b005b60405163c40c11bb60e01b8152600481018290526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063c40c11bb90602401602060405180830381600087803b1580156100aa57600080fd5b505af11580156100be573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906100e2919061025f565b60405163409e220560e01b8152600481018490529091506000906001600160a01b0383169063409e22059060240160e06040518083038186803b15801561012857600080fd5b505afa15801561013c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610160919061028d565b5050945050505050610708816101769190610304565b42116102005760405162461bcd60e51b815260206004820152604960248201527f466163616465204572726f723a204175746f6d61746963616c6c79206578657260448201527f6369736520666f722074686973206f7074696f6e206973206e6f7420617661696064820152681b18589b19481e595d60ba1b608482015260a40160405180910390fd5b60405163b07f0a4160e01b8152600481018490526001600160a01b0383169063b07f0a4190602401600060405180830381600087803b15801561024257600080fd5b505af1158015610256573d6000803e3d6000fd5b50505050505050565b600060208284031215610270578081fd5b81516001600160a01b0381168114610286578182fd5b9392505050565b600080600080600080600060e0888a0312156102a7578283fd5b8751600481106102b5578384fd5b602089015160408a015160608b015160808c015160a08d015160c0909d0151949e939d50919b909a50909850965090945092505050565b6000602082840312156102fd578081fd5b5035919050565b60008282101561032257634e487b7160e01b81526011600452602481fd5b50039056fea2646970667358221220ca81ea6d1e06c708d17fe05812938230afec8e0265103c90db628c888b67635164736f6c63430008040033\";\n","/* Autogenerated file. Do not edit manually. */\n/* tslint:disable */\n/* eslint-disable */\n\nimport { Signer } from \"ethers\";\nimport { Provider, TransactionRequest } from \"@ethersproject/providers\";\nimport { Contract, ContractFactory, Overrides } from \"@ethersproject/contracts\";\n\nimport type { Facade } from \"./Facade\";\n\nexport class FacadeFactory extends ContractFactory {\n  constructor(signer?: Signer) {\n    super(_abi, _bytecode, signer);\n  }\n\n  deploy(\n    weth: string,\n    router: string,\n    manager: string,\n    overrides?: Overrides\n  ): Promise<Facade> {\n    return super.deploy(\n      weth,\n      router,\n      manager,\n      overrides || {}\n    ) as Promise<Facade>;\n  }\n  getDeployTransaction(\n    weth: string,\n    router: string,\n    manager: string,\n    overrides?: Overrides\n  ): TransactionRequest {\n    return super.getDeployTransaction(weth, router, manager, overrides || {});\n  }\n  attach(address: string): Facade {\n    return super.attach(address) as Facade;\n  }\n  connect(signer: Signer): FacadeFactory {\n    return super.connect(signer) as FacadeFactory;\n  }\n  static connect(address: string, signerOrProvider: Signer | Provider): Facade {\n    return new Contract(address, _abi, signerOrProvider) as Facade;\n  }\n}\n\nconst _abi = [\n  {\n    inputs: [\n      {\n        internalType: \"contract IWETH\",\n        name: \"weth\",\n        type: \"address\",\n      },\n      {\n        internalType: \"contract IUniswapV2Router01\",\n        name: \"router\",\n        type: \"address\",\n      },\n      {\n        internalType: \"contract IOptionsManager\",\n        name: \"manager\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"constructor\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"previousOwner\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"newOwner\",\n        type: \"address\",\n      },\n    ],\n    name: \"OwnershipTransferred\",\n    type: \"event\",\n  },\n  {\n    inputs: [],\n    name: \"WETH\",\n    outputs: [\n      {\n        internalType: \"contract IWETH\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"contract IHegicPool\",\n        name: \"pool\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"period\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amount\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"strike\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"address[]\",\n        name: \"swappath\",\n        type: \"address[]\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"acceptablePrice\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"createOption\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"exchange\",\n    outputs: [\n      {\n        internalType: \"contract IUniswapV2Router01\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"optionId\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"exercise\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"contract IHegicPool\",\n        name: \"pool\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"period\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amount\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"strike\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"getBaseOptionCost\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"total\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"settlementFee\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"premium\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"contract IHegicPool\",\n        name: \"pool\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"period\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amount\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"strike\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"address[]\",\n        name: \"swappath\",\n        type: \"address[]\",\n      },\n    ],\n    name: \"getOptionPrice\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"total\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"baseTotal\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"settlementFee\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"premium\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"optionsManager\",\n    outputs: [\n      {\n        internalType: \"contract IOptionsManager\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"owner\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"contract IHegicPool\",\n        name: \"pool\",\n        type: \"address\",\n      },\n    ],\n    name: \"poolApprove\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"contract IHegicPool\",\n        name: \"pool\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"minShare\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"provideEthToPool\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"payable\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"renounceOwnership\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"newOwner\",\n        type: \"address\",\n      },\n    ],\n    name: \"transferOwnership\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"contract IHegicPool\",\n        name: \"pool\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256[]\",\n        name: \"optionIDs\",\n        type: \"uint256[]\",\n      },\n    ],\n    name: \"unlockAll\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"versionRecipient\",\n    outputs: [\n      {\n        internalType: \"string\",\n        name: \"\",\n        type: \"string\",\n      },\n    ],\n    stateMutability: \"pure\",\n    type: \"function\",\n  },\n];\n\nconst _bytecode =\n  \"0x60e06040523480156200001157600080fd5b5060405162001a9e38038062001a9e8339810160408190526200003491620000b7565b6200003f3362000067565b6001600160601b0319606093841b811660805291831b821660a05290911b1660c05262000123565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600080600060608486031215620000cc578283fd5b8351620000d9816200010a565b6020850151909350620000ec816200010a565b6040850151909250620000ff816200010a565b809150509250925092565b6001600160a01b03811681146200012057600080fd5b50565b60805160601c60a05160601c60c05160601c6118fc620001a260003960008181610116015281816106b001526107dc0152600081816102c301528181610a7501528181610b0f01528181610b4401528181610b820152610cf50152600081816101ef015281816103f001528181610487015261053001526118fc6000f3fe6080604052600436106100dd5760003560e01c8063b07f0a411161007f578063c541351911610059578063c541351914610271578063d2f7265a146102b1578063e5bbade6146102e5578063f2fde38b1461032057600080fd5b8063b07f0a4114610211578063be6a221a14610231578063c0485cf61461025157600080fd5b806368abd0c8116100bb57806368abd0c814610189578063715018a6146101aa5780638da5cb5b146101bf578063ad5c4648146101dd57600080fd5b80631dcda34a146100e2578063399735bf14610104578063486ff0cd14610155575b600080fd5b3480156100ee57600080fd5b506101026100fd3660046114f9565b610340565b005b34801561011057600080fd5b506101387f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020015b60405180910390f35b34801561016157600080fd5b506040805180820182526005815264191719171960d91b6020820152905161014c9190611753565b61019c61019736600461154c565b6103ec565b60405190815260200161014c565b3480156101b657600080fd5b5061010261063b565b3480156101cb57600080fd5b506000546001600160a01b0316610138565b3480156101e957600080fd5b506101387f000000000000000000000000000000000000000000000000000000000000000081565b34801561021d57600080fd5b5061010261022c36600461169c565b6106a6565b34801561023d57600080fd5b5061010261024c3660046113e1565b6108bb565b34801561025d57600080fd5b5061010261026c366004611622565b610985565b34801561027d57600080fd5b5061029161028c3660046115b1565b610cb7565b60408051948552602085019390935291830152606082015260800161014c565b3480156102bd57600080fd5b506101387f000000000000000000000000000000000000000000000000000000000000000081565b3480156102f157600080fd5b50610305610300366004611577565b610df8565b6040805193845260208401929092529082015260600161014c565b34801561032c57600080fd5b5061010261033b3660046113e1565b610e9f565b8060005b818110156103e557846001600160a01b0316636198e33985858481811061037b57634e487b7160e01b600052603260045260246000fd5b905060200201356040518263ffffffff1660e01b81526004016103a091815260200190565b600060405180830381600087803b1580156103ba57600080fd5b505af11580156103ce573d6000803e3d6000fd5b5050505080806103dd9061186a565b915050610344565b5050505050565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663d0e30db0346040518263ffffffff1660e01b81526004016000604051808303818588803b15801561044957600080fd5b505af115801561045d573d6000803e3d6000fd5b5050604051636eb1769f60e11b81523060048201526001600160a01b0387811660248301523494507f000000000000000000000000000000000000000000000000000000000000000016925063dd62ed3e915060440160206040518083038186803b1580156104cb57600080fd5b505afa1580156104df573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061050391906116b4565b10156105ae5760405163095ea7b360e01b81526001600160a01b03848116600483015260001960248301527f0000000000000000000000000000000000000000000000000000000000000000169063095ea7b390604401602060405180830381600087803b15801561057457600080fd5b505af1158015610588573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105ac91906114d9565b505b6040516313bdde8b60e01b8152336004820152346024820152604481018390526001600160a01b038416906313bdde8b90606401602060405180830381600087803b1580156105fc57600080fd5b505af1158015610610573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061063491906116b4565b9392505050565b6000546001600160a01b0316331461069a5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064015b60405180910390fd5b6106a46000610f63565b565b6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001663430c2081336040516001600160e01b031960e084901b1681526001600160a01b0390911660048201526024810184905260440160206040518083038186803b15801561071c57600080fd5b505afa158015610730573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061075491906114d9565b6107c65760405162461bcd60e51b815260206004820152603f60248201527f466163616465204572726f723a205f6d736753656e646572206973206e6f742060448201527f656c696769626c6520746f20657865726369736520746865206f7074696f6e006064820152608401610691565b60405163c40c11bb60e01b8152600481018290527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063c40c11bb90602401602060405180830381600087803b15801561082857600080fd5b505af115801561083c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061086091906113fd565b6001600160a01b031663b07f0a41826040518263ffffffff1660e01b815260040161088d91815260200190565b600060405180830381600087803b1580156108a757600080fd5b505af11580156103e5573d6000803e3d6000fd5b610942816000836001600160a01b031663fc0c546a6040518163ffffffff1660e01b815260040160206040518083038186803b1580156108fa57600080fd5b505afa15801561090e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061093291906113fd565b6001600160a01b03169190610fb3565b61098281600019836001600160a01b031663fc0c546a6040518163ffffffff1660e01b815260040160206040518083038186803b1580156108fa57600080fd5b50565b336000806109978a8a8a8a8a8a610cb7565b50509150915083821115610a005760405162461bcd60e51b815260206004820152602a60248201527f466163616465204572726f723a20546865206f7074696f6e20707269636520696044820152690e640e8dede40d0d2ced60b31b6064820152608401610691565b600086866000818110610a2357634e487b7160e01b600052603260045260246000fd5b9050602002016020810190610a3891906113e1565b9050610a4f6001600160a01b03821685308661110f565b6001861115610c1957604051636eb1769f60e11b81523060048201526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000008116602483015284919083169063dd62ed3e9060440160206040518083038186803b158015610ac257600080fd5b505afa158015610ad6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610afa91906116b4565b1015610b6b57610b356001600160a01b0382167f00000000000000000000000000000000000000000000000000000000000000006000610fb3565b610b6b6001600160a01b0382167f0000000000000000000000000000000000000000000000000000000000000000600019610fb3565b604051634401edf760e11b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690638803dbee90610bc190859087908c908c90309042906004016117a9565b600060405180830381600087803b158015610bdb57600080fd5b505af1158015610bef573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610c179190810190611419565b505b604051630198d20360e51b81526001600160a01b038581166004830152602482018c9052604482018b9052606482018a90528c169063331a406090608401602060405180830381600087803b158015610c7157600080fd5b505af1158015610c85573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ca991906116b4565b505050505050505050505050565b6000806000806000806000610cce8d8d8d8d610df8565b919450925090506001881115610db1576040516307c0329d60e21b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690631f00ca7490610d2e9086908d908d90600401611786565b60006040518083038186803b158015610d4657600080fd5b505afa158015610d5a573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610d829190810190611419565b600081518110610da257634e487b7160e01b600052603260045260246000fd5b60200260200101519650610db5565b8296505b829550858288610dc5919061181f565b610dcf91906117ff565b945085610ddc828961181f565b610de691906117ff565b93505050509650965096509692505050565b60405163d07a1c5760e01b8152600481018490526024810183905260448101829052600090819081906001600160a01b0388169063d07a1c5790606401604080518083038186803b158015610e4c57600080fd5b505afa158015610e60573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e8491906116cc565b9092509050610e9382826117e7565b92509450945094915050565b6000546001600160a01b03163314610ef95760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610691565b6001600160a01b038116610f5e5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610691565b610982815b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80158061103c5750604051636eb1769f60e11b81523060048201526001600160a01b03838116602483015284169063dd62ed3e9060440160206040518083038186803b15801561100257600080fd5b505afa158015611016573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061103a91906116b4565b155b6110a75760405162461bcd60e51b815260206004820152603660248201527f5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f60448201527520746f206e6f6e2d7a65726f20616c6c6f77616e636560501b6064820152608401610691565b6040516001600160a01b03831660248201526044810182905261110a90849063095ea7b360e01b906064015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b03199093169290921790915261114d565b505050565b6040516001600160a01b03808516602483015283166044820152606481018290526111479085906323b872dd60e01b906084016110d3565b50505050565b60006111a2826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b031661121f9092919063ffffffff16565b80519091501561110a57808060200190518101906111c091906114d9565b61110a5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610691565b606061122e8484600085611236565b949350505050565b6060824710156112975760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401610691565b843b6112e55760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610691565b600080866001600160a01b031685876040516113019190611737565b60006040518083038185875af1925050503d806000811461133e576040519150601f19603f3d011682016040523d82523d6000602084013e611343565b606091505b509150915061135382828661135e565b979650505050505050565b6060831561136d575081610634565b82511561137d5782518084602001fd5b8160405162461bcd60e51b81526004016106919190611753565b60008083601f8401126113a8578081fd5b50813567ffffffffffffffff8111156113bf578182fd5b6020830191508360208260051b85010111156113da57600080fd5b9250929050565b6000602082840312156113f2578081fd5b8135610634816118b1565b60006020828403121561140e578081fd5b8151610634816118b1565b6000602080838503121561142b578182fd5b825167ffffffffffffffff80821115611442578384fd5b818501915085601f830112611455578384fd5b8151818111156114675761146761189b565b8060051b604051601f19603f8301168101818110858211171561148c5761148c61189b565b604052828152858101935084860182860187018a10156114aa578788fd5b8795505b838610156114cc5780518552600195909501949386019386016114ae565b5098975050505050505050565b6000602082840312156114ea578081fd5b81518015158114610634578182fd5b60008060006040848603121561150d578182fd5b8335611518816118b1565b9250602084013567ffffffffffffffff811115611533578283fd5b61153f86828701611397565b9497909650939450505050565b6000806040838503121561155e578182fd5b8235611569816118b1565b946020939093013593505050565b6000806000806080858703121561158c578081fd5b8435611597816118b1565b966020860135965060408601359560600135945092505050565b60008060008060008060a087890312156115c9578182fd5b86356115d4816118b1565b9550602087013594506040870135935060608701359250608087013567ffffffffffffffff811115611604578283fd5b61161089828a01611397565b979a9699509497509295939492505050565b600080600080600080600060c0888a03121561163c578081fd5b8735611647816118b1565b9650602088013595506040880135945060608801359350608088013567ffffffffffffffff811115611677578182fd5b6116838a828b01611397565b989b979a5095989497959660a090950135949350505050565b6000602082840312156116ad578081fd5b5035919050565b6000602082840312156116c5578081fd5b5051919050565b600080604083850312156116de578182fd5b505080516020909101519092909150565b81835260006020808501945082825b8581101561172c578135611711816118b1565b6001600160a01b0316875295820195908201906001016116fe565b509495945050505050565b6000825161174981846020870161183e565b9190910192915050565b602081526000825180602084015261177281604085016020870161183e565b601f01601f19169190910160400192915050565b8381526040602082015260006117a06040830184866116ef565b95945050505050565b86815285602082015260a0604082015260006117c960a0830186886116ef565b6001600160a01b039490941660608301525060800152949350505050565b600082198211156117fa576117fa611885565b500190565b60008261181a57634e487b7160e01b81526012600452602481fd5b500490565b600081600019048311821515161561183957611839611885565b500290565b60005b83811015611859578181015183820152602001611841565b838111156111475750506000910152565b600060001982141561187e5761187e611885565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b038116811461098257600080fdfea26469706673582212206b57ffc4c016ef5546f7be4ed1ec2f4f16832b569cd4c4b49beb3f4af81433fe64736f6c63430008040033\";\n","/* Autogenerated file. Do not edit manually. */\n/* tslint:disable */\n/* eslint-disable */\n\nimport { Signer } from \"ethers\";\nimport { Provider, TransactionRequest } from \"@ethersproject/providers\";\nimport { Contract, ContractFactory, Overrides } from \"@ethersproject/contracts\";\n\nimport type { UiProvider } from \"./UiProvider\";\n\nexport class UiProviderFactory extends ContractFactory {\n  constructor(signer?: Signer) {\n    super(_abi, _bytecode, signer);\n  }\n\n  deploy(\n    _optionsManager: string,\n    _stableCoin: string,\n    overrides?: Overrides\n  ): Promise<UiProvider> {\n    return super.deploy(\n      _optionsManager,\n      _stableCoin,\n      overrides || {}\n    ) as Promise<UiProvider>;\n  }\n  getDeployTransaction(\n    _optionsManager: string,\n    _stableCoin: string,\n    overrides?: Overrides\n  ): TransactionRequest {\n    return super.getDeployTransaction(\n      _optionsManager,\n      _stableCoin,\n      overrides || {}\n    );\n  }\n  attach(address: string): UiProvider {\n    return super.attach(address) as UiProvider;\n  }\n  connect(signer: Signer): UiProviderFactory {\n    return super.connect(signer) as UiProviderFactory;\n  }\n  static connect(\n    address: string,\n    signerOrProvider: Signer | Provider\n  ): UiProvider {\n    return new Contract(address, _abi, signerOrProvider) as UiProvider;\n  }\n}\n\nconst _abi = [\n  {\n    inputs: [\n      {\n        internalType: \"contract OptionsManager\",\n        name: \"_optionsManager\",\n        type: \"address\",\n      },\n      {\n        internalType: \"contract ERC20\",\n        name: \"_stableCoin\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"constructor\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"contract HegicPool\",\n        name: \"pool\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"user\",\n        type: \"address\",\n      },\n    ],\n    name: \"buyViewData\",\n    outputs: [\n      {\n        components: [\n          {\n            internalType: \"uint256\",\n            name: \"currentPrice\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"availableBalance\",\n            type: \"uint256\",\n          },\n        ],\n        internalType: \"struct BuyViewData\",\n        name: \"out\",\n        type: \"tuple\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"user\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"optionsPage\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"optionsViewData\",\n    outputs: [\n      {\n        components: [\n          {\n            internalType: \"int256\",\n            name: \"totalPNL\",\n            type: \"int256\",\n          },\n          {\n            components: [\n              {\n                internalType: \"bool\",\n                name: \"isCall\",\n                type: \"bool\",\n              },\n              {\n                internalType: \"enum IHegicPool.OptionState\",\n                name: \"state\",\n                type: \"uint8\",\n              },\n              {\n                internalType: \"uint256\",\n                name: \"optionId\",\n                type: \"uint256\",\n              },\n              {\n                internalType: \"address\",\n                name: \"asset\",\n                type: \"address\",\n              },\n              {\n                internalType: \"uint256\",\n                name: \"strike\",\n                type: \"uint256\",\n              },\n              {\n                internalType: \"uint256\",\n                name: \"amount\",\n                type: \"uint256\",\n              },\n              {\n                internalType: \"uint256\",\n                name: \"expiry\",\n                type: \"uint256\",\n              },\n              {\n                internalType: \"uint256\",\n                name: \"premium\",\n                type: \"uint256\",\n              },\n              {\n                internalType: \"int256\",\n                name: \"pnl\",\n                type: \"int256\",\n              },\n            ],\n            internalType: \"struct OptionViewData[]\",\n            name: \"optionPageEntries\",\n            type: \"tuple[]\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"totalEntries\",\n            type: \"uint256\",\n          },\n        ],\n        internalType: \"struct OptionsHoldingsView\",\n        name: \"out\",\n        type: \"tuple\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"user\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"pool\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"optionsPage\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"tranchesViewData\",\n    outputs: [\n      {\n        components: [\n          {\n            internalType: \"int256\",\n            name: \"totalPNL\",\n            type: \"int256\",\n          },\n          {\n            components: [\n              {\n                internalType: \"enum IHegicPool.TrancheState\",\n                name: \"state\",\n                type: \"uint8\",\n              },\n              {\n                internalType: \"uint256\",\n                name: \"share\",\n                type: \"uint256\",\n              },\n              {\n                internalType: \"uint256\",\n                name: \"amount\",\n                type: \"uint256\",\n              },\n              {\n                internalType: \"uint256\",\n                name: \"creationTimestamp\",\n                type: \"uint256\",\n              },\n              {\n                internalType: \"uint256\",\n                name: \"trancheId\",\n                type: \"uint256\",\n              },\n              {\n                internalType: \"int256\",\n                name: \"pnl\",\n                type: \"int256\",\n              },\n              {\n                internalType: \"address\",\n                name: \"asset\",\n                type: \"address\",\n              },\n            ],\n            internalType: \"struct TrancheViewData[]\",\n            name: \"tranchesPageEntries\",\n            type: \"tuple[]\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"totalEntries\",\n            type: \"uint256\",\n          },\n        ],\n        internalType: \"struct TranchesHoldingsView\",\n        name: \"out\",\n        type: \"tuple\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n];\n\nconst _bytecode =\n  \"0x608060405234801561001057600080fd5b506040516112ad3803806112ad83398101604081905261002f91610063565b600180546001600160a01b039283166001600160a01b031991821617909155600080549390921692169190911790556100b4565b60008060408385031215610075578182fd5b82516100808161009c565b60208401519092506100918161009c565b809150509250929050565b6001600160a01b03811681146100b157600080fd5b50565b6111ea806100c36000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c8063046a0f711461004657806340e0d9311461007957806371ff681d14610099575b600080fd5b610059610054366004610db8565b6100b9565b604080518251815260209283015192810192909252015b60405180910390f35b61008c610087366004610d6d565b610242565b6040516100709190610ef7565b6100ac6100a7366004610d2d565b610870565b6040516100709190610fc4565b60408051808201909152600080825260208201526000836001600160a01b031663b888879e6040518163ffffffff1660e01b815260040160206040518083038186803b15801561010857600080fd5b505afa15801561011c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101409190610d0a565b6001600160a01b031663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561017857600080fd5b505afa15801561018c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101b09190610ea8565b5050508084526001546040516370a0823160e01b81526001600160a01b038781166004830152929450911691506370a082319060240160206040518083038186803b1580156101fe57600080fd5b505afa158015610212573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102369190610e90565b60208301525092915050565b61026660405180606001604052806000815260200160608152602001600081525090565b60408051600580825260c08201909252600091816020015b6102d76040805161012081019091526000808252602082019081526020016000815260200160006001600160a01b0316815260200160008152602001600081526020016000815260200160008152602001600081525090565b81526020019060019003908161027e579050506000546040516370a0823160e01b81526001600160a01b0387811660048301529293509116906370a082319060240160206040518083038186803b15801561033157600080fd5b505afa158015610345573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103699190610e90565b604083015260005b600581101561086457604083015161038985836110a5565b1061039357610864565b600080546001600160a01b0316632f745c59876103b088866110a5565b6040516001600160e01b031960e085901b1681526001600160a01b039092166004830152602482015260440160206040518083038186803b1580156103f457600080fd5b505afa158015610408573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061042c9190610e90565b6000805460405163c40c11bb60e01b81526004810184905292935090916001600160a01b039091169063c40c11bb9060240160206040518083038186803b15801561047657600080fd5b505afa15801561048a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104ae9190610d0a565b9050600080600080600080866001600160a01b031663409e2205896040518263ffffffff1660e01b81526004016104e791815260200190565b60e06040518083038186803b1580156104ff57600080fd5b505afa158015610513573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105379190610df0565b9650965096505095509550955060006001600381111561056757634e487b7160e01b600052602160045260246000fd5b87600381111561058757634e487b7160e01b600052602160045260246000fd5b14156106a157604051637632bffb60e01b8152600481018a90526000906001600160a01b038a1690637632bffb9060240160206040518083038186803b1580156105d057600080fd5b505afa1580156105e4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106089190610e90565b9050801561068f5760405163b9186d7d60e01b8152600481018290526001600160a01b038a169063b9186d7d9060240160206040518083038186803b15801561065057600080fd5b505afa158015610664573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106889190610e90565b915061069b565b61069884611156565b91505b506106ba565b81156106ae5750806106ba565b6106b783611156565b90505b808c6000018181516106cc9190611064565b91508181525050604051806101200160405280896001600160a01b0316636d6364786040518163ffffffff1660e01b815260040160206040518083038186803b15801561071857600080fd5b505afa15801561072c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107509190610d98565b1515815260200188600381111561077757634e487b7160e01b600052602160045260246000fd5b81526020018a8152602001896001600160a01b0316636d8cb5296040518163ffffffff1660e01b815260040160206040518083038186803b1580156107bb57600080fd5b505afa1580156107cf573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107f39190610d0a565b6001600160a01b03168152602001878152602001868152602001858152602001848152602001828152508b8b8151811061083d57634e487b7160e01b600052603260045260246000fd5b6020026020010181905250505050505050505050808061085c9061113b565b915050610371565b50602082015292915050565b61089460405180606001604052806000815260200160608152602001600081525090565b60408051600580825260c08201909252849160009190816020015b6108f96040805160e081019091528060008152602001600081526020016000815260200160008152602001600081526020016000815260200160006001600160a01b031681525090565b8152602001906001900390816108af579050506040516370a0823160e01b81526001600160a01b038881166004830152919250908316906370a082319060240160206040518083038186803b15801561095157600080fd5b505afa158015610965573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109899190610e90565b604084015260005b6005811015610cdd5760408401516109a986836110a5565b106109b357610cdd565b604051632f745c5960e01b81526001600160a01b0388811660048301526024820183905260009190851690632f745c599060440160206040518083038186803b1580156109ff57600080fd5b505afa158015610a13573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a379190610e90565b9050600080600080876001600160a01b03166326c25962866040518263ffffffff1660e01b8152600401610a6d91815260200190565b60806040518083038186803b158015610a8557600080fd5b505afa158015610a99573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610abd9190610e4f565b93509350935093506000886001600160a01b031663ce8ff5a46040518163ffffffff1660e01b815260040160206040518083038186803b158015610b0057600080fd5b505afa158015610b14573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b389190610e90565b896001600160a01b031663feed23426040518163ffffffff1660e01b815260040160206040518083038186803b158015610b7157600080fd5b505afa158015610b85573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ba99190610e90565b610bb390866110dd565b610bbd91906110bd565b90506000610bcb84836110fc565b90506040518060e00160405280876002811115610bf857634e487b7160e01b600052602160045260246000fd5b81526020018681526020018581526020018481526020018881526020018281526020018b6001600160a01b031663fc0c546a6040518163ffffffff1660e01b815260040160206040518083038186803b158015610c5457600080fd5b505afa158015610c68573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c8c9190610d0a565b6001600160a01b0316815250898981518110610cb857634e487b7160e01b600052603260045260246000fd5b6020026020010181905250505050505050508080610cd59061113b565b915050610991565b506020830152509392505050565b805169ffffffffffffffffffff81168114610d0557600080fd5b919050565b600060208284031215610d1b578081fd5b8151610d268161119c565b9392505050565b600080600060608486031215610d41578182fd5b8335610d4c8161119c565b92506020840135610d5c8161119c565b929592945050506040919091013590565b60008060408385031215610d7f578182fd5b8235610d8a8161119c565b946020939093013593505050565b600060208284031215610da9578081fd5b81518015158114610d26578182fd5b60008060408385031215610dca578182fd5b8235610dd58161119c565b91506020830135610de58161119c565b809150509250929050565b600080600080600080600060e0888a031215610e0a578283fd5b875160048110610e18578384fd5b602089015160408a015160608b015160808c015160a08d015160c0909d0151949e939d50919b909a50909850965090945092505050565b60008060008060808587031215610e64578384fd5b845160038110610e72578485fd5b60208601516040870151606090970151919890975090945092505050565b600060208284031215610ea1578081fd5b5051919050565b600080600080600060a08688031215610ebf578081fd5b610ec886610ceb565b9450602086015193506040860151925060608601519150610eeb60808701610ceb565b90509295509295909350565b6000602080835260808084018551838601528286015160606040818189015283835180865260a09550858a0191508785019450885b81811015610faf5785518051151584528981015160048110610f5057610f50611186565b848b01528085015185850152858101516001600160a01b0316868501528881015189850152878101518885015260c0808201519085015260e0808201519085015261010090810151908401529488019461012090920191600101610f2c565b50509801519601959095525093949350505050565b6000602080835260808084018551838601528286015160606040818189015283835180865260a09550858a0191508785019450885b81811015610faf57855180516003811061101557611015611186565b8452808a01518a850152848101518585015285810151868501528881015189850152878101518885015260c0908101516001600160a01b0316908401529488019460e090920191600101610ff9565b600080821280156001600160ff1b038490038513161561108657611086611170565b600160ff1b839003841281161561109f5761109f611170565b50500190565b600082198211156110b8576110b8611170565b500190565b6000826110d857634e487b7160e01b81526012600452602481fd5b500490565b60008160001904831182151516156110f7576110f7611170565b500290565b60008083128015600160ff1b85018412161561111a5761111a611170565b6001600160ff1b038401831381161561113557611135611170565b50500390565b600060001982141561114f5761114f611170565b5060010190565b6000600160ff1b82141561116c5761116c611170565b0390565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052602160045260246000fd5b6001600160a01b03811681146111b157600080fd5b5056fea26469706673582212205c1d238d80de44af0987925a10ba1b49a18c7b7ab862243e1bf82083ee3cc53064736f6c63430008040033\";\n","/* Autogenerated file. Do not edit manually. */\n/* tslint:disable */\n/* eslint-disable */\n\nimport { Signer, BigNumberish } from \"ethers\";\nimport { Provider, TransactionRequest } from \"@ethersproject/providers\";\nimport { Contract, ContractFactory, Overrides } from \"@ethersproject/contracts\";\n\nimport type { Erc20Mock } from \"./Erc20Mock\";\n\nexport class Erc20MockFactory extends ContractFactory {\n  constructor(signer?: Signer) {\n    super(_abi, _bytecode, signer);\n  }\n\n  deploy(\n    name: string,\n    symbol: string,\n    __decimals: BigNumberish,\n    overrides?: Overrides\n  ): Promise<Erc20Mock> {\n    return super.deploy(\n      name,\n      symbol,\n      __decimals,\n      overrides || {}\n    ) as Promise<Erc20Mock>;\n  }\n  getDeployTransaction(\n    name: string,\n    symbol: string,\n    __decimals: BigNumberish,\n    overrides?: Overrides\n  ): TransactionRequest {\n    return super.getDeployTransaction(\n      name,\n      symbol,\n      __decimals,\n      overrides || {}\n    );\n  }\n  attach(address: string): Erc20Mock {\n    return super.attach(address) as Erc20Mock;\n  }\n  connect(signer: Signer): Erc20MockFactory {\n    return super.connect(signer) as Erc20MockFactory;\n  }\n  static connect(\n    address: string,\n    signerOrProvider: Signer | Provider\n  ): Erc20Mock {\n    return new Contract(address, _abi, signerOrProvider) as Erc20Mock;\n  }\n}\n\nconst _abi = [\n  {\n    inputs: [\n      {\n        internalType: \"string\",\n        name: \"name\",\n        type: \"string\",\n      },\n      {\n        internalType: \"string\",\n        name: \"symbol\",\n        type: \"string\",\n      },\n      {\n        internalType: \"uint8\",\n        name: \"__decimals\",\n        type: \"uint8\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"constructor\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"owner\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"spender\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"value\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"Approval\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"from\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"value\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"Transfer\",\n    type: \"event\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"owner\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"spender\",\n        type: \"address\",\n      },\n    ],\n    name: \"allowance\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"spender\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amount\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"approve\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n    ],\n    name: \"balanceOf\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"decimals\",\n    outputs: [\n      {\n        internalType: \"uint8\",\n        name: \"\",\n        type: \"uint8\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"spender\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"subtractedValue\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"decreaseAllowance\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"spender\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"addedValue\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"increaseAllowance\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"amount\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"mint\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amount\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"mintTo\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"name\",\n    outputs: [\n      {\n        internalType: \"string\",\n        name: \"\",\n        type: \"string\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"symbol\",\n    outputs: [\n      {\n        internalType: \"string\",\n        name: \"\",\n        type: \"string\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"totalSupply\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"recipient\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amount\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"transfer\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"sender\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"recipient\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amount\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"transferFrom\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n];\n\nconst _bytecode =\n  \"0x60a06040523480156200001157600080fd5b5060405162000d2138038062000d218339810160408190526200003491620001f0565b8251839083906200004d90600390602085019062000097565b5080516200006390600490602084019062000097565b50505060f81b7fff000000000000000000000000000000000000000000000000000000000000001660805250620002c49050565b828054620000a59062000271565b90600052602060002090601f016020900481019282620000c9576000855562000114565b82601f10620000e457805160ff191683800117855562000114565b8280016001018555821562000114579182015b8281111562000114578251825591602001919060010190620000f7565b506200012292915062000126565b5090565b5b8082111562000122576000815560010162000127565b600082601f8301126200014e578081fd5b81516001600160401b03808211156200016b576200016b620002ae565b604051601f8301601f19908116603f01168101908282118183101715620001965762000196620002ae565b81604052838152602092508683858801011115620001b2578485fd5b8491505b83821015620001d55785820183015181830184015290820190620001b6565b83821115620001e657848385830101525b9695505050505050565b60008060006060848603121562000205578283fd5b83516001600160401b03808211156200021c578485fd5b6200022a878388016200013d565b9450602086015191508082111562000240578384fd5b506200024f868287016200013d565b925050604084015160ff8116811462000266578182fd5b809150509250925092565b600181811c908216806200028657607f821691505b60208210811415620002a857634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fd5b60805160f81c610a3e620002e360003960006101410152610a3e6000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c8063449a52f81161008c578063a0712d6811610066578063a0712d68146101c4578063a457c2d7146101d7578063a9059cbb146101ea578063dd62ed3e146101fd57600080fd5b8063449a52f81461017e57806370a082311461019357806395d89b41146101bc57600080fd5b806306fdde03146100d4578063095ea7b3146100f257806318160ddd1461011557806323b872dd14610127578063313ce5671461013a578063395093511461016b575b600080fd5b6100dc610236565b6040516100e99190610956565b60405180910390f35b610105610100366004610915565b6102c8565b60405190151581526020016100e9565b6002545b6040519081526020016100e9565b6101056101353660046108da565b6102de565b60405160ff7f00000000000000000000000000000000000000000000000000000000000000001681526020016100e9565b610105610179366004610915565b61038d565b61019161018c366004610915565b6103c9565b005b6101196101a1366004610887565b6001600160a01b031660009081526020819052604090205490565b6100dc6103d7565b6101916101d236600461093e565b6103e6565b6101056101e5366004610915565b6103f3565b6101056101f8366004610915565b61048c565b61011961020b3660046108a8565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b606060038054610245906109cd565b80601f0160208091040260200160405190810160405280929190818152602001828054610271906109cd565b80156102be5780601f10610293576101008083540402835291602001916102be565b820191906000526020600020905b8154815290600101906020018083116102a157829003601f168201915b5050505050905090565b60006102d5338484610499565b50600192915050565b60006102eb8484846105bd565b6001600160a01b0384166000908152600160209081526040808320338452909152902054828110156103755760405162461bcd60e51b815260206004820152602860248201527f45524332303a207472616e7366657220616d6f756e74206578636565647320616044820152676c6c6f77616e636560c01b60648201526084015b60405180910390fd5b6103828533858403610499565b506001949350505050565b3360008181526001602090815260408083206001600160a01b038716845290915281205490916102d59185906103c49086906109a9565b610499565b6103d3828261078c565b5050565b606060048054610245906109cd565b6103f0338261078c565b50565b3360009081526001602090815260408083206001600160a01b0386168452909152812054828110156104755760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b606482015260840161036c565b6104823385858403610499565b5060019392505050565b60006102d53384846105bd565b6001600160a01b0383166104fb5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b606482015260840161036c565b6001600160a01b03821661055c5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b606482015260840161036c565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b0383166106215760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b606482015260840161036c565b6001600160a01b0382166106835760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b606482015260840161036c565b6001600160a01b038316600090815260208190526040902054818110156106fb5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b606482015260840161036c565b6001600160a01b038085166000908152602081905260408082208585039055918516815290812080548492906107329084906109a9565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161077e91815260200190565b60405180910390a350505050565b6001600160a01b0382166107e25760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640161036c565b80600260008282546107f491906109a9565b90915550506001600160a01b038216600090815260208190526040812080548392906108219084906109a9565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b80356001600160a01b038116811461088257600080fd5b919050565b600060208284031215610898578081fd5b6108a18261086b565b9392505050565b600080604083850312156108ba578081fd5b6108c38361086b565b91506108d16020840161086b565b90509250929050565b6000806000606084860312156108ee578081fd5b6108f78461086b565b92506109056020850161086b565b9150604084013590509250925092565b60008060408385031215610927578182fd5b6109308361086b565b946020939093013593505050565b60006020828403121561094f578081fd5b5035919050565b6000602080835283518082850152825b8181101561098257858101830151858201604001528201610966565b818111156109935783604083870101525b50601f01601f1916929092016040019392505050565b600082198211156109c857634e487b7160e01b81526011600452602481fd5b500190565b600181811c908216806109e157607f821691505b60208210811415610a0257634e487b7160e01b600052602260045260246000fd5b5091905056fea264697066735822122017b6afb054b4e30133510e5d8541931c4e88c7e606e376f6d29b856a1e4e58f064736f6c63430008040033\";\n","/* Autogenerated file. Do not edit manually. */\n/* tslint:disable */\n/* eslint-disable */\n\nimport { Signer, BigNumberish } from \"ethers\";\nimport { Provider, TransactionRequest } from \"@ethersproject/providers\";\nimport { Contract, ContractFactory, Overrides } from \"@ethersproject/contracts\";\n\nimport type { PriceProviderMock } from \"./PriceProviderMock\";\n\nexport class PriceProviderMockFactory extends ContractFactory {\n  constructor(signer?: Signer) {\n    super(_abi, _bytecode, signer);\n  }\n\n  deploy(\n    _price: BigNumberish,\n    overrides?: Overrides\n  ): Promise<PriceProviderMock> {\n    return super.deploy(_price, overrides || {}) as Promise<PriceProviderMock>;\n  }\n  getDeployTransaction(\n    _price: BigNumberish,\n    overrides?: Overrides\n  ): TransactionRequest {\n    return super.getDeployTransaction(_price, overrides || {});\n  }\n  attach(address: string): PriceProviderMock {\n    return super.attach(address) as PriceProviderMock;\n  }\n  connect(signer: Signer): PriceProviderMockFactory {\n    return super.connect(signer) as PriceProviderMockFactory;\n  }\n  static connect(\n    address: string,\n    signerOrProvider: Signer | Provider\n  ): PriceProviderMock {\n    return new Contract(address, _abi, signerOrProvider) as PriceProviderMock;\n  }\n}\n\nconst _abi = [\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"_price\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"constructor\",\n  },\n  {\n    inputs: [],\n    name: \"decimals\",\n    outputs: [\n      {\n        internalType: \"uint8\",\n        name: \"\",\n        type: \"uint8\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"description\",\n    outputs: [\n      {\n        internalType: \"string\",\n        name: \"\",\n        type: \"string\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint80\",\n        name: \"\",\n        type: \"uint80\",\n      },\n    ],\n    name: \"getRoundData\",\n    outputs: [\n      {\n        internalType: \"uint80\",\n        name: \"\",\n        type: \"uint80\",\n      },\n      {\n        internalType: \"int256\",\n        name: \"\",\n        type: \"int256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint80\",\n        name: \"\",\n        type: \"uint80\",\n      },\n    ],\n    stateMutability: \"pure\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"latestAnswer\",\n    outputs: [\n      {\n        internalType: \"int256\",\n        name: \"result\",\n        type: \"int256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"latestRoundData\",\n    outputs: [\n      {\n        internalType: \"uint80\",\n        name: \"\",\n        type: \"uint80\",\n      },\n      {\n        internalType: \"int256\",\n        name: \"answer\",\n        type: \"int256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint80\",\n        name: \"\",\n        type: \"uint80\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"price\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"_price\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"setPrice\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"version\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n];\n\nconst _bytecode =\n  \"0x6001805460ff1916600817905560c0604052601360808190527f5465737420696d706c656d656e746174696c6e0000000000000000000000000060a090815261004b9160029190610084565b50600060035534801561005d57600080fd5b506040516104c03803806104c083398101604081905261007c9161011d565b600055610170565b82805461009090610135565b90600052602060002090601f0160209004810192826100b257600085556100f8565b82601f106100cb57805160ff19168380011785556100f8565b828001600101855582156100f8579182015b828111156100f85782518255916020019190600101906100dd565b50610104929150610108565b5090565b5b808211156101045760008155600101610109565b60006020828403121561012e578081fd5b5051919050565b600181811c9082168061014957607f821691505b6020821081141561016a57634e487b7160e01b600052602260045260246000fd5b50919050565b6103418061017f6000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c806391b7f5ed1161005b57806391b7f5ed146100e15780639a6fc8f5146100f6578063a035b1fe14610140578063feaf968c1461014957600080fd5b8063313ce5671461008d57806350d25bcd146100b157806354fd4d50146100c35780637284e416146100cc575b600080fd5b60015461009a9060ff1681565b60405160ff90911681526020015b60405180910390f35b6000545b6040519081526020016100a8565b6100b560035481565b6100d4610155565b6040516100a8919061027d565b6100f46100ef366004610234565b600055565b005b61010961010436600461024c565b6101e3565b6040805169ffffffffffffffffffff968716815260208101959095528401929092526060830152909116608082015260a0016100a8565b6100b560005481565b60008054818080610109565b60028054610162906102d0565b80601f016020809104026020016040519081016040528092919081815260200182805461018e906102d0565b80156101db5780601f106101b0576101008083540402835291602001916101db565b820191906000526020600020905b8154815290600101906020018083116101be57829003601f168201915b505050505081565b600080600080600060405162461bcd60e51b815260040161022b906020808252601390820152722a32b9ba1034b6b83632b6b2b73a30ba34b7b760691b604082015260600190565b60405180910390fd5b600060208284031215610245578081fd5b5035919050565b60006020828403121561025d578081fd5b813569ffffffffffffffffffff81168114610276578182fd5b9392505050565b6000602080835283518082850152825b818110156102a95785810183015185820160400152820161028d565b818111156102ba5783604083870101525b50601f01601f1916929092016040019392505050565b600181811c908216806102e457607f821691505b6020821081141561030557634e487b7160e01b600052602260045260246000fd5b5091905056fea264697066735822122028688bb4e8e9fc19e39edb1f245ba4451d272e008a7e4a3859611cbc3fd8dd7564736f6c63430008040033\";\n","/* Autogenerated file. Do not edit manually. */\n/* tslint:disable */\n/* eslint-disable */\n\nimport { Signer } from \"ethers\";\nimport { Provider, TransactionRequest } from \"@ethersproject/providers\";\nimport { Contract, ContractFactory, Overrides } from \"@ethersproject/contracts\";\n\nimport type { UniswapRouterMock } from \"./UniswapRouterMock\";\n\nexport class UniswapRouterMockFactory extends ContractFactory {\n  constructor(signer?: Signer) {\n    super(_abi, _bytecode, signer);\n  }\n\n  deploy(\n    _wbtc: string,\n    _usdc: string,\n    wpp: string,\n    epp: string,\n    overrides?: Overrides\n  ): Promise<UniswapRouterMock> {\n    return super.deploy(\n      _wbtc,\n      _usdc,\n      wpp,\n      epp,\n      overrides || {}\n    ) as Promise<UniswapRouterMock>;\n  }\n  getDeployTransaction(\n    _wbtc: string,\n    _usdc: string,\n    wpp: string,\n    epp: string,\n    overrides?: Overrides\n  ): TransactionRequest {\n    return super.getDeployTransaction(_wbtc, _usdc, wpp, epp, overrides || {});\n  }\n  attach(address: string): UniswapRouterMock {\n    return super.attach(address) as UniswapRouterMock;\n  }\n  connect(signer: Signer): UniswapRouterMockFactory {\n    return super.connect(signer) as UniswapRouterMockFactory;\n  }\n  static connect(\n    address: string,\n    signerOrProvider: Signer | Provider\n  ): UniswapRouterMock {\n    return new Contract(address, _abi, signerOrProvider) as UniswapRouterMock;\n  }\n}\n\nconst _abi = [\n  {\n    inputs: [\n      {\n        internalType: \"contract ERC20Mock\",\n        name: \"_wbtc\",\n        type: \"address\",\n      },\n      {\n        internalType: \"contract ERC20Mock\",\n        name: \"_usdc\",\n        type: \"address\",\n      },\n      {\n        internalType: \"contract AggregatorV3Interface\",\n        name: \"wpp\",\n        type: \"address\",\n      },\n      {\n        internalType: \"contract AggregatorV3Interface\",\n        name: \"epp\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"constructor\",\n  },\n  {\n    inputs: [],\n    name: \"ETHPriceProvider\",\n    outputs: [\n      {\n        internalType: \"contract AggregatorV3Interface\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"USDC\",\n    outputs: [\n      {\n        internalType: \"contract ERC20Mock\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"WBTC\",\n    outputs: [\n      {\n        internalType: \"contract ERC20Mock\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"WBTCPriceProvider\",\n    outputs: [\n      {\n        internalType: \"contract AggregatorV3Interface\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"amountOut\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"address[]\",\n        name: \"path\",\n        type: \"address[]\",\n      },\n    ],\n    name: \"getAmountsIn\",\n    outputs: [\n      {\n        internalType: \"uint256[]\",\n        name: \"amounts\",\n        type: \"uint256[]\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"amountOut\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"address[]\",\n        name: \"path\",\n        type: \"address[]\",\n      },\n      {\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"swapETHForExactTokens\",\n    outputs: [\n      {\n        internalType: \"uint256[]\",\n        name: \"amounts\",\n        type: \"uint256[]\",\n      },\n    ],\n    stateMutability: \"payable\",\n    type: \"function\",\n  },\n];\n\nconst _bytecode =\n  \"0x61010060405234801561001157600080fd5b50604051610c66380380610c668339810160408190526100309161005f565b6001600160601b0319606094851b811660805292841b831660a05290831b821660c05290911b1660e0526100d5565b60008060008060808587031215610074578384fd5b845161007f816100bd565b6020860151909450610090816100bd565b60408601519093506100a1816100bd565b60608601519092506100b2816100bd565b939692955090935050565b6001600160a01b03811681146100d257600080fd5b50565b60805160601c60a05160601c60c05160601c60e05160601c610b1d610149600039600081816101560152818161022b015261035601526000818160a201526103ef015260008181610122015281816101ba015261057a01526000818160ee015281816102e501526105ea0152610b1d6000f3fe6080604052600436106100555760003560e01c80631f00ca741461005a5780633ad2ee53146100905780634dede3de146100dc57806389a3027114610110578063dda95a5714610144578063fb3bdb4114610178575b600080fd5b34801561006657600080fd5b5061007a610075366004610903565b61018b565b6040516100879190610a00565b60405180910390f35b34801561009c57600080fd5b506100c47f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b039091168152602001610087565b3480156100e857600080fd5b506100c47f000000000000000000000000000000000000000000000000000000000000000081565b34801561011c57600080fd5b506100c47f000000000000000000000000000000000000000000000000000000000000000081565b34801561015057600080fd5b506100c47f000000000000000000000000000000000000000000000000000000000000000081565b61007a61018636600461094d565b610556565b6060600282146101b65760405162461bcd60e51b81526004016101ad90610a44565b60405180910390fd5b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168484600181811061020357634e487b7160e01b600052603260045260246000fd5b905060200201602081019061021891906108e2565b6001600160a01b031614156102e35760007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561028257600080fd5b505afa158015610296573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102ba91906109b1565b50505091505080866305f5e1006102d19190610a9b565b6102db9190610a7b565b9150506104bc565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168484600181811061032e57634e487b7160e01b600052603260045260246000fd5b905060200201602081019061034391906108e2565b6001600160a01b031614156104a45760007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b1580156103ad57600080fd5b505afa1580156103c1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103e591906109b1565b50505091505060007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561044657600080fd5b505afa15801561045a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061047e91906109b1565b5050509150508181886104919190610a9b565b61049b9190610a7b565b925050506104bc565b60405162461bcd60e51b81526004016101ad90610a44565b604080516002808252606082018352909160208301908036833701905050915060646104e9826067610a9b565b6104f39190610a7b565b8260008151811061051457634e487b7160e01b600052603260045260246000fd5b602002602001018181525050848260018151811061054257634e487b7160e01b600052603260045260246000fd5b602002602001018181525050509392505050565b6060600284146105785760405162461bcd60e51b81526004016101ad90610a44565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316858560018181106105c357634e487b7160e01b600052603260045260246000fd5b90506020020160208101906105d891906108e2565b6001600160a01b0316148061065357507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168585600181811061063357634e487b7160e01b600052603260045260246000fd5b905060200201602081019061064891906108e2565b6001600160a01b0316145b61069f5760405162461bcd60e51b815260206004820152601c60248201527f556e69737761704d6f636b3a20746f6f20736d616c6c2076616c75650000000060448201526064016101ad565b6106aa86868661018b565b9050806000815181106106cd57634e487b7160e01b600052603260045260246000fd5b60200260200101513410156107245760405162461bcd60e51b815260206004820152601c60248201527f556e69737761704d6f636b3a20746f6f20736d616c6c2076616c75650000000060448201526064016101ad565b8060008151811061074557634e487b7160e01b600052603260045260246000fd5b60200260200101513411156107bf57336001600160a01b03166108fc8260008151811061078257634e487b7160e01b600052603260045260246000fd5b6020026020010151346107959190610aba565b6040518115909202916000818181858888f193505050501580156107bd573d6000803e3d6000fd5b505b848460018181106107e057634e487b7160e01b600052603260045260246000fd5b90506020020160208101906107f591906108e2565b6040516308934a5f60e31b81526001600160a01b03858116600483015260248201899052919091169063449a52f890604401600060405180830381600087803b15801561084157600080fd5b505af1158015610855573d6000803e3d6000fd5b5050505095945050505050565b80356001600160a01b038116811461087957600080fd5b919050565b60008083601f84011261088f578182fd5b50813567ffffffffffffffff8111156108a6578182fd5b6020830191508360208260051b85010111156108c157600080fd5b9250929050565b805169ffffffffffffffffffff8116811461087957600080fd5b6000602082840312156108f3578081fd5b6108fc82610862565b9392505050565b600080600060408486031215610917578182fd5b83359250602084013567ffffffffffffffff811115610934578283fd5b6109408682870161087e565b9497909650939450505050565b600080600080600060808688031215610964578081fd5b85359450602086013567ffffffffffffffff811115610981578182fd5b61098d8882890161087e565b90955093506109a0905060408701610862565b949793965091946060013592915050565b600080600080600060a086880312156109c8578081fd5b6109d1866108c8565b94506020860151935060408601519250606086015191506109f4608087016108c8565b90509295509295909350565b6020808252825182820181905260009190848201906040850190845b81811015610a3857835183529284019291840191600101610a1c565b50909695505050505050565b60208082526017908201527f556e69737761704d6f636b3a2077726f6e672070617468000000000000000000604082015260600190565b600082610a9657634e487b7160e01b81526012600452602481fd5b500490565b6000816000190483118215151615610ab557610ab5610ad1565b500290565b600082821015610acc57610acc610ad1565b500390565b634e487b7160e01b600052601160045260246000fdfea264697066735822122009689903b52ced5f595a23d1ba7c52b97014e2fb76cc9720b900a8728042f23964736f6c63430008040033\";\n","/* Autogenerated file. Do not edit manually. */\n/* tslint:disable */\n/* eslint-disable */\n\nimport { Signer } from \"ethers\";\nimport { Provider, TransactionRequest } from \"@ethersproject/providers\";\nimport { Contract, ContractFactory, Overrides } from \"@ethersproject/contracts\";\n\nimport type { WavaxMock } from \"./WavaxMock\";\n\nexport class WavaxMockFactory extends ContractFactory {\n  constructor(signer?: Signer) {\n    super(_abi, _bytecode, signer);\n  }\n\n  deploy(overrides?: Overrides): Promise<WavaxMock> {\n    return super.deploy(overrides || {}) as Promise<WavaxMock>;\n  }\n  getDeployTransaction(overrides?: Overrides): TransactionRequest {\n    return super.getDeployTransaction(overrides || {});\n  }\n  attach(address: string): WavaxMock {\n    return super.attach(address) as WavaxMock;\n  }\n  connect(signer: Signer): WavaxMockFactory {\n    return super.connect(signer) as WavaxMockFactory;\n  }\n  static connect(\n    address: string,\n    signerOrProvider: Signer | Provider\n  ): WavaxMock {\n    return new Contract(address, _abi, signerOrProvider) as WavaxMock;\n  }\n}\n\nconst _abi = [\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"owner\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"spender\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"value\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"Approval\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"from\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"value\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"Transfer\",\n    type: \"event\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"owner\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"spender\",\n        type: \"address\",\n      },\n    ],\n    name: \"allowance\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"spender\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amount\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"approve\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n    ],\n    name: \"balanceOf\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"decimals\",\n    outputs: [\n      {\n        internalType: \"uint8\",\n        name: \"\",\n        type: \"uint8\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"spender\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"subtractedValue\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"decreaseAllowance\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"deposit\",\n    outputs: [],\n    stateMutability: \"payable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"spender\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"addedValue\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"increaseAllowance\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"amount\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"mint\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amount\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"mintTo\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"name\",\n    outputs: [\n      {\n        internalType: \"string\",\n        name: \"\",\n        type: \"string\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"symbol\",\n    outputs: [\n      {\n        internalType: \"string\",\n        name: \"\",\n        type: \"string\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"totalSupply\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"recipient\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amount\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"transfer\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"sender\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"recipient\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amount\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"transferFrom\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"amount\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"withdraw\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n];\n\nconst _bytecode =\n  \"0x60a06040523480156200001157600080fd5b50604051806040016040528060058152602001640ae82ac82b60db1b8152506040518060400160405280600c81526020016b0aee4c2e0e0cac84082ecc2f60a31b81525060128282816003908051906020019062000071929190620000bb565b50805162000087906004906020840190620000bb565b50505060f81b7fff0000000000000000000000000000000000000000000000000000000000000016608052506200019e9050565b828054620000c99062000161565b90600052602060002090601f016020900481019282620000ed576000855562000138565b82601f106200010857805160ff191683800117855562000138565b8280016001018555821562000138579182015b82811115620001385782518255916020019190600101906200011b565b50620001469291506200014a565b5090565b5b808211156200014657600081556001016200014b565b600181811c908216806200017657607f821691505b602082108114156200019857634e487b7160e01b600052602260045260246000fd5b50919050565b60805160f81c610cd3620001bd60003960006101bd0152610cd36000f3fe6080604052600436106100e85760003560e01c8063449a52f81161008a578063a457c2d711610059578063a457c2d714610292578063a9059cbb146102b2578063d0e30db0146102d2578063dd62ed3e146102da57600080fd5b8063449a52f81461020757806370a082311461022757806395d89b411461025d578063a0712d681461027257600080fd5b806323b872dd116100c657806323b872dd146101675780632e1a7d4d14610187578063313ce567146101a957806339509351146101e757600080fd5b806306fdde03146100ed578063095ea7b31461011857806318160ddd14610148575b600080fd5b3480156100f957600080fd5b50610102610320565b60405161010f9190610bca565b60405180910390f35b34801561012457600080fd5b50610138610133366004610b89565b6103b2565b604051901515815260200161010f565b34801561015457600080fd5b506002545b60405190815260200161010f565b34801561017357600080fd5b50610138610182366004610b4e565b6103c8565b34801561019357600080fd5b506101a76101a2366004610bb2565b610477565b005b3480156101b557600080fd5b5060405160ff7f000000000000000000000000000000000000000000000000000000000000000016815260200161010f565b3480156101f357600080fd5b50610138610202366004610b89565b6104b2565b34801561021357600080fd5b506101a7610222366004610b89565b6104ee565b34801561023357600080fd5b50610159610242366004610afb565b6001600160a01b031660009081526020819052604090205490565b34801561026957600080fd5b506101026104f8565b34801561027e57600080fd5b506101a761028d366004610bb2565b610507565b34801561029e57600080fd5b506101386102ad366004610b89565b610514565b3480156102be57600080fd5b506101386102cd366004610b89565b6105ad565b6101a76105ba565b3480156102e657600080fd5b506101596102f5366004610b1c565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b60606003805461032f90610c4c565b80601f016020809104026020016040519081016040528092919081815260200182805461035b90610c4c565b80156103a85780601f1061037d576101008083540402835291602001916103a8565b820191906000526020600020905b81548152906001019060200180831161038b57829003601f168201915b5050505050905090565b60006103bf3384846105c6565b50600192915050565b60006103d58484846106eb565b6001600160a01b03841660009081526001602090815260408083203384529091529020548281101561045f5760405162461bcd60e51b815260206004820152602860248201527f45524332303a207472616e7366657220616d6f756e74206578636565647320616044820152676c6c6f77616e636560c01b60648201526084015b60405180910390fd5b61046c85338584036105c6565b506001949350505050565b61048133826108ba565b604051339082156108fc029083906000818181858888f193505050501580156104ae573d6000803e3d6000fd5b5050565b3360008181526001602090815260408083206001600160a01b038716845290915281205490916103bf9185906104e9908690610c1d565b6105c6565b6104ae8282610a00565b60606004805461032f90610c4c565b6105113382610a00565b50565b3360009081526001602090815260408083206001600160a01b0386168452909152812054828110156105965760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b6064820152608401610456565b6105a333858584036105c6565b5060019392505050565b60006103bf3384846106eb565b6105c43334610a00565b565b6001600160a01b0383166106285760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610456565b6001600160a01b0382166106895760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610456565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b6001600160a01b03831661074f5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610456565b6001600160a01b0382166107b15760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610456565b6001600160a01b038316600090815260208190526040902054818110156108295760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610456565b6001600160a01b03808516600090815260208190526040808220858503905591851681529081208054849290610860908490610c1d565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516108ac91815260200190565b60405180910390a350505050565b6001600160a01b03821661091a5760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b6064820152608401610456565b6001600160a01b0382166000908152602081905260409020548181101561098e5760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b6064820152608401610456565b6001600160a01b03831660009081526020819052604081208383039055600280548492906109bd908490610c35565b90915550506040518281526000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906020016106de565b6001600160a01b038216610a565760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610456565b8060026000828254610a689190610c1d565b90915550506001600160a01b03821660009081526020819052604081208054839290610a95908490610c1d565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b80356001600160a01b0381168114610af657600080fd5b919050565b600060208284031215610b0c578081fd5b610b1582610adf565b9392505050565b60008060408385031215610b2e578081fd5b610b3783610adf565b9150610b4560208401610adf565b90509250929050565b600080600060608486031215610b62578081fd5b610b6b84610adf565b9250610b7960208501610adf565b9150604084013590509250925092565b60008060408385031215610b9b578182fd5b610ba483610adf565b946020939093013593505050565b600060208284031215610bc3578081fd5b5035919050565b6000602080835283518082850152825b81811015610bf657858101830151858201604001528201610bda565b81811115610c075783604083870101525b50601f01601f1916929092016040019392505050565b60008219821115610c3057610c30610c87565b500190565b600082821015610c4757610c47610c87565b500390565b600181811c90821680610c6057607f821691505b60208210811415610c8157634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fdfea264697066735822122097a240ac26886e06b7305ad7eec25a4022522f0522ab09abf41652571a9d511f64736f6c63430008040033\";\n","/* Autogenerated file. Do not edit manually. */\n/* tslint:disable */\n/* eslint-disable */\n\nimport { Signer } from \"ethers\";\nimport { Provider, TransactionRequest } from \"@ethersproject/providers\";\nimport { Contract, ContractFactory, Overrides } from \"@ethersproject/contracts\";\n\nimport type { WethMock } from \"./WethMock\";\n\nexport class WethMockFactory extends ContractFactory {\n  constructor(signer?: Signer) {\n    super(_abi, _bytecode, signer);\n  }\n\n  deploy(overrides?: Overrides): Promise<WethMock> {\n    return super.deploy(overrides || {}) as Promise<WethMock>;\n  }\n  getDeployTransaction(overrides?: Overrides): TransactionRequest {\n    return super.getDeployTransaction(overrides || {});\n  }\n  attach(address: string): WethMock {\n    return super.attach(address) as WethMock;\n  }\n  connect(signer: Signer): WethMockFactory {\n    return super.connect(signer) as WethMockFactory;\n  }\n  static connect(\n    address: string,\n    signerOrProvider: Signer | Provider\n  ): WethMock {\n    return new Contract(address, _abi, signerOrProvider) as WethMock;\n  }\n}\n\nconst _abi = [\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"owner\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"spender\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"value\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"Approval\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"from\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"value\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"Transfer\",\n    type: \"event\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"owner\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"spender\",\n        type: \"address\",\n      },\n    ],\n    name: \"allowance\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"spender\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amount\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"approve\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n    ],\n    name: \"balanceOf\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"decimals\",\n    outputs: [\n      {\n        internalType: \"uint8\",\n        name: \"\",\n        type: \"uint8\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"spender\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"subtractedValue\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"decreaseAllowance\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"deposit\",\n    outputs: [],\n    stateMutability: \"payable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"spender\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"addedValue\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"increaseAllowance\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"amount\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"mint\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amount\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"mintTo\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"name\",\n    outputs: [\n      {\n        internalType: \"string\",\n        name: \"\",\n        type: \"string\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"symbol\",\n    outputs: [\n      {\n        internalType: \"string\",\n        name: \"\",\n        type: \"string\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"totalSupply\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"recipient\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amount\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"transfer\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"sender\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"recipient\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amount\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"transferFrom\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"amount\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"withdraw\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n];\n\nconst _bytecode =\n  \"0x60a06040523480156200001157600080fd5b50604051806040016040528060048152602001630ae8aa8960e31b8152506040518060400160405280600d81526020016c2bb930b83832b21022ba3432b960991b81525060128282816003908051906020019062000071929190620000bb565b50805162000087906004906020840190620000bb565b50505060f81b7fff0000000000000000000000000000000000000000000000000000000000000016608052506200019e9050565b828054620000c99062000161565b90600052602060002090601f016020900481019282620000ed576000855562000138565b82601f106200010857805160ff191683800117855562000138565b8280016001018555821562000138579182015b82811115620001385782518255916020019190600101906200011b565b50620001469291506200014a565b5090565b5b808211156200014657600081556001016200014b565b600181811c908216806200017657607f821691505b602082108114156200019857634e487b7160e01b600052602260045260246000fd5b50919050565b60805160f81c610cd3620001bd60003960006101bd0152610cd36000f3fe6080604052600436106100e85760003560e01c8063449a52f81161008a578063a457c2d711610059578063a457c2d714610292578063a9059cbb146102b2578063d0e30db0146102d2578063dd62ed3e146102da57600080fd5b8063449a52f81461020757806370a082311461022757806395d89b411461025d578063a0712d681461027257600080fd5b806323b872dd116100c657806323b872dd146101675780632e1a7d4d14610187578063313ce567146101a957806339509351146101e757600080fd5b806306fdde03146100ed578063095ea7b31461011857806318160ddd14610148575b600080fd5b3480156100f957600080fd5b50610102610320565b60405161010f9190610bca565b60405180910390f35b34801561012457600080fd5b50610138610133366004610b89565b6103b2565b604051901515815260200161010f565b34801561015457600080fd5b506002545b60405190815260200161010f565b34801561017357600080fd5b50610138610182366004610b4e565b6103c8565b34801561019357600080fd5b506101a76101a2366004610bb2565b610477565b005b3480156101b557600080fd5b5060405160ff7f000000000000000000000000000000000000000000000000000000000000000016815260200161010f565b3480156101f357600080fd5b50610138610202366004610b89565b6104b2565b34801561021357600080fd5b506101a7610222366004610b89565b6104ee565b34801561023357600080fd5b50610159610242366004610afb565b6001600160a01b031660009081526020819052604090205490565b34801561026957600080fd5b506101026104f8565b34801561027e57600080fd5b506101a761028d366004610bb2565b610507565b34801561029e57600080fd5b506101386102ad366004610b89565b610514565b3480156102be57600080fd5b506101386102cd366004610b89565b6105ad565b6101a76105ba565b3480156102e657600080fd5b506101596102f5366004610b1c565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b60606003805461032f90610c4c565b80601f016020809104026020016040519081016040528092919081815260200182805461035b90610c4c565b80156103a85780601f1061037d576101008083540402835291602001916103a8565b820191906000526020600020905b81548152906001019060200180831161038b57829003601f168201915b5050505050905090565b60006103bf3384846105c6565b50600192915050565b60006103d58484846106eb565b6001600160a01b03841660009081526001602090815260408083203384529091529020548281101561045f5760405162461bcd60e51b815260206004820152602860248201527f45524332303a207472616e7366657220616d6f756e74206578636565647320616044820152676c6c6f77616e636560c01b60648201526084015b60405180910390fd5b61046c85338584036105c6565b506001949350505050565b61048133826108ba565b604051339082156108fc029083906000818181858888f193505050501580156104ae573d6000803e3d6000fd5b5050565b3360008181526001602090815260408083206001600160a01b038716845290915281205490916103bf9185906104e9908690610c1d565b6105c6565b6104ae8282610a00565b60606004805461032f90610c4c565b6105113382610a00565b50565b3360009081526001602090815260408083206001600160a01b0386168452909152812054828110156105965760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b6064820152608401610456565b6105a333858584036105c6565b5060019392505050565b60006103bf3384846106eb565b6105c43334610a00565b565b6001600160a01b0383166106285760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610456565b6001600160a01b0382166106895760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610456565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b6001600160a01b03831661074f5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610456565b6001600160a01b0382166107b15760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610456565b6001600160a01b038316600090815260208190526040902054818110156108295760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610456565b6001600160a01b03808516600090815260208190526040808220858503905591851681529081208054849290610860908490610c1d565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516108ac91815260200190565b60405180910390a350505050565b6001600160a01b03821661091a5760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b6064820152608401610456565b6001600160a01b0382166000908152602081905260409020548181101561098e5760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b6064820152608401610456565b6001600160a01b03831660009081526020819052604081208383039055600280548492906109bd908490610c35565b90915550506040518281526000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906020016106de565b6001600160a01b038216610a565760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610456565b8060026000828254610a689190610c1d565b90915550506001600160a01b03821660009081526020819052604081208054839290610a95908490610c1d565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b80356001600160a01b0381168114610af657600080fd5b919050565b600060208284031215610b0c578081fd5b610b1582610adf565b9392505050565b60008060408385031215610b2e578081fd5b610b3783610adf565b9150610b4560208401610adf565b90509250929050565b600080600060608486031215610b62578081fd5b610b6b84610adf565b9250610b7960208501610adf565b9150604084013590509250925092565b60008060408385031215610b9b578182fd5b610ba483610adf565b946020939093013593505050565b600060208284031215610bc3578081fd5b5035919050565b6000602080835283518082850152825b81811015610bf657858101830151858201604001528201610bda565b81811115610c075783604083870101525b50601f01601f1916929092016040019392505050565b60008219821115610c3057610c30610c87565b500190565b600082821015610c4757610c47610c87565b500390565b600181811c90821680610c6057607f821691505b60208210811415610c8157634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fdfea2646970667358221220cd9de5aad59a0124e2b2537d28126bc86fb7ff6a8bc9e76cfd96bbda0c0fbdbf64736f6c63430008040033\";\n","/* Autogenerated file. Do not edit manually. */\n/* tslint:disable */\n/* eslint-disable */\n\nimport { Signer } from \"ethers\";\nimport { Provider, TransactionRequest } from \"@ethersproject/providers\";\nimport { Contract, ContractFactory, Overrides } from \"@ethersproject/contracts\";\n\nimport type { BlackScholesModel } from \"./BlackScholesModel\";\n\nexport class BlackScholesModelFactory extends ContractFactory {\n  constructor(signer?: Signer) {\n    super(_abi, _bytecode, signer);\n  }\n\n  deploy(overrides?: Overrides): Promise<BlackScholesModel> {\n    return super.deploy(overrides || {}) as Promise<BlackScholesModel>;\n  }\n  getDeployTransaction(overrides?: Overrides): TransactionRequest {\n    return super.getDeployTransaction(overrides || {});\n  }\n  attach(address: string): BlackScholesModel {\n    return super.attach(address) as BlackScholesModel;\n  }\n  connect(signer: Signer): BlackScholesModelFactory {\n    return super.connect(signer) as BlackScholesModelFactory;\n  }\n  static connect(\n    address: string,\n    signerOrProvider: Signer | Provider\n  ): BlackScholesModel {\n    return new Contract(address, _abi, signerOrProvider) as BlackScholesModel;\n  }\n}\n\nconst _abi = [\n  {\n    inputs: [],\n    name: \"PRBMathSD59x18__AbsInputTooSmall\",\n    type: \"error\",\n  },\n  {\n    inputs: [],\n    name: \"PRBMathSD59x18__DivInputTooSmall\",\n    type: \"error\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"rAbs\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"PRBMathSD59x18__DivOverflow\",\n    type: \"error\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"int256\",\n        name: \"x\",\n        type: \"int256\",\n      },\n    ],\n    name: \"PRBMathSD59x18__Exp2InputTooBig\",\n    type: \"error\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"int256\",\n        name: \"x\",\n        type: \"int256\",\n      },\n    ],\n    name: \"PRBMathSD59x18__ExpInputTooBig\",\n    type: \"error\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"int256\",\n        name: \"x\",\n        type: \"int256\",\n      },\n    ],\n    name: \"PRBMathSD59x18__FromIntOverflow\",\n    type: \"error\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"int256\",\n        name: \"x\",\n        type: \"int256\",\n      },\n    ],\n    name: \"PRBMathSD59x18__FromIntUnderflow\",\n    type: \"error\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"int256\",\n        name: \"x\",\n        type: \"int256\",\n      },\n    ],\n    name: \"PRBMathSD59x18__LogInputTooSmall\",\n    type: \"error\",\n  },\n  {\n    inputs: [],\n    name: \"PRBMathSD59x18__MulInputTooSmall\",\n    type: \"error\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"rAbs\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"PRBMathSD59x18__MulOverflow\",\n    type: \"error\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"int256\",\n        name: \"x\",\n        type: \"int256\",\n      },\n    ],\n    name: \"PRBMathSD59x18__SqrtNegativeInput\",\n    type: \"error\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"int256\",\n        name: \"x\",\n        type: \"int256\",\n      },\n    ],\n    name: \"PRBMathSD59x18__SqrtOverflow\",\n    type: \"error\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"prod1\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"PRBMath__MulDivFixedPointOverflow\",\n    type: \"error\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"prod1\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"denominator\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"PRBMath__MulDivOverflow\",\n    type: \"error\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"int256\",\n        name: \"amount\",\n        type: \"int256\",\n      },\n      {\n        internalType: \"int256\",\n        name: \"currentPrice\",\n        type: \"int256\",\n      },\n      {\n        internalType: \"int256\",\n        name: \"strike\",\n        type: \"int256\",\n      },\n      {\n        internalType: \"int256\",\n        name: \"period\",\n        type: \"int256\",\n      },\n      {\n        internalType: \"int256\",\n        name: \"swingRate\",\n        type: \"int256\",\n      },\n      {\n        internalType: \"int256\",\n        name: \"impliedVolatility\",\n        type: \"int256\",\n      },\n      {\n        internalType: \"int256\",\n        name: \"riskFreeRate\",\n        type: \"int256\",\n      },\n    ],\n    name: \"calculatePremiums\",\n    outputs: [\n      {\n        internalType: \"int256\",\n        name: \"callPremium\",\n        type: \"int256\",\n      },\n      {\n        internalType: \"int256\",\n        name: \"putPremium\",\n        type: \"int256\",\n      },\n    ],\n    stateMutability: \"pure\",\n    type: \"function\",\n  },\n];\n\nconst _bytecode =\n  \"0x608060405234801561001057600080fd5b5061148c806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c80636002444f14610030575b600080fd5b61004361003e366004611343565b61005c565b6040805192835260208301919091520160405180910390f35b60008061007d6a1a1601fc4ea7109e00000061007788610192565b90610222565b955060006100a6886100a0610092878b6102f4565b61009b90611426565b6103b6565b906102f4565b905060006100bb8a6100a06100928a8c6102f4565b905060006100cc876100a08b61042d565b9050600061011d826100f88c6100ee6706f05b59d3b200006100a08e806102f4565b6100a0908c61138e565b61011361010e8f8861022290919063ffffffff16565b6104a9565b610077919061138e565b905061013b61013461012f84846113e7565b6104e9565b85906102f4565b610147610134836104e9565b61015191906113e7565b95508361015e84886113e7565b610168919061138e565b94506101748d876102f4565b95506101808d866102f4565b94505050505097509795505050505050565b60007809392ee8e921d5d073aff322e62439fcf32d7f344649470f8f198212156101d75760405163e608e18b60e01b8152600481018390526024015b60405180910390fd5b7809392ee8e921d5d073aff322e62439fcf32d7f344649470f90821315610214576040516371f72a3160e01b8152600481018390526024016101ce565b50670de0b6b3a76400000290565b6000600160ff1b8314806102395750600160ff1b82145b156102575760405163b3c754a360e01b815260040160405180910390fd5b60008060008512610268578461026d565b846000035b91506000841261027d5783610282565b836000035b9050600061029983670de0b6b3a764000084610602565b90506001600160ff1b038111156102c657604051637cb4bef560e01b8152600481018290526024016101ce565b6000198087139086138082186001146102df57826102e8565b6102e883611426565b98975050505050505050565b6000600160ff1b83148061030b5750600160ff1b82145b1561032957604051630d01a11b60e21b815260040160405180910390fd5b6000806000851261033a578461033f565b846000035b91506000841261034f5783610354565b836000035b9050600061036283836106dd565b90506001600160ff1b0381111561038f5760405163bf79e8d960e01b8152600481018290526024016101ce565b6000198087139086138082186001146103a857826102e8565b505060000395945050505050565b600068023f2fa8f6da5b9d31198212156103d257506000919050565b680736ea4425c11ac63182126103fe576040516399bb754160e01b8152600481018390526024016101ce565b6714057b7ef767814f8202610426670de0b6b3a76400006706f05b59d3b2000083010561079f565b9392505050565b6000808212156104535760405163608c83ff60e11b8152600481018390526024016101ce565b7809392ee8e921d5d073aff322e62439fcf32d7f344649470f9082131561049057604051632c482c3960e01b8152600481018390526024016101ce565b6104a3670de0b6b3a76400008302610843565b92915050565b60006714057b7ef767814f670de0b6b3a76400006104c684610a1f565b02816104e257634e487b7160e01b600052601260045260246000fd5b0592915050565b60008061052161050a6104fb85610afe565b6703369a219c1e7800906102f4565b61051c90670de0b6b3a764000061138e565b610b3a565b905060006105506105416100926706f05b59d3b200006100a088806102f4565b67058953e87d609800906102f4565b905060006105d46105b86105a561058c610572876712761527a7f020006102f4565b6105859067194666aebd0c7fff1961138e565b87906102f4565b61059e906718b914cd652c600061138e565b86906102f4565b610134906704f2c4e30ec36fff1961138e565b6105ca9067046eabc83754d80061138e565b6100a084866102f4565b905060008513156105fa576105f181670de0b6b3a76400006113e7565b95945050505050565b949350505050565b60008080600019858709858702925082811083820303915050806000141561064b5783828161064157634e487b7160e01b600052601260045260246000fd5b0492505050610426565b83811061067557604051631dcf306360e21b815260048101829052602481018590526044016101ce565b600084868809600260036001881981018916988990049182028318808302840302808302840302808302840302808302840302808302840302918202909203026000889003889004909101858311909403939093029303949094049190911702949350505050565b60008080600019848609848602925082811083820303915050670de0b6b3a764000081106107215760405163698d9a0160e11b8152600481018290526024016101ce565b600080670de0b6b3a76400008688099150506706f05b59d3b1ffff81118261075b5780670de0b6b3a76400008504019450505050506104a3565b620400008285030493909111909103600160ee1b02919091177faccb18165bd6fe31ae1cf318dc5b51eee0e1ba569b88cd74c1773b91fac106690201905092915050565b6000808212156107fa5768033dd1780914b97114198212156107c357506000919050565b6107cf8260000361079f565b6ec097ce7bc90715b34b9f1000000000816104e257634e487b7160e01b600052601260045260246000fd5b680a688906bd8b00000082126108265760405163e69458f960e01b8152600481018390526024016101ce565b670de0b6b3a7640000604083901b0461042681610b68565b919050565b60008161085257506000919050565b50600181600160801b811061086c5760409190911b9060801c5b600160401b81106108825760209190911b9060401c5b64010000000081106108995760109190911b9060201c5b6201000081106108ae5760089190911b9060101c5b61010081106108c25760049190911b9060081c5b601081106108d55760029190911b9060041c5b600881106108e557600182901b91505b600182848161090457634e487b7160e01b600052601260045260246000fd5b048301901c9150600182848161092a57634e487b7160e01b600052601260045260246000fd5b048301901c9150600182848161095057634e487b7160e01b600052601260045260246000fd5b048301901c9150600182848161097657634e487b7160e01b600052601260045260246000fd5b048301901c9150600182848161099c57634e487b7160e01b600052601260045260246000fd5b048301901c915060018284816109c257634e487b7160e01b600052601260045260246000fd5b048301901c915060018284816109e857634e487b7160e01b600052601260045260246000fd5b048301901c91506000828481610a0e57634e487b7160e01b600052601260045260246000fd5b0490508083101561042657826105fa565b6000808213610a445760405163309fa7dd60e11b8152600481018390526024016101ce565b6000670de0b6b3a76400008312610a5d57506001610a77565b6000199050826ec097ce7bc90715b34b9f10000000000492505b6000610a8c670de0b6b3a76400008505611264565b670de0b6b3a7640000808202945090915084821d90811415610ab057505002919050565b6706f05b59d3b200005b6000811315610af557670de0b6b3a7640000828002059150671bc16d674ec800008212610aed579384019360019190911d905b60011d610aba565b50505002919050565b6000600160ff1b821415610b2557604051631d0742e360e21b815260040160405180910390fd5b60008212610b3357816104a3565b5060000390565b6000816ec097ce7bc90715b34b9f1000000000816104e257634e487b7160e01b600052601260045260246000fd5b600160bf1b678000000000000000821615610b8c5768016a09e667f3bcc9090260401c5b674000000000000000821615610bab576801306fe0a31b7152df0260401c5b672000000000000000821615610bca576801172b83c7d517adce0260401c5b671000000000000000821615610be95768010b5586cf9890f62a0260401c5b670800000000000000821615610c08576801059b0d31585743ae0260401c5b670400000000000000821615610c2757680102c9a3e778060ee70260401c5b670200000000000000821615610c465768010163da9fb33356d80260401c5b670100000000000000821615610c6557680100b1afa5abcbed610260401c5b6680000000000000821615610c835768010058c86da1c09ea20260401c5b6640000000000000821615610ca1576801002c605e2e8cec500260401c5b6620000000000000821615610cbf57680100162f3904051fa10260401c5b6610000000000000821615610cdd576801000b175effdc76ba0260401c5b6608000000000000821615610cfb57680100058ba01fb9f96d0260401c5b6604000000000000821615610d195768010002c5cc37da94920260401c5b6602000000000000821615610d37576801000162e525ee05470260401c5b6601000000000000821615610d555768010000b17255775c040260401c5b65800000000000821615610d72576801000058b91b5bc9ae0260401c5b65400000000000821615610d8f57680100002c5c89d5ec6d0260401c5b65200000000000821615610dac5768010000162e43f4f8310260401c5b65100000000000821615610dc957680100000b1721bcfc9a0260401c5b65080000000000821615610de65768010000058b90cf1e6e0260401c5b65040000000000821615610e03576801000002c5c863b73f0260401c5b65020000000000821615610e2057680100000162e430e5a20260401c5b65010000000000821615610e3d576801000000b1721835510260401c5b648000000000821615610e5957680100000058b90c0b490260401c5b644000000000821615610e755768010000002c5c8601cc0260401c5b642000000000821615610e91576801000000162e42fff00260401c5b641000000000821615610ead5768010000000b17217fbb0260401c5b640800000000821615610ec9576801000000058b90bfce0260401c5b640400000000821615610ee557680100000002c5c85fe30260401c5b640200000000821615610f015768010000000162e42ff10260401c5b640100000000821615610f1d57680100000000b17217f80260401c5b6380000000821615610f385768010000000058b90bfc0260401c5b6340000000821615610f53576801000000002c5c85fe0260401c5b6320000000821615610f6e57680100000000162e42ff0260401c5b6310000000821615610f89576801000000000b17217f0260401c5b6308000000821615610fa457680100000000058b90c00260401c5b6304000000821615610fbf5768010000000002c5c8600260401c5b6302000000821615610fda576801000000000162e4300260401c5b6301000000821615610ff55768010000000000b172180260401c5b6280000082161561100f576801000000000058b90c0260401c5b6240000082161561102957680100000000002c5c860260401c5b622000008216156110435768010000000000162e430260401c5b6210000082161561105d57680100000000000b17210260401c5b620800008216156110775768010000000000058b910260401c5b62040000821615611091576801000000000002c5c80260401c5b620200008216156110ab57680100000000000162e40260401c5b620100008216156110c5576801000000000000b1720260401c5b6180008216156110de57680100000000000058b90260401c5b6140008216156110f75768010000000000002c5d0260401c5b612000821615611110576801000000000000162e0260401c5b6110008216156111295768010000000000000b170260401c5b610800821615611142576801000000000000058c0260401c5b61040082161561115b57680100000000000002c60260401c5b61020082161561117457680100000000000001630260401c5b61010082161561118d57680100000000000000b10260401c5b60808216156111a557680100000000000000590260401c5b60408216156111bd576801000000000000002c0260401c5b60208216156111d557680100000000000000160260401c5b60108216156111ed576801000000000000000b0260401c5b600882161561120557680100000000000000060260401c5b600482161561121d57680100000000000000030260401c5b600282161561123557680100000000000000010260401c5b600182161561124d57680100000000000000010260401c5b670de0b6b3a76400000260409190911c60bf031c90565b6000600160801b821061128457608091821c9161128190826113cf565b90505b600160401b82106112a257604091821c9161129f90826113cf565b90505b64010000000082106112c157602091821c916112be90826113cf565b90505b6201000082106112de57601091821c916112db90826113cf565b90505b61010082106112fa57600891821c916112f790826113cf565b90505b6010821061131557600491821c9161131290826113cf565b90505b6004821061133057600291821c9161132d90826113cf565b90505b6002821061083e576104a36001826113cf565b600080600080600080600060e0888a03121561135d578283fd5b505085359760208701359750604087013596606081013596506080810135955060a0810135945060c0013592509050565b600080821280156001600160ff1b03849003851316156113b0576113b0611440565b600160ff1b83900384128116156113c9576113c9611440565b50500190565b600082198211156113e2576113e2611440565b500190565b60008083128015600160ff1b85018412161561140557611405611440565b6001600160ff1b038401831381161561142057611420611440565b50500390565b6000600160ff1b82141561143c5761143c611440565b0390565b634e487b7160e01b600052601160045260246000fdfea2646970667358221220ae08e7845dbe0cfe92ebb982be9f439ddd00c1738ec34ee357689befeafbfe1064736f6c63430008040033\";\n","/* Autogenerated file. Do not edit manually. */\n/* tslint:disable */\n/* eslint-disable */\n\nimport { Signer } from \"ethers\";\nimport { Provider, TransactionRequest } from \"@ethersproject/providers\";\nimport { Contract, ContractFactory, Overrides } from \"@ethersproject/contracts\";\n\nimport type { OptionsManager } from \"./OptionsManager\";\n\nexport class OptionsManagerFactory extends ContractFactory {\n  constructor(signer?: Signer) {\n    super(_abi, _bytecode, signer);\n  }\n\n  deploy(overrides?: Overrides): Promise<OptionsManager> {\n    return super.deploy(overrides || {}) as Promise<OptionsManager>;\n  }\n  getDeployTransaction(overrides?: Overrides): TransactionRequest {\n    return super.getDeployTransaction(overrides || {});\n  }\n  attach(address: string): OptionsManager {\n    return super.attach(address) as OptionsManager;\n  }\n  connect(signer: Signer): OptionsManagerFactory {\n    return super.connect(signer) as OptionsManagerFactory;\n  }\n  static connect(\n    address: string,\n    signerOrProvider: Signer | Provider\n  ): OptionsManager {\n    return new Contract(address, _abi, signerOrProvider) as OptionsManager;\n  }\n}\n\nconst _abi = [\n  {\n    inputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"constructor\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"owner\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"approved\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"uint256\",\n        name: \"tokenId\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"Approval\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"owner\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"operator\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"bool\",\n        name: \"approved\",\n        type: \"bool\",\n      },\n    ],\n    name: \"ApprovalForAll\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"bytes32\",\n        name: \"role\",\n        type: \"bytes32\",\n      },\n      {\n        indexed: true,\n        internalType: \"bytes32\",\n        name: \"previousAdminRole\",\n        type: \"bytes32\",\n      },\n      {\n        indexed: true,\n        internalType: \"bytes32\",\n        name: \"newAdminRole\",\n        type: \"bytes32\",\n      },\n    ],\n    name: \"RoleAdminChanged\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"bytes32\",\n        name: \"role\",\n        type: \"bytes32\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"sender\",\n        type: \"address\",\n      },\n    ],\n    name: \"RoleGranted\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"bytes32\",\n        name: \"role\",\n        type: \"bytes32\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"sender\",\n        type: \"address\",\n      },\n    ],\n    name: \"RoleRevoked\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"from\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"uint256\",\n        name: \"tokenId\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"Transfer\",\n    type: \"event\",\n  },\n  {\n    inputs: [],\n    name: \"DEFAULT_ADMIN_ROLE\",\n    outputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"\",\n        type: \"bytes32\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"HEGIC_POOL_ROLE\",\n    outputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"\",\n        type: \"bytes32\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"tokenId\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"approve\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"owner\",\n        type: \"address\",\n      },\n    ],\n    name: \"balanceOf\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"holder\",\n        type: \"address\",\n      },\n    ],\n    name: \"createOptionFor\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"id\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"tokenId\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"getApproved\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"role\",\n        type: \"bytes32\",\n      },\n    ],\n    name: \"getRoleAdmin\",\n    outputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"\",\n        type: \"bytes32\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"role\",\n        type: \"bytes32\",\n      },\n      {\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n    ],\n    name: \"grantRole\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"role\",\n        type: \"bytes32\",\n      },\n      {\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n    ],\n    name: \"hasRole\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"owner\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"operator\",\n        type: \"address\",\n      },\n    ],\n    name: \"isApprovedForAll\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"spender\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"tokenId\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"isApprovedOrOwner\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"name\",\n    outputs: [\n      {\n        internalType: \"string\",\n        name: \"\",\n        type: \"string\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"nextTokenId\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"tokenId\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"ownerOf\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"role\",\n        type: \"bytes32\",\n      },\n      {\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n    ],\n    name: \"renounceRole\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"role\",\n        type: \"bytes32\",\n      },\n      {\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n    ],\n    name: \"revokeRole\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"from\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"tokenId\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"safeTransferFrom\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"from\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"tokenId\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"bytes\",\n        name: \"_data\",\n        type: \"bytes\",\n      },\n    ],\n    name: \"safeTransferFrom\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"operator\",\n        type: \"address\",\n      },\n      {\n        internalType: \"bool\",\n        name: \"approved\",\n        type: \"bool\",\n      },\n    ],\n    name: \"setApprovalForAll\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"bytes4\",\n        name: \"interfaceId\",\n        type: \"bytes4\",\n      },\n    ],\n    name: \"supportsInterface\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"symbol\",\n    outputs: [\n      {\n        internalType: \"string\",\n        name: \"\",\n        type: \"string\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"index\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"tokenByIndex\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"owner\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"index\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"tokenOfOwnerByIndex\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"tokenPool\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"tokenId\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"tokenURI\",\n    outputs: [\n      {\n        internalType: \"string\",\n        name: \"\",\n        type: \"string\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"totalSupply\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"from\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"tokenId\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"transferFrom\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n];\n\nconst _bytecode =\n  \"0x60806040526000600b553480156200001657600080fd5b50604080518082018252601b81527f43617470756c6c204f7074696f6e732028546f6b656e697a656429000000000060208083019182528351808501909452600784526610d0551415531360ca1b9084015281519192916200007b916000916200015d565b508051620000919060019060208401906200015d565b50620000a391506000905033620000a9565b62000240565b620000b58282620000b9565b5050565b6000828152600a602090815260408083206001600160a01b038516845290915290205460ff16620000b5576000828152600a602090815260408083206001600160a01b03851684529091529020805460ff19166001179055620001193390565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b8280546200016b9062000203565b90600052602060002090601f0160209004810192826200018f5760008555620001da565b82601f10620001aa57805160ff1916838001178555620001da565b82800160010185558215620001da579182015b82811115620001da578251825591602001919060010190620001bd565b50620001e8929150620001ec565b5090565b5b80821115620001e85760008155600101620001ed565b600181811c908216806200021857607f821691505b602082108114156200023a57634e487b7160e01b600052602260045260246000fd5b50919050565b611f7e80620002506000396000f3fe608060405234801561001057600080fd5b50600436106101a95760003560e01c80636352211e116100f9578063a217fddf11610097578063c40c11bb11610071578063c40c11bb14610397578063c87b56dd146103c0578063d547741f146103d3578063e985e9c5146103e657600080fd5b8063a217fddf14610369578063a22cb46514610371578063b88d4fde1461038457600080fd5b806391d14854116100d357806391d148541461031457806395d89b41146103275780639606c0801461032f57806397eef5b71461034257600080fd5b80636352211e146102e557806370a08231146102f857806375794a3c1461030b57600080fd5b8063248a9ca31161016657806336568abe1161014057806336568abe1461029957806342842e0e146102ac578063430c2081146102bf5780634f6ccce7146102d257600080fd5b8063248a9ca3146102505780632f2ff15d146102735780632f745c591461028657600080fd5b806301ffc9a7146101ae57806306fdde03146101d6578063081812fc146101eb578063095ea7b31461021657806318160ddd1461022b57806323b872dd1461023d575b600080fd5b6101c16101bc366004611be9565b610422565b60405190151581526020015b60405180910390f35b6101de61045c565b6040516101cd9190611d2e565b6101fe6101f9366004611baf565b6104ee565b6040516001600160a01b0390911681526020016101cd565b610229610224366004611b86565b610588565b005b6008545b6040519081526020016101cd565b61022961024b366004611a3c565b61069e565b61022f61025e366004611baf565b6000908152600a602052604090206001015490565b610229610281366004611bc7565b6106cf565b61022f610294366004611b86565b6106f5565b6102296102a7366004611bc7565b61078b565b6102296102ba366004611a3c565b610809565b6101c16102cd366004611b86565b610824565b61022f6102e0366004611baf565b6108a3565b6101fe6102f3366004611baf565b610944565b61022f6103063660046119f0565b6109bb565b61022f600b5481565b6101c1610322366004611bc7565b610a42565b6101de610a6d565b61022f61033d3660046119f0565b610a7c565b61022f7f985cb37a5a8b8be3316b4239830f14f158762f12abaae14c979a055dd9bbee6f81565b61022f600081565b61022961037f366004611b4c565b610aed565b610229610392366004611a77565b610bb2565b6101fe6103a5366004611baf565b600c602052600090815260409020546001600160a01b031681565b6101de6103ce366004611baf565b610bea565b6102296103e1366004611bc7565b610cd2565b6101c16103f4366004611a0a565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b60006001600160e01b0319821663088378dd60e11b1480610447575061044782610cf8565b80610456575061045682610d1d565b92915050565b60606000805461046b90611e89565b80601f016020809104026020016040519081016040528092919081815260200182805461049790611e89565b80156104e45780601f106104b9576101008083540402835291602001916104e4565b820191906000526020600020905b8154815290600101906020018083116104c757829003601f168201915b5050505050905090565b6000818152600260205260408120546001600160a01b031661056c5760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084015b60405180910390fd5b506000908152600460205260409020546001600160a01b031690565b600061059382610944565b9050806001600160a01b0316836001600160a01b031614156106015760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b6064820152608401610563565b336001600160a01b038216148061061d575061061d81336103f4565b61068f5760405162461bcd60e51b815260206004820152603860248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760448201527f6e6572206e6f7220617070726f76656420666f7220616c6c00000000000000006064820152608401610563565b6106998383610d6d565b505050565b6106a83382610ddb565b6106c45760405162461bcd60e51b815260040161056390611d93565b610699838383610e5f565b6000828152600a60205260409020600101546106eb813361100a565b610699838361106e565b6000610700836109bb565b82106107625760405162461bcd60e51b815260206004820152602b60248201527f455243373231456e756d657261626c653a206f776e657220696e646578206f7560448201526a74206f6620626f756e647360a81b6064820152608401610563565b506001600160a01b03919091166000908152600660209081526040808320938352929052205490565b6001600160a01b03811633146107fb5760405162461bcd60e51b815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201526e103937b632b9903337b91039b2b63360891b6064820152608401610563565b61080582826110f4565b5050565b61069983838360405180602001604052806000815250610bb2565b60008061083083610944565b9050806001600160a01b0316846001600160a01b0316148061086b5750836001600160a01b0316610860846104ee565b6001600160a01b0316145b8061089b57506001600160a01b0380821660009081526005602090815260408083209388168352929052205460ff165b949350505050565b60006108ae60085490565b82106109115760405162461bcd60e51b815260206004820152602c60248201527f455243373231456e756d657261626c653a20676c6f62616c20696e646578206f60448201526b7574206f6620626f756e647360a01b6064820152608401610563565b6008828154811061093257634e487b7160e01b600052603260045260246000fd5b90600052602060002001549050919050565b6000818152600260205260408120546001600160a01b0316806104565760405162461bcd60e51b815260206004820152602960248201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460448201526832b73a103a37b5b2b760b91b6064820152608401610563565b60006001600160a01b038216610a265760405162461bcd60e51b815260206004820152602a60248201527f4552433732313a2062616c616e636520717565727920666f7220746865207a65604482015269726f206164647265737360b01b6064820152608401610563565b506001600160a01b031660009081526003602052604090205490565b6000918252600a602090815260408084206001600160a01b0393909316845291905290205460ff1690565b60606001805461046b90611e89565b60007f985cb37a5a8b8be3316b4239830f14f158762f12abaae14c979a055dd9bbee6f610aa9813361100a565b600b8054906000610ab983611ebe565b909155506000818152600c6020526040902080546001600160a01b031916331790559150610ae7838361115b565b50919050565b6001600160a01b038216331415610b465760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c6572000000000000006044820152606401610563565b3360008181526005602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b610bbc3383610ddb565b610bd85760405162461bcd60e51b815260040161056390611d93565b610be484848484611175565b50505050565b6000818152600260205260409020546060906001600160a01b0316610c695760405162461bcd60e51b815260206004820152602f60248201527f4552433732314d657461646174613a2055524920717565727920666f72206e6f60448201526e3732bc34b9ba32b73a103a37b5b2b760891b6064820152608401610563565b6000610c8060408051602081019091526000815290565b90506000815111610ca05760405180602001604052806000815250610ccb565b80610caa846111a8565b604051602001610cbb929190611c4d565b6040516020818303038152906040525b9392505050565b6000828152600a6020526040902060010154610cee813361100a565b61069983836110f4565b60006001600160e01b03198216637965db0b60e01b14806104565750610456826112c2565b60006001600160e01b031982166380ac58cd60e01b1480610d4e57506001600160e01b03198216635b5e139f60e01b145b8061045657506301ffc9a760e01b6001600160e01b0319831614610456565b600081815260046020526040902080546001600160a01b0319166001600160a01b0384169081179091558190610da282610944565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6000818152600260205260408120546001600160a01b0316610e545760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b6064820152608401610563565b600061083083610944565b826001600160a01b0316610e7282610944565b6001600160a01b031614610eda5760405162461bcd60e51b815260206004820152602960248201527f4552433732313a207472616e73666572206f6620746f6b656e2074686174206960448201526839903737ba1037bbb760b91b6064820152608401610563565b6001600160a01b038216610f3c5760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b6064820152608401610563565b610f478383836112e7565b610f52600082610d6d565b6001600160a01b0383166000908152600360205260408120805460019290610f7b908490611e2f565b90915550506001600160a01b0382166000908152600360205260408120805460019290610fa9908490611de4565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b6110148282610a42565b6108055761102c816001600160a01b031660146112f2565b6110378360206112f2565b604051602001611048929190611c7c565b60408051601f198184030181529082905262461bcd60e51b825261056391600401611d2e565b6110788282610a42565b610805576000828152600a602090815260408083206001600160a01b03851684529091529020805460ff191660011790556110b03390565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b6110fe8282610a42565b15610805576000828152600a602090815260408083206001600160a01b0385168085529252808320805460ff1916905551339285917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45050565b6108058282604051806020016040528060008152506114d4565b611180848484610e5f565b61118c84848484611507565b610be45760405162461bcd60e51b815260040161056390611d41565b6060816111cc5750506040805180820190915260018152600360fc1b602082015290565b8160005b81156111f657806111e081611ebe565b91506111ef9050600a83611dfc565b91506111d0565b60008167ffffffffffffffff81111561121f57634e487b7160e01b600052604160045260246000fd5b6040519080825280601f01601f191660200182016040528015611249576020820181803683370190505b5090505b841561089b5761125e600183611e2f565b915061126b600a86611ed9565b611276906030611de4565b60f81b81838151811061129957634e487b7160e01b600052603260045260246000fd5b60200101906001600160f81b031916908160001a9053506112bb600a86611dfc565b945061124d565b60006001600160e01b0319821663780e9d6360e01b1480610456575061045682610d1d565b610699838383611614565b60606000611301836002611e10565b61130c906002611de4565b67ffffffffffffffff81111561133257634e487b7160e01b600052604160045260246000fd5b6040519080825280601f01601f19166020018201604052801561135c576020820181803683370190505b509050600360fc1b8160008151811061138557634e487b7160e01b600052603260045260246000fd5b60200101906001600160f81b031916908160001a905350600f60fb1b816001815181106113c257634e487b7160e01b600052603260045260246000fd5b60200101906001600160f81b031916908160001a90535060006113e6846002611e10565b6113f1906001611de4565b90505b6001811115611485576f181899199a1a9b1b9c1cb0b131b232b360811b85600f166010811061143357634e487b7160e01b600052603260045260246000fd5b1a60f81b82828151811061145757634e487b7160e01b600052603260045260246000fd5b60200101906001600160f81b031916908160001a90535060049490941c9361147e81611e72565b90506113f4565b508315610ccb5760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e746044820152606401610563565b6114de83836116cc565b6114eb6000848484611507565b6106995760405162461bcd60e51b815260040161056390611d41565b60006001600160a01b0384163b1561160957604051630a85bd0160e11b81526001600160a01b0385169063150b7a029061154b903390899088908890600401611cf1565b602060405180830381600087803b15801561156557600080fd5b505af1925050508015611595575060408051601f3d908101601f1916820190925261159291810190611c05565b60015b6115ef573d8080156115c3576040519150601f19603f3d011682016040523d82523d6000602084013e6115c8565b606091505b5080516115e75760405162461bcd60e51b815260040161056390611d41565b805181602001fd5b6001600160e01b031916630a85bd0160e11b14905061089b565b506001949350505050565b6001600160a01b03831661166f5761166a81600880546000838152600960205260408120829055600182018355919091527ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee30155565b611692565b816001600160a01b0316836001600160a01b03161461169257611692838261181a565b6001600160a01b0382166116a957610699816118b7565b826001600160a01b0316826001600160a01b031614610699576106998282611990565b6001600160a01b0382166117225760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f20616464726573736044820152606401610563565b6000818152600260205260409020546001600160a01b0316156117875760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e746564000000006044820152606401610563565b611793600083836112e7565b6001600160a01b03821660009081526003602052604081208054600192906117bc908490611de4565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b03861690811790915590518392907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b60006001611827846109bb565b6118319190611e2f565b600083815260076020526040902054909150808214611884576001600160a01b03841660009081526006602090815260408083208584528252808320548484528184208190558352600790915290208190555b5060009182526007602090815260408084208490556001600160a01b039094168352600681528383209183525290812055565b6008546000906118c990600190611e2f565b600083815260096020526040812054600880549394509092849081106118ff57634e487b7160e01b600052603260045260246000fd5b90600052602060002001549050806008838154811061192e57634e487b7160e01b600052603260045260246000fd5b600091825260208083209091019290925582815260099091526040808220849055858252812055600880548061197457634e487b7160e01b600052603160045260246000fd5b6001900381819060005260206000200160009055905550505050565b600061199b836109bb565b6001600160a01b039093166000908152600660209081526040808320868452825280832085905593825260079052919091209190915550565b80356001600160a01b03811681146119eb57600080fd5b919050565b600060208284031215611a01578081fd5b610ccb826119d4565b60008060408385031215611a1c578081fd5b611a25836119d4565b9150611a33602084016119d4565b90509250929050565b600080600060608486031215611a50578081fd5b611a59846119d4565b9250611a67602085016119d4565b9150604084013590509250925092565b60008060008060808587031215611a8c578081fd5b611a95856119d4565b9350611aa3602086016119d4565b925060408501359150606085013567ffffffffffffffff80821115611ac6578283fd5b818701915087601f830112611ad9578283fd5b813581811115611aeb57611aeb611f19565b604051601f8201601f19908116603f01168101908382118183101715611b1357611b13611f19565b816040528281528a6020848701011115611b2b578586fd5b82602086016020830137918201602001949094529598949750929550505050565b60008060408385031215611b5e578182fd5b611b67836119d4565b915060208301358015158114611b7b578182fd5b809150509250929050565b60008060408385031215611b98578182fd5b611ba1836119d4565b946020939093013593505050565b600060208284031215611bc0578081fd5b5035919050565b60008060408385031215611bd9578182fd5b82359150611a33602084016119d4565b600060208284031215611bfa578081fd5b8135610ccb81611f2f565b600060208284031215611c16578081fd5b8151610ccb81611f2f565b60008151808452611c39816020860160208601611e46565b601f01601f19169290920160200192915050565b60008351611c5f818460208801611e46565b835190830190611c73818360208801611e46565b01949350505050565b7f416363657373436f6e74726f6c3a206163636f756e7420000000000000000000815260008351611cb4816017850160208801611e46565b7001034b99036b4b9b9b4b733903937b6329607d1b6017918401918201528351611ce5816028840160208801611e46565b01602801949350505050565b6001600160a01b0385811682528416602082015260408101839052608060608201819052600090611d2490830184611c21565b9695505050505050565b602081526000610ccb6020830184611c21565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b60208082526031908201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f6040820152701ddb995c881b9bdc88185c1c1c9bdd9959607a1b606082015260800190565b60008219821115611df757611df7611eed565b500190565b600082611e0b57611e0b611f03565b500490565b6000816000190483118215151615611e2a57611e2a611eed565b500290565b600082821015611e4157611e41611eed565b500390565b60005b83811015611e61578181015183820152602001611e49565b83811115610be45750506000910152565b600081611e8157611e81611eed565b506000190190565b600181811c90821680611e9d57607f821691505b60208210811415610ae757634e487b7160e01b600052602260045260246000fd5b6000600019821415611ed257611ed2611eed565b5060010190565b600082611ee857611ee8611f03565b500690565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160e01b031981168114611f4557600080fd5b5056fea2646970667358221220aedea6182fee9779ec7cfe6edee3564d27191500560b82ad22634c0bbb9ebe0664736f6c63430008040033\";\n","/* Autogenerated file. Do not edit manually. */\n/* tslint:disable */\n/* eslint-disable */\n\nimport { Signer, BigNumberish } from \"ethers\";\nimport { Provider, TransactionRequest } from \"@ethersproject/providers\";\nimport { Contract, ContractFactory, Overrides } from \"@ethersproject/contracts\";\n\nimport type { PriceCalculator } from \"./PriceCalculator\";\n\nexport class PriceCalculatorFactory extends ContractFactory {\n  constructor(signer?: Signer) {\n    super(_abi, _bytecode, signer);\n  }\n\n  deploy(\n    initialRate: BigNumberish,\n    _priceProvider: string,\n    _pool: string,\n    _model: string,\n    overrides?: Overrides\n  ): Promise<PriceCalculator> {\n    return super.deploy(\n      initialRate,\n      _priceProvider,\n      _pool,\n      _model,\n      overrides || {}\n    ) as Promise<PriceCalculator>;\n  }\n  getDeployTransaction(\n    initialRate: BigNumberish,\n    _priceProvider: string,\n    _pool: string,\n    _model: string,\n    overrides?: Overrides\n  ): TransactionRequest {\n    return super.getDeployTransaction(\n      initialRate,\n      _priceProvider,\n      _pool,\n      _model,\n      overrides || {}\n    );\n  }\n  attach(address: string): PriceCalculator {\n    return super.attach(address) as PriceCalculator;\n  }\n  connect(signer: Signer): PriceCalculatorFactory {\n    return super.connect(signer) as PriceCalculatorFactory;\n  }\n  static connect(\n    address: string,\n    signerOrProvider: Signer | Provider\n  ): PriceCalculator {\n    return new Contract(address, _abi, signerOrProvider) as PriceCalculator;\n  }\n}\n\nconst _abi = [\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"initialRate\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"contract AggregatorV3Interface\",\n        name: \"_priceProvider\",\n        type: \"address\",\n      },\n      {\n        internalType: \"contract IHegicPool\",\n        name: \"_pool\",\n        type: \"address\",\n      },\n      {\n        internalType: \"contract IBlackScholesModel\",\n        name: \"_model\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"constructor\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"DaoShareChanged\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: \"int256\",\n        name: \"\",\n        type: \"int256\",\n      },\n    ],\n    name: \"IVChanged\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"previousOwner\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"newOwner\",\n        type: \"address\",\n      },\n    ],\n    name: \"OwnershipTransferred\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: \"int256\",\n        name: \"\",\n        type: \"int256\",\n      },\n    ],\n    name: \"RiskFreeRateChanged\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: \"int256\",\n        name: \"\",\n        type: \"int256\",\n      },\n    ],\n    name: \"SwingRateChanged\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"UtilizationRateChangeChanged\",\n    type: \"event\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"currentPrice\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amount\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"period\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"strike\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"_calculatePrice\",\n    outputs: [\n      {\n        internalType: \"int256\",\n        name: \"callPrice\",\n        type: \"int256\",\n      },\n      {\n        internalType: \"int256\",\n        name: \"putPrice\",\n        type: \"int256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"period\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amount\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"strike\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"bool\",\n        name: \"isCall\",\n        type: \"bool\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"outDecimals\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"calculateTotalPremium\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"settlementFee\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"premium\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"daoshare\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"impliedVolRate\",\n    outputs: [\n      {\n        internalType: \"int256\",\n        name: \"\",\n        type: \"int256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"model\",\n    outputs: [\n      {\n        internalType: \"contract IBlackScholesModel\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"owner\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"pool\",\n    outputs: [\n      {\n        internalType: \"contract IHegicPool\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"priceProvider\",\n    outputs: [\n      {\n        internalType: \"contract AggregatorV3Interface\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"renounceOwnership\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"riskFreeRate\",\n    outputs: [\n      {\n        internalType: \"int256\",\n        name: \"\",\n        type: \"int256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"value\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"setDaoShare\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"int256\",\n        name: \"value\",\n        type: \"int256\",\n      },\n    ],\n    name: \"setImpliedVolRate\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"int256\",\n        name: \"value\",\n        type: \"int256\",\n      },\n    ],\n    name: \"setSwingRate\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"value\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"setUtilizationRate\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"swingRate\",\n    outputs: [\n      {\n        internalType: \"int256\",\n        name: \"\",\n        type: \"int256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"newOwner\",\n        type: \"address\",\n      },\n    ],\n    name: \"transferOwnership\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"utilizationRate\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n];\n\nconst _bytecode =\n  \"0x60806040526000600155670c7d713b49da0000600255670214e8348c4effff196003556000600455600a60055534801561003857600080fd5b50604051610d74380380610d74833981016040819052610057916100f9565b610060336100a9565b600780546001600160a01b03199081166001600160a01b039485161790915560068054821694841694909417909355600293909355600880549092169216919091179055610165565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000806000806080858703121561010e578384fd5b8451935060208501516101208161014d565b60408601519093506101318161014d565b60608601519092506101428161014d565b939692955090935050565b6001600160a01b038116811461016257600080fd5b50565b610c00806101746000396000f3fe608060405234801561001057600080fd5b506004361061010b5760003560e01c80636c321c8a116100a25780638da5cb5b116100715780638da5cb5b14610203578063b888879e14610214578063e472274114610227578063f2fde38b1461023a578063f3cc69931461024d57600080fd5b80636c321c8a146101cc5780636fadc3ca146101d5578063715018a6146101e8578063818add93146101f057600080fd5b806318f88e5b116100de57806318f88e5b1461018e57806340774ff6146101a55780635c28a23d146101ba5780635ff5a38b146101c357600080fd5b8063066b8ec9146101105780630ad9d0521461013d5780630fab28d51461016857806316f0115b1461017b575b600080fd5b61012361011e366004610958565b610256565b604080519283526020830191909152015b60405180910390f35b600854610150906001600160a01b031681565b6040516001600160a01b039091168152602001610134565b6101236101763660046109a4565b610447565b600754610150906001600160a01b031681565b61019760025481565b604051908152602001610134565b6101b86101b336600461091d565b610507565b005b61019760035481565b61019760055481565b61019760045481565b6101b86101e336600461091d565b61056d565b6101b861060e565b6101b86101fe36600461091d565b610644565b6000546001600160a01b0316610150565b600654610150906001600160a01b031681565b6101b861023536600461091d565b6106c6565b6101b86102483660046108ef565b610751565b61019760015481565b60008060006102636107ec565b90508561026e578095505b620151808810158015610284575062278d008811155b6102c55760405162461bcd60e51b815260206004820152600d60248201526c125b9d985b1a5914195c9a5bd9609a1b60448201526064015b60405180910390fd5b6102d0600582610a71565b6102da9082610a59565b8611156103195760405162461bcd60e51b815260206004820152600d60248201526c0a6e8e4d2d6caa8dede90d2ced609b1b60448201526064016102bc565b610324600582610a71565b61032e9082610b9d565b86101561036c5760405162461bcd60e51b815260206004820152600c60248201526b537472696b65546f6f4c6f7760a01b60448201526064016102bc565b600080610392610381846402540be400610b7e565b8a8c6101768c6402540be400610b7e565b915091506000876103a357816103a5565b825b9050836103b6826305f5e100610b7e565b6103c09190610a71565b905060128710156103f2576103d6876012610b9d565b6103e190600a610ad4565b6103eb9082610a71565b905061041e565b601287111561041e57610406601288610b9d565b61041190600a610ad4565b61041b9082610b7e565b90505b60055461042b9082610a71565b95506104378682610b9d565b9450505050509550959350505050565b600854600354600254600154604051636002444f60e01b815260048101889052602481018990526044810186905260648101879052608481019390935260a483019190915260c482015260009182916001600160a01b0390911690636002444f9060e401604080518083038186803b1580156104c257600080fd5b505afa1580156104d6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104fa9190610935565b9097909650945050505050565b6000546001600160a01b031633146105315760405162461bcd60e51b81526004016102bc90610a24565b60048190556040518181527f03c5967b3d387a03581f5004281e82580c72e6d4186a21d1b8cd6365b115457a906020015b60405180910390a150565b6000546001600160a01b031633146105975760405162461bcd60e51b81526004016102bc90610a24565b600a8110156105d95760405162461bcd60e51b815260206004820152600e60248201526d0ecc2d8eaca40e8dede40d0d2ced60931b60448201526064016102bc565b60058190556040518181527f95697dda342a063050456c907608b122faacc22a4cc4bf88c50285feba565ed590602001610562565b6000546001600160a01b031633146106385760405162461bcd60e51b81526004016102bc90610a24565b6106426000610880565b565b6000546001600160a01b0316331461066e5760405162461bcd60e51b81526004016102bc90610a24565b600081121580156106885750680ad78ebc5ac62000008113155b61069157600080fd5b60028190556040518181527fad86d0f27ea32ac315abf9f185f9ba7b1ba3871c047c9448a825b4af5f31b89690602001610562565b6000546001600160a01b031633146106f05760405162461bcd60e51b81526004016102bc90610a24565b68056bc75e2d630fffff198112158015610713575068056bc75e2d631000008113155b61071c57600080fd5b60038190556040518181527fccd87504c7b552cca51a68ac74442e0b6972e3af7eba3e7bbbb9dee12929311690602001610562565b6000546001600160a01b0316331461077b5760405162461bcd60e51b81526004016102bc90610a24565b6001600160a01b0381166107e05760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016102bc565b6107e981610880565b50565b600080600660009054906101000a90046001600160a01b03166001600160a01b031663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561083d57600080fd5b505afa158015610851573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061087591906109d5565b509195945050505050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b805169ffffffffffffffffffff811681146108ea57600080fd5b919050565b600060208284031215610900578081fd5b81356001600160a01b0381168114610916578182fd5b9392505050565b60006020828403121561092e578081fd5b5035919050565b60008060408385031215610947578081fd5b505080516020909101519092909150565b600080600080600060a0868803121561096f578081fd5b85359450602086013593506040860135925060608601358015158114610993578182fd5b949793965091946080013592915050565b600080600080608085870312156109b9578384fd5b5050823594602084013594506040840135936060013592509050565b600080600080600060a086880312156109ec578081fd5b6109f5866108d0565b9450602086015193506040860151925060608601519150610a18608087016108d0565b90509295509295909350565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60008219821115610a6c57610a6c610bb4565b500190565b600082610a8c57634e487b7160e01b81526012600452602481fd5b500490565b600181815b80851115610acc578160001904821115610ab257610ab2610bb4565b80851615610abf57918102915b93841c9390800290610a96565b509250929050565b60006109168383600082610aea57506001610b78565b81610af757506000610b78565b8160018114610b0d5760028114610b1757610b33565b6001915050610b78565b60ff841115610b2857610b28610bb4565b50506001821b610b78565b5060208310610133831016604e8410600b8410161715610b56575081810a610b78565b610b608383610a91565b8060001904821115610b7457610b74610bb4565b0290505b92915050565b6000816000190483118215151615610b9857610b98610bb4565b500290565b600082821015610baf57610baf610bb4565b500390565b634e487b7160e01b600052601160045260246000fdfea2646970667358221220e46bca2505173b1f53d582813fcc78c368388b7e1dc18d0c6b71c380329e986364736f6c63430008040033\";\n","/* Autogenerated file. Do not edit manually. */\n/* tslint:disable */\n/* eslint-disable */\n\nimport { Signer } from \"ethers\";\nimport { Provider, TransactionRequest } from \"@ethersproject/providers\";\nimport { Contract, ContractFactory, Overrides } from \"@ethersproject/contracts\";\n\nimport type { HegicCall } from \"./HegicCall\";\n\nexport class HegicCallFactory extends ContractFactory {\n  constructor(signer?: Signer) {\n    super(_abi, _bytecode, signer);\n  }\n\n  deploy(\n    _token: string,\n    name: string,\n    symbol: string,\n    manager: string,\n    _pricer1: string,\n    _pricer2: string,\n    _pricer3: string,\n    _priceProvider: string,\n    _assetPriceToken: string,\n    overrides?: Overrides\n  ): Promise<HegicCall> {\n    return super.deploy(\n      _token,\n      name,\n      symbol,\n      manager,\n      _pricer1,\n      _pricer2,\n      _pricer3,\n      _priceProvider,\n      _assetPriceToken,\n      overrides || {}\n    ) as Promise<HegicCall>;\n  }\n  getDeployTransaction(\n    _token: string,\n    name: string,\n    symbol: string,\n    manager: string,\n    _pricer1: string,\n    _pricer2: string,\n    _pricer3: string,\n    _priceProvider: string,\n    _assetPriceToken: string,\n    overrides?: Overrides\n  ): TransactionRequest {\n    return super.getDeployTransaction(\n      _token,\n      name,\n      symbol,\n      manager,\n      _pricer1,\n      _pricer2,\n      _pricer3,\n      _priceProvider,\n      _assetPriceToken,\n      overrides || {}\n    );\n  }\n  attach(address: string): HegicCall {\n    return super.attach(address) as HegicCall;\n  }\n  connect(signer: Signer): HegicCallFactory {\n    return super.connect(signer) as HegicCallFactory;\n  }\n  static connect(\n    address: string,\n    signerOrProvider: Signer | Provider\n  ): HegicCall {\n    return new Contract(address, _abi, signerOrProvider) as HegicCall;\n  }\n}\n\nconst _abi = [\n  {\n    inputs: [\n      {\n        internalType: \"contract IERC20\",\n        name: \"_token\",\n        type: \"address\",\n      },\n      {\n        internalType: \"string\",\n        name: \"name\",\n        type: \"string\",\n      },\n      {\n        internalType: \"string\",\n        name: \"symbol\",\n        type: \"string\",\n      },\n      {\n        internalType: \"contract IOptionsManager\",\n        name: \"manager\",\n        type: \"address\",\n      },\n      {\n        internalType: \"contract IPriceCalculator\",\n        name: \"_pricer1\",\n        type: \"address\",\n      },\n      {\n        internalType: \"contract IPriceCalculator\",\n        name: \"_pricer2\",\n        type: \"address\",\n      },\n      {\n        internalType: \"contract IPriceCalculator\",\n        name: \"_pricer3\",\n        type: \"address\",\n      },\n      {\n        internalType: \"contract AggregatorV3Interface\",\n        name: \"_priceProvider\",\n        type: \"address\",\n      },\n      {\n        internalType: \"contract IERC20\",\n        name: \"_assetPriceToken\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"constructor\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"uint256\",\n        name: \"id\",\n        type: \"uint256\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"settlementFee\",\n        type: \"uint256\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"premium\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"Acquired\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"owner\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"approved\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"uint256\",\n        name: \"tokenId\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"Approval\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"owner\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"operator\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"bool\",\n        name: \"approved\",\n        type: \"bool\",\n      },\n    ],\n    name: \"ApprovalForAll\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"uint256\",\n        name: \"id\",\n        type: \"uint256\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"profit\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"Exercised\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"uint256\",\n        name: \"id\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"Expired\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"bytes32\",\n        name: \"role\",\n        type: \"bytes32\",\n      },\n      {\n        indexed: true,\n        internalType: \"bytes32\",\n        name: \"previousAdminRole\",\n        type: \"bytes32\",\n      },\n      {\n        indexed: true,\n        internalType: \"bytes32\",\n        name: \"newAdminRole\",\n        type: \"bytes32\",\n      },\n    ],\n    name: \"RoleAdminChanged\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"bytes32\",\n        name: \"role\",\n        type: \"bytes32\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"sender\",\n        type: \"address\",\n      },\n    ],\n    name: \"RoleGranted\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"bytes32\",\n        name: \"role\",\n        type: \"bytes32\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"sender\",\n        type: \"address\",\n      },\n    ],\n    name: \"RoleRevoked\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"from\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"uint256\",\n        name: \"tokenId\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"Transfer\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"uint256\",\n        name: \"trancheID\",\n        type: \"uint256\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"amount\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"Withdrawn\",\n    type: \"event\",\n  },\n  {\n    inputs: [],\n    name: \"DEFAULT_ADMIN_ROLE\",\n    outputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"\",\n        type: \"bytes32\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"INITIAL_RATE\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"tokenId\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"approve\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"assetPriceToken\",\n    outputs: [\n      {\n        internalType: \"contract IERC20\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"atmPricer\",\n    outputs: [\n      {\n        internalType: \"contract IPriceCalculator\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"availableBalance\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"balance\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"owner\",\n        type: \"address\",\n      },\n    ],\n    name: \"balanceOf\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"period\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amount\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"strike\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"calculateTotalPremium\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"settlementFee\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"premium\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"collateralizationRatio\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"id\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"exercise\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"tokenId\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"getApproved\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"role\",\n        type: \"bytes32\",\n      },\n    ],\n    name: \"getRoleAdmin\",\n    outputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"\",\n        type: \"bytes32\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"role\",\n        type: \"bytes32\",\n      },\n      {\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n    ],\n    name: \"grantRole\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"role\",\n        type: \"bytes32\",\n      },\n      {\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n    ],\n    name: \"hasRole\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"inputValidation\",\n    outputs: [\n      {\n        internalType: \"contract IPoolInputConstraint\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"owner\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"operator\",\n        type: \"address\",\n      },\n    ],\n    name: \"isApprovedForAll\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"isCall\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"pure\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"itmPricer\",\n    outputs: [\n      {\n        internalType: \"contract IPriceCalculator\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"lockedAmount\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"lockupPeriodForUnhedgedTranches\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"maxDepositAmount\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"maxUtilizationRate\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"name\",\n    outputs: [\n      {\n        internalType: \"string\",\n        name: \"\",\n        type: \"string\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"options\",\n    outputs: [\n      {\n        internalType: \"enum IHegicPool.OptionState\",\n        name: \"state\",\n        type: \"uint8\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"strike\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amount\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"lockedAmount\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"expired\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"premium\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"profit\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"optionsManager\",\n    outputs: [\n      {\n        internalType: \"contract IOptionsManager\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"otmPricer\",\n    outputs: [\n      {\n        internalType: \"contract IPriceCalculator\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"tokenId\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"ownerOf\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"amount\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"priceOf\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"priceProvider\",\n    outputs: [\n      {\n        internalType: \"contract AggregatorV3Interface\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"id\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"profitOf\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amount\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"minShare\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"provideFrom\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"share\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"role\",\n        type: \"bytes32\",\n      },\n      {\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n    ],\n    name: \"renounceRole\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"role\",\n        type: \"bytes32\",\n      },\n      {\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n    ],\n    name: \"revokeRole\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"rewardsManager\",\n    outputs: [\n      {\n        internalType: \"contract IRewardsManager\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"from\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"tokenId\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"safeTransferFrom\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"from\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"tokenId\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"bytes\",\n        name: \"_data\",\n        type: \"bytes\",\n      },\n    ],\n    name: \"safeTransferFrom\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"holder\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"period\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amount\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"strike\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"sellOption\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"id\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"operator\",\n        type: \"address\",\n      },\n      {\n        internalType: \"bool\",\n        name: \"approved\",\n        type: \"bool\",\n      },\n    ],\n    name: \"setApprovalForAll\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"value\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"setCollateralizationRatio\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"contract IPoolInputConstraint\",\n        name: \"validation\",\n        type: \"address\",\n      },\n    ],\n    name: \"setInputValidator\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"unhedgedValue\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"setLockupPeriod\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"total\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"setMaxDepositAmount\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"value\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"setMaxUtilizationRate\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"contract IPriceCalculator\",\n        name: \"_otmPricer\",\n        type: \"address\",\n      },\n      {\n        internalType: \"contract IPriceCalculator\",\n        name: \"_atmPricer\",\n        type: \"address\",\n      },\n      {\n        internalType: \"contract IPriceCalculator\",\n        name: \"_itmPricer\",\n        type: \"address\",\n      },\n    ],\n    name: \"setPriceCalculator\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"contract IRewardsManager\",\n        name: \"value\",\n        type: \"address\",\n      },\n    ],\n    name: \"setRewardsManager\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"recipient\",\n        type: \"address\",\n      },\n    ],\n    name: \"setSettlementFeeRecipient\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"settlementFeeRecipient\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"bytes4\",\n        name: \"interfaceId\",\n        type: \"bytes4\",\n      },\n    ],\n    name: \"supportsInterface\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"symbol\",\n    outputs: [\n      {\n        internalType: \"string\",\n        name: \"\",\n        type: \"string\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"token\",\n    outputs: [\n      {\n        internalType: \"contract IERC20\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"index\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"tokenByIndex\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"owner\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"index\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"tokenOfOwnerByIndex\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"tokenId\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"tokenURI\",\n    outputs: [\n      {\n        internalType: \"string\",\n        name: \"\",\n        type: \"string\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"totalBalance\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"balance\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"totalSupply\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"tranches\",\n    outputs: [\n      {\n        internalType: \"enum IHegicPool.TrancheState\",\n        name: \"state\",\n        type: \"uint8\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"share\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amount\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"creationTimestamp\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"from\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"tokenId\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"transferFrom\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"unhedgedBalance\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"unhedgedShare\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"id\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"unlock\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"trancheID\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"withdraw\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"amount\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n];\n\nconst _bytecode =\n  \"0x60c060405262278d0060115560506012556032601355600019601555600060165560006017553480156200003257600080fd5b506040516200468538038062004685833981016040819052620000559162000351565b8888888888888888888787816000908051906020019062000078929190620001e6565b5080516200008e906001906020840190620001e6565b50506001600b5550620000a360003362000132565b606091821b6001600160601b031990811660a052600d80546001600160a01b03199081166001600160a01b0398891617909155600e8054821696881696909617909555600f8054861694871694909417909355601b80548516998616999099179098559390931b909216608052601c805490921694169390931790925550620004ac9950505050505050505050565b6200013e828262000142565b5050565b6000828152600a602090815260408083206001600160a01b038516845290915290205460ff166200013e576000828152600a602090815260408083206001600160a01b03851684529091529020805460ff19166001179055620001a23390565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b828054620001f49062000440565b90600052602060002090601f01602090048101928262000218576000855562000263565b82601f106200023357805160ff191683800117855562000263565b8280016001018555821562000263579182015b828111156200026357825182559160200191906001019062000246565b506200027192915062000275565b5090565b5b8082111562000271576000815560010162000276565b8051620002998162000493565b919050565b600082601f830112620002af578081fd5b81516001600160401b0380821115620002cc57620002cc6200047d565b604051601f8301601f19908116603f01168101908282118183101715620002f757620002f76200047d565b8160405283815260209250868385880101111562000313578485fd5b8491505b8382101562000336578582018301518183018401529082019062000317565b838211156200034757848385830101525b9695505050505050565b60008060008060008060008060006101208a8c03121562000370578485fd5b89516200037d8162000493565b60208b01519099506001600160401b03808211156200039a578687fd5b620003a88d838e016200029e565b995060408c0151915080821115620003be578687fd5b50620003cd8c828d016200029e565b97505060608a0151620003e08162000493565b9550620003f060808b016200028c565b94506200040060a08b016200028c565b93506200041060c08b016200028c565b92506200042060e08b016200028c565b9150620004316101008b016200028c565b90509295985092959850929598565b600181811c908216806200045557607f821691505b602082108114156200047757634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fd5b6001600160a01b0381168114620004a957600080fd5b50565b60805160601c60a05160601c61418a620004fb600039600081816107650152818161231f01526129290152600081816105500152818161136601528181611bd40152611dfe015261418a6000f3fe608060405234801561001057600080fd5b50600436106103af5760003560e01c80636d8cb529116101f4578063b9186d7d1161011a578063dcaf9c44116100ad578063e985e9c51161007c578063e985e9c514610875578063f795c4c0146108b1578063fc0c546a146108c4578063feed2342146108d757600080fd5b8063dcaf9c441461083d578063defe205314610846578063dfcb48bd14610859578063e5829d201461086257600080fd5b8063ce8ff5a4116100e9578063ce8ff5a4146107e6578063d07a1c57146107ef578063d547741f14610817578063dba99f221461082a57600080fd5b8063b9186d7d1461079a578063c4511c6a146107ad578063c771c390146107c0578063c87b56dd146107d357600080fd5b806399cd152711610192578063ad7a672f11610161578063ad7a672f14610745578063b07f0a411461074d578063b888879e14610760578063b88d4fde1461078757600080fd5b806399cd15271461070f578063a217fddf14610722578063a22cb4651461072a578063ab2f0e511461073d57600080fd5b80638ed83271116101ce5780638ed83271146106d857806391d14854146106e157806395d89b41146106f457806396350a85146106fc57600080fd5b80636d8cb5291461069f57806370a08231146106b25780637632bffb146106c557600080fd5b8063331a4060116102d95780634dbac733116102775780636198e339116102465780636198e339146106695780636352211e1461067c5780636ab28bc81461068f5780636d6364781461069857600080fd5b80634dbac733146106035780634f6ccce71461061357806352cf2a6b146106265780635d42800d1461063957600080fd5b8063409e2205116102b3578063409e22051461057257806342842e0e146105d457806347fe9412146105e757806349a1bd31146105fa57600080fd5b8063331a40601461052557806336568abe14610538578063399735bf1461054b57600080fd5b806318160ddd1161035157806326c259621161032057806326c25962146104c95780632e1a7d4d146104ec5780632f2ff15d146104ff5780632f745c591461051257600080fd5b806318160ddd14610478578063181731dc1461048057806323b872dd14610493578063248a9ca3146104a657600080fd5b8063095ea7b31161038d578063095ea7b31461041c5780630a8ddc5e1461043157806313bdde8b14610444578063178e893f1461046557600080fd5b806301ffc9a7146103b457806306fdde03146103dc578063081812fc146103f1575b600080fd5b6103c76103c2366004613b1d565b6108e0565b60405190151581526020015b60405180910390f35b6103e461091a565b6040516103d39190613e10565b6104046103ff366004613ae1565b6109ac565b6040516001600160a01b0390911681526020016103d3565b61042f61042a366004613a2c565b610a46565b005b61042f61043f366004613876565b610b5c565b610457610452366004613a57565b610b8b565b6040519081526020016103d3565b600d54610404906001600160a01b031681565b600854610457565b601854610404906001600160a01b031681565b61042f6104a13660046138e6565b610f14565b6104576104b4366004613ae1565b6000908152600a602052604090206001015490565b6104dc6104d7366004613ae1565b610f45565b6040516103d39493929190613de0565b6104576104fa366004613ae1565b610f83565b61042f61050d366004613af9565b611045565b610457610520366004613a2c565b61106b565b610457610533366004613a8b565b611101565b61042f610546366004613af9565b6115b4565b6104047f000000000000000000000000000000000000000000000000000000000000000081565b6105c1610580366004613ae1565b601a60205260009081526040902080546001820154600283015460038401546004850154600586015460069096015460ff9095169593949293919290919087565b6040516103d39796959493929190613d9e565b61042f6105e23660046138e6565b611632565b601054610404906001600160a01b031681565b61045760115481565b61045768056bc75e2d6310000081565b610457610621366004613ae1565b61164d565b61042f610634366004613ae1565b6116ee565b61042f610647366004613876565b601080546001600160a01b0319166001600160a01b0392909216919091179055565b61042f610677366004613ae1565b61177a565b61040461068a366004613ae1565b611831565b61045760145481565b60016103c7565b601c54610404906001600160a01b031681565b6104576106c0366004613876565b6118ad565b6104576106d3366004613ae1565b611934565b61045760155481565b6103c76106ef366004613af9565b6119dc565b6103e4611a07565b61042f61070a366004613876565b611a16565b61042f61071d366004613b55565b611a58565b610457600081565b61042f6107383660046139ff565b611aa4565b610457611b69565b601754610457565b61042f61075b366004613ae1565b611b81565b6104047f000000000000000000000000000000000000000000000000000000000000000081565b61042f610795366004613926565b611ec5565b6104576107a8366004613ae1565b611efd565b61042f6107bb366004613ae1565b611f0b565b61042f6107ce366004613ae1565b611f1d565b6103e46107e1366004613ae1565b611f9e565b61045760165481565b6108026107fd366004613bda565b612086565b604080519283526020830191909152016103d3565b61042f610825366004613af9565b6120a0565b600f54610404906001600160a01b031681565b61045760135481565b600c54610404906001600160a01b031681565b61045760125481565b61042f610870366004613ae1565b6120c6565b6103c76108833660046138ae565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b600e54610404906001600160a01b031681565b601b54610404906001600160a01b031681565b61045760175481565b60006001600160e01b03198216636b2435b160e01b148061090557506109058261214e565b80610914575061091482612173565b92915050565b60606000805461092990614056565b80601f016020809104026020016040519081016040528092919081815260200182805461095590614056565b80156109a25780601f10610977576101008083540402835291602001916109a2565b820191906000526020600020905b81548152906001019060200180831161098557829003601f168201915b5050505050905090565b6000818152600260205260408120546001600160a01b0316610a2a5760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084015b60405180910390fd5b506000908152600460205260409020546001600160a01b031690565b6000610a5182611831565b9050806001600160a01b0316836001600160a01b03161415610abf5760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b6064820152608401610a21565b336001600160a01b0382161480610adb5750610adb8133610883565b610b4d5760405162461bcd60e51b815260206004820152603860248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760448201527f6e6572206e6f7220617070726f76656420666f7220616c6c00000000000000006064820152608401610a21565b610b5783836121c3565b505050565b6000610b688133612231565b50600c80546001600160a01b0319166001600160a01b0392909216919091179055565b60006002600b541415610be05760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610a21565b6002600b556016546017548115801590610bfa5750600081115b610c1657610c1168056bc75e2d6310000086613fdd565b610c2b565b80610c218387613fdd565b610c2b9190613ede565b92506000601754601554610c3f9190613ffc565b905084841015610ca15760405162461bcd60e51b815260206004820152602760248201527f506f6f6c204572726f723a20546865206d696e74206c696d697420697320746f6044820152666f206c6172676560c81b6064820152608401610a21565b60008411610cfd5760405162461bcd60e51b815260206004820152602360248201527f506f6f6c204572726f723a2054686520616d6f756e7420697320746f6f20736d604482015262185b1b60ea1b6064820152608401610a21565b80861115610d6b5760405162461bcd60e51b815260206004820152603560248201527f506f6f6c204572726f723a204465706f736974696e6720696e746f2074686520604482015274706f6f6c206973206e6f7420617661696c61626c6560581b6064820152608401610a21565b8360166000828254610d7d9190613ec6565b925050819055508560176000828254610d969190613ec6565b909155505060198054604080516080810182526001808252602082018990529181018a905242606082015281830184556000939093528251600483027f944998273e477b495144fb8794c914197f3ccb46be2900f4698fd0ef743c96950180549394939092839160ff191690836002811115610e2257634e487b7160e01b600052602160045260246000fd5b02179055506020820151816001015560408201518160020155606082015181600301555050610e518882612295565b610e6933601b546001600160a01b031690308a6122af565b600c546001600160a01b031615610f03576000610e8461231a565b600c549091506001600160a01b031663b62268a18a610ea38b856123b9565b6040516001600160e01b031960e085901b1681526001600160a01b0390921660048301526024820152604401600060405180830381600087803b158015610ee957600080fd5b505af1158015610efd573d6000803e3d6000fd5b50505050505b50506001600b555090949350505050565b610f1e33826123de565b610f3a5760405162461bcd60e51b8152600401610a2190613e75565b610b578383836124d1565b60198181548110610f5557600080fd5b6000918252602090912060049091020180546001820154600283015460039093015460ff9092169350919084565b60006002600b541415610fd85760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610a21565b6002600b556000610fe883611831565b9050610ff4818461267c565b915082816001600160a01b03167f92ccf450a286a957af52509bc1c9939d1a6a481783e142e41e2499f0bb66ebc68460405161103291815260200190565b60405180910390a3506001600b55919050565b6000828152600a60205260409020600101546110618133612231565b610b5783836127e5565b6000611076836118ad565b82106110d85760405162461bcd60e51b815260206004820152602b60248201527f455243373231456e756d657261626c653a206f776e657220696e646578206f7560448201526a74206f6620626f756e647360a81b6064820152608401610a21565b506001600160a01b03919091166000908152600660209081526040808320938352929052205490565b60008061110c61231a565b905082611117578092505b600061112260175490565b9050600061112f8661286b565b6010549091506001600160a01b0316156111c6576010546001600160a01b031663819a57268888888760016040516001600160e01b031960e088901b16815260048101959095526024850193909352604484019190915260648301521515608482015260a40160006040518083038186803b1580156111ad57600080fd5b505afa1580156111c1573d6000803e3d6000fd5b505050505b620151808710156112255760405162461bcd60e51b815260206004820152602360248201527f506f6f6c204572726f723a2054686520706572696f6420697320746f6f2073686044820152621bdc9d60ea1b6064820152608401610a21565b6276a7008711156112835760405162461bcd60e51b815260206004820152602260248201527f506f6f6c204572726f723a2054686520706572696f6420697320746f6f206c6f6044820152616e6760f01b6064820152608401610a21565b6012546112909083613fdd565b8160145461129e9190613ec6565b6112a9906064613fdd565b11156113035760405162461bcd60e51b815260206004820152602360248201527f506f6f6c204572726f723a2054686520616d6f756e7420697320746f6f206c6160448201526272676560e81b6064820152608401610a21565b600080611311898989612887565b909250905060006113228284613ec6565b905061132e81876123b9565b905083601460008282546113429190613ec6565b909155505060405163012c0d8160e71b81526001600160a01b038c811660048301527f00000000000000000000000000000000000000000000000000000000000000001690639606c08090602401602060405180830381600087803b1580156113aa57600080fd5b505af11580156113be573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113e29190613b9f565b6040805160e0810190915290975080600181526020018981526020018a81526020018581526020018b426114169190613ec6565b81526020808201849052600060409283018190528a8152601a9091522081518154829060ff1916600183600381111561145f57634e487b7160e01b600052602160045260246000fd5b02179055506020820151600182015560408201516002820155606082015160038201556080820151600482015560a0820151600582015560c090910151600690910155600c546001600160a01b03161561151a57600c54604051634a33a95b60e11b81526001600160a01b038d81166004830152602482018490529091169063946752b690604401600060405180830381600087803b15801561150157600080fd5b505af1158015611515573d6000803e3d6000fd5b505050505b61153d33306115298686613ec6565b601b546001600160a01b03169291906122af565b6018546001600160a01b03161561156b57601854601b5461156b916001600160a01b03918216911685612aa5565b604080518481526020810184905288917ff5857d7b7b0e768564a581006734ebdf2b129d61875a3368bd9b0c84e226da75910160405180910390a2505050505050949350505050565b6001600160a01b03811633146116245760405162461bcd60e51b815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201526e103937b632b9903337b91039b2b63360891b6064820152608401610a21565b61162e8282612ad5565b5050565b610b5783838360405180602001604052806000815250611ec5565b600061165860085490565b82106116bb5760405162461bcd60e51b815260206004820152602c60248201527f455243373231456e756d657261626c653a20676c6f62616c20696e646578206f60448201526b7574206f6620626f756e647360a01b6064820152608401610a21565b600882815481106116dc57634e487b7160e01b600052603260045260246000fd5b90600052602060002001549050919050565b60006116fa8133612231565b8160321115801561170c575060648211155b6117745760405162461bcd60e51b815260206004820152603360248201527f506f6f6c206572726f723a2057726f6e67207574696c697a6174696f6e2072616044820152727465206c696d69746174696f6e2076616c756560681b6064820152608401610a21565b50601255565b6000818152601a60205260409020600481015442116117ee5760405162461bcd60e51b815260206004820152602a60248201527f506f6f6c204572726f723a20546865206f7074696f6e20686173206e6f7420656044820152691e1c1a5c9959081e595d60b21b6064820152608401610a21565b6117f781612b3c565b805460ff1916600317815560405182907ff80dbaea4785589e52984ca36a31de106adc77759539a5c7d92883bf49692fe990600090a25050565b6000818152600260205260408120546001600160a01b0316806109145760405162461bcd60e51b815260206004820152602960248201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460448201526832b73a103a37b5b2b760b91b6064820152608401610a21565b905090565b60006001600160a01b0382166119185760405162461bcd60e51b815260206004820152602a60248201527f4552433732313a2062616c616e636520717565727920666f7220746865207a65604482015269726f206164647265737360b01b6064820152608401610a21565b506001600160a01b031660009081526003602052604090205490565b6000818152601a6020526040808220815160e081019092528054610914929190829060ff16600381111561197857634e487b7160e01b600052602160045260246000fd5b600381111561199757634e487b7160e01b600052602160045260246000fd5b81526020016001820154815260200160028201548152602001600382015481526020016004820154815260200160058201548152602001600682015481525050612c08565b6000918252600a602090815260408084206001600160a01b0393909316845291905290205460ff1690565b60606001805461092990614056565b6000611a228133612231565b6001600160a01b038216611a3557600080fd5b50601880546001600160a01b0319166001600160a01b0392909216919091179055565b6000611a648133612231565b50600d80546001600160a01b039485166001600160a01b031991821617909155600e805493851693821693909317909255600f8054919093169116179055565b6001600160a01b038216331415611afd5760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c6572000000000000006044820152606401610a21565b3360008181526005602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b6000601454611b7760175490565b6118a89190613ffc565b6000818152601a6020526040808220815160e081019092528054909291611bc8918490829060ff16600381111561197857634e487b7160e01b600052602160045260246000fd5b90506001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001663430c2081336040516001600160e01b031960e084901b1681526001600160a01b0390911660048201526024810186905260440160206040518083038186803b158015611c4057600080fd5b505afa158015611c54573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611c789190613ac5565b611cde5760405162461bcd60e51b815260206004820152603160248201527f506f6f6c204572726f723a206d73672e73656e6465722063616e2774206578656044820152703931b4b9b2903a3434b99037b83a34b7b760791b6064820152608401610a21565b42826004015411611d445760405162461bcd60e51b815260206004820152602a60248201527f506f6f6c204572726f723a20546865206f7074696f6e2068617320616c726561604482015269191e48195e1c1a5c995960b21b6064820152608401610a21565b60008111611dba5760405162461bcd60e51b815260206004820152603b60248201527f506f6f6c204572726f723a20546865726520617265206e6f20756e7265616c6960448201527f7a65642070726f6669747320666f722074686973206f7074696f6e00000000006064820152608401610a21565b611dc382612b3c565b815460ff19166002178255611ddf81611dda61231a565b6123b9565b60068301556040516331a9108f60e11b815260048101849052611e86907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690636352211e9060240160206040518083038186803b158015611e4857600080fd5b505afa158015611e5c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611e809190613892565b82612c54565b827f0328c770810250ca303b85a612c9103929d1701abdf1dd1114607d139edfbed682604051611eb891815260200190565b60405180910390a2505050565b611ecf33836123de565b611eeb5760405162461bcd60e51b8152600401610a2190613e75565b611ef784848484612c95565b50505050565b600061091482611dda61231a565b6000611f178133612231565b50601555565b6000611f298133612231565b62278d00821115611f985760405162461bcd60e51b815260206004820152603360248201527f546865206c6f636b757020706572696f6420666f7220756e686564676564207460448201527272616e6368657320697320746f6f206c6f6e6760681b6064820152608401610a21565b50601155565b6000818152600260205260409020546060906001600160a01b031661201d5760405162461bcd60e51b815260206004820152602f60248201527f4552433732314d657461646174613a2055524920717565727920666f72206e6f60448201526e3732bc34b9ba32b73a103a37b5b2b760891b6064820152608401610a21565b600061203460408051602081019091526000815290565b90506000815111612054576040518060200160405280600081525061207f565b8061205e84612cc8565b60405160200161206f929190613cbd565b6040516020818303038152906040525b9392505050565b600080612094858585612887565b91509150935093915050565b6000828152600a60205260409020600101546120bc8133612231565b610b578383612ad5565b60006120d28133612231565b81601e111580156120e4575060648211155b6121485760405162461bcd60e51b815260206004820152602f60248201527f506f6f6c204572726f723a2057726f6e6720636f6c6c61746572616c697a617460448201526e696f6e20726174696f2076616c756560881b6064820152608401610a21565b50601355565b60006001600160e01b03198216637965db0b60e01b1480610914575061091482612de2565b60006001600160e01b031982166380ac58cd60e01b14806121a457506001600160e01b03198216635b5e139f60e01b145b8061091457506301ffc9a760e01b6001600160e01b0319831614610914565b600081815260046020526040902080546001600160a01b0319166001600160a01b03841690811790915581906121f882611831565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b61223b82826119dc565b61162e57612253816001600160a01b03166014612e07565b61225e836020612e07565b60405160200161226f929190613cec565b60408051601f198184030181529082905262461bcd60e51b8252610a2191600401613e10565b61162e828260405180602001604052806000815250612fe9565b6040516001600160a01b0380851660248301528316604482015260648101829052611ef79085906323b872dd60e01b906084015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b03199093169290921790915261301c565b6000807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561237657600080fd5b505afa15801561238a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906123ae9190613c05565b509195945050505050565b6000806123c68385613fdd565b90506123d66305f5e10082613ede565b949350505050565b6000818152600260205260408120546001600160a01b03166124575760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b6064820152608401610a21565b600061246283611831565b9050806001600160a01b0316846001600160a01b0316148061249d5750836001600160a01b0316612492846109ac565b6001600160a01b0316145b806123d657506001600160a01b0380821660009081526005602090815260408083209388168352929052205460ff166123d6565b826001600160a01b03166124e482611831565b6001600160a01b03161461254c5760405162461bcd60e51b815260206004820152602960248201527f4552433732313a207472616e73666572206f6620746f6b656e2074686174206960448201526839903737ba1037bbb760b91b6064820152608401610a21565b6001600160a01b0382166125ae5760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b6064820152608401610a21565b6125b98383836130ee565b6125c46000826121c3565b6001600160a01b03831660009081526003602052604081208054600192906125ed908490613ffc565b90915550506001600160a01b038216600090815260036020526040812080546001929061261b908490613ec6565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b600080601983815481106126a057634e487b7160e01b600052603260045260246000fd5b6000918252602090912060115460049092020191506001825460ff1660028111156126db57634e487b7160e01b600052602160045260246000fd5b146126e557600080fd5b6126ef33856123de565b6126f857600080fd5b8082600301546127089190613ec6565b42116127665760405162461bcd60e51b815260206004820152602760248201527f506f6f6c204572726f723a20546865207769746864726177616c206973206c6f6044820152660636b65642075760cc1b6064820152608401610a21565b815460ff1916600217825560165460175460018401546127869190613fdd565b6127909190613ede565b92508160010154601660008282546127a89190613ffc565b9250508190555082601760008282546127c19190613ffc565b9091555050601b546127dd906001600160a01b03168685612aa5565b505092915050565b6127ef82826119dc565b61162e576000828152600a602090815260408083206001600160a01b03851684529091529020805460ff191660011790556128273390565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b600060646013548361287d9190613fdd565b6109149190613ede565b6000806000601b60009054906101000a90046001600160a01b03166001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b1580156128da57600080fd5b505afa1580156128ee573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906129129190613c54565b60ff169050612923858260126131bb565b945060007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561298057600080fd5b505afa158015612994573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906129b89190613c05565b50505091505084600014156129cb578094505b600e546001600160a01b0316818610156129f15750600f546001600160a01b03166129ff565b50600d546001600160a01b03165b6040805163066b8ec960e01b8152600481018a90526024810189905260448101889052600160648201526084810185905281516001600160a01b0384169263066b8ec99260a48082019391829003018186803b158015612a5e57600080fd5b505afa158015612a72573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612a969190613bb7565b90999098509650505050505050565b6040516001600160a01b038316602482015260448101829052610b5790849063a9059cbb60e01b906064016122e3565b612adf82826119dc565b1561162e576000828152600a602090815260408083206001600160a01b0385168085529252808320805460ff1916905551339285917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45050565b6001815460ff166003811115612b6257634e487b7160e01b600052602160045260246000fd5b14612bea5760405162461bcd60e51b815260206004820152604c60248201527f506f6f6c204572726f723a20546865206f7074696f6e2077697468207375636860448201527f20616e2049442068617320616c7265616479206265656e20657865726369736560648201526b19081bdc88195e1c1a5c995960a21b608482015260a401610a21565b806003015460146000828254612c009190613ffc565b909155505050565b600080612c1361231a565b90508260200151811015612c2a5750600092915050565b808360400151846020015183612c409190613ffc565b612c4a9190613fdd565b61207f9190613ede565b6001600160a01b038216612c6757600080fd5b8060176000828254612c799190613ffc565b9091555050601b5461162e906001600160a01b03168383612aa5565b612ca08484846124d1565b612cac8484848461321a565b611ef75760405162461bcd60e51b8152600401610a2190613e23565b606081612cec5750506040805180820190915260018152600360fc1b602082015290565b8160005b8115612d165780612d0081614091565b9150612d0f9050600a83613ede565b9150612cf0565b60008167ffffffffffffffff811115612d3f57634e487b7160e01b600052604160045260246000fd5b6040519080825280601f01601f191660200182016040528015612d69576020820181803683370190505b5090505b84156123d657612d7e600183613ffc565b9150612d8b600a866140ac565b612d96906030613ec6565b60f81b818381518110612db957634e487b7160e01b600052603260045260246000fd5b60200101906001600160f81b031916908160001a905350612ddb600a86613ede565b9450612d6d565b60006001600160e01b0319821663780e9d6360e01b1480610914575061091482612173565b60606000612e16836002613fdd565b612e21906002613ec6565b67ffffffffffffffff811115612e4757634e487b7160e01b600052604160045260246000fd5b6040519080825280601f01601f191660200182016040528015612e71576020820181803683370190505b509050600360fc1b81600081518110612e9a57634e487b7160e01b600052603260045260246000fd5b60200101906001600160f81b031916908160001a905350600f60fb1b81600181518110612ed757634e487b7160e01b600052603260045260246000fd5b60200101906001600160f81b031916908160001a9053506000612efb846002613fdd565b612f06906001613ec6565b90505b6001811115612f9a576f181899199a1a9b1b9c1cb0b131b232b360811b85600f1660108110612f4857634e487b7160e01b600052603260045260246000fd5b1a60f81b828281518110612f6c57634e487b7160e01b600052603260045260246000fd5b60200101906001600160f81b031916908160001a90535060049490941c93612f938161403f565b9050612f09565b50831561207f5760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e746044820152606401610a21565b612ff38383613327565b613000600084848461321a565b610b575760405162461bcd60e51b8152600401610a2190613e23565b6000613071826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166134759092919063ffffffff16565b805190915015610b57578080602001905181019061308f9190613ac5565b610b575760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610a21565b6130f9838383613484565b60016019828154811061311c57634e487b7160e01b600052603260045260246000fd5b600091825260209091206004909102015460ff16600281111561314f57634e487b7160e01b600052602160045260246000fd5b14610b575760405162461bcd60e51b815260206004820152603660248201527f506f6f6c204572726f723a2054686520636c6f736564207472616e636865732060448201527518d85b881b9bdd081899481d1c985b9cd9995c9c995960521b6064820152608401610a21565b6000818310156131eb576131cf8383613ffc565b6131da90600a613f35565b6131e49085613fdd565b905061207f565b81831115613212576131fd8284613ffc565b61320890600a613f35565b6131e49085613ede565b509192915050565b60006001600160a01b0384163b1561331c57604051630a85bd0160e11b81526001600160a01b0385169063150b7a029061325e903390899088908890600401613d61565b602060405180830381600087803b15801561327857600080fd5b505af19250505080156132a8575060408051601f3d908101601f191682019092526132a591810190613b39565b60015b613302573d8080156132d6576040519150601f19603f3d011682016040523d82523d6000602084013e6132db565b606091505b5080516132fa5760405162461bcd60e51b8152600401610a2190613e23565b805181602001fd5b6001600160e01b031916630a85bd0160e11b1490506123d6565b506001949350505050565b6001600160a01b03821661337d5760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f20616464726573736044820152606401610a21565b6000818152600260205260409020546001600160a01b0316156133e25760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e746564000000006044820152606401610a21565b6133ee600083836130ee565b6001600160a01b0382166000908152600360205260408120805460019290613417908490613ec6565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b03861690811790915590518392907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b60606123d6848460008561353c565b6001600160a01b0383166134df576134da81600880546000838152600960205260408120829055600182018355919091527ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee30155565b613502565b816001600160a01b0316836001600160a01b031614613502576135028382613664565b6001600160a01b03821661351957610b5781613701565b826001600160a01b0316826001600160a01b031614610b5757610b5782826137da565b60608247101561359d5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401610a21565b843b6135eb5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610a21565b600080866001600160a01b031685876040516136079190613ca1565b60006040518083038185875af1925050503d8060008114613644576040519150601f19603f3d011682016040523d82523d6000602084013e613649565b606091505b509150915061365982828661381e565b979650505050505050565b60006001613671846118ad565b61367b9190613ffc565b6000838152600760205260409020549091508082146136ce576001600160a01b03841660009081526006602090815260408083208584528252808320548484528184208190558352600790915290208190555b5060009182526007602090815260408084208490556001600160a01b039094168352600681528383209183525290812055565b60085460009061371390600190613ffc565b6000838152600960205260408120546008805493945090928490811061374957634e487b7160e01b600052603260045260246000fd5b90600052602060002001549050806008838154811061377857634e487b7160e01b600052603260045260246000fd5b60009182526020808320909101929092558281526009909152604080822084905585825281205560088054806137be57634e487b7160e01b600052603160045260246000fd5b6001900381819060005260206000200160009055905550505050565b60006137e5836118ad565b6001600160a01b039093166000908152600660209081526040808320868452825280832085905593825260079052919091209190915550565b6060831561382d57508161207f565b82511561383d5782518084602001fd5b8160405162461bcd60e51b8152600401610a219190613e10565b805169ffffffffffffffffffff8116811461387157600080fd5b919050565b600060208284031215613887578081fd5b813561207f81614118565b6000602082840312156138a3578081fd5b815161207f81614118565b600080604083850312156138c0578081fd5b82356138cb81614118565b915060208301356138db81614118565b809150509250929050565b6000806000606084860312156138fa578081fd5b833561390581614118565b9250602084013561391581614118565b929592945050506040919091013590565b6000806000806080858703121561393b578081fd5b843561394681614118565b9350602085013561395681614118565b925060408501359150606085013567ffffffffffffffff80821115613979578283fd5b818701915087601f83011261398c578283fd5b81358181111561399e5761399e614102565b604051601f8201601f19908116603f011681019083821181831017156139c6576139c6614102565b816040528281528a60208487010111156139de578586fd5b82602086016020830137918201602001949094529598949750929550505050565b60008060408385031215613a11578182fd5b8235613a1c81614118565b915060208301356138db81614130565b60008060408385031215613a3e578182fd5b8235613a4981614118565b946020939093013593505050565b600080600060608486031215613a6b578283fd5b8335613a7681614118565b95602085013595506040909401359392505050565b60008060008060808587031215613aa0578384fd5b8435613aab81614118565b966020860135965060408601359560600135945092505050565b600060208284031215613ad6578081fd5b815161207f81614130565b600060208284031215613af2578081fd5b5035919050565b60008060408385031215613b0b578182fd5b8235915060208301356138db81614118565b600060208284031215613b2e578081fd5b813561207f8161413e565b600060208284031215613b4a578081fd5b815161207f8161413e565b600080600060608486031215613b69578081fd5b8335613b7481614118565b92506020840135613b8481614118565b91506040840135613b9481614118565b809150509250925092565b600060208284031215613bb0578081fd5b5051919050565b60008060408385031215613bc9578182fd5b505080516020909101519092909150565b600080600060608486031215613bee578081fd5b505081359360208301359350604090920135919050565b600080600080600060a08688031215613c1c578283fd5b613c2586613857565b9450602086015193506040860151925060608601519150613c4860808701613857565b90509295509295909350565b600060208284031215613c65578081fd5b815160ff8116811461207f578182fd5b60008151808452613c8d816020860160208601614013565b601f01601f19169290920160200192915050565b60008251613cb3818460208701614013565b9190910192915050565b60008351613ccf818460208801614013565b835190830190613ce3818360208801614013565b01949350505050565b7f416363657373436f6e74726f6c3a206163636f756e7420000000000000000000815260008351613d24816017850160208801614013565b7001034b99036b4b9b9b4b733903937b6329607d1b6017918401918201528351613d55816028840160208801614013565b01602801949350505050565b6001600160a01b0385811682528416602082015260408101839052608060608201819052600090613d9490830184613c75565b9695505050505050565b60e0810160048910613db257613db26140ec565b978152602081019690965260408601949094526060850192909252608084015260a083015260c09091015290565b6080810160038610613df457613df46140ec565b9481526020810193909352604083019190915260609091015290565b60208152600061207f6020830184613c75565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b60208082526031908201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f6040820152701ddb995c881b9bdc88185c1c1c9bdd9959607a1b606082015260800190565b60008219821115613ed957613ed96140c0565b500190565b600082613eed57613eed6140d6565b500490565b600181815b80851115613f2d578160001904821115613f1357613f136140c0565b80851615613f2057918102915b93841c9390800290613ef7565b509250929050565b600061207f8383600082613f4b57506001610914565b81613f5857506000610914565b8160018114613f6e5760028114613f7857613f94565b6001915050610914565b60ff841115613f8957613f896140c0565b50506001821b610914565b5060208310610133831016604e8410600b8410161715613fb7575081810a610914565b613fc18383613ef2565b8060001904821115613fd557613fd56140c0565b029392505050565b6000816000190483118215151615613ff757613ff76140c0565b500290565b60008282101561400e5761400e6140c0565b500390565b60005b8381101561402e578181015183820152602001614016565b83811115611ef75750506000910152565b60008161404e5761404e6140c0565b506000190190565b600181811c9082168061406a57607f821691505b6020821081141561408b57634e487b7160e01b600052602260045260246000fd5b50919050565b60006000198214156140a5576140a56140c0565b5060010190565b6000826140bb576140bb6140d6565b500690565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052602160045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b038116811461412d57600080fd5b50565b801515811461412d57600080fd5b6001600160e01b03198116811461412d57600080fdfea2646970667358221220e6d9f99e5dad522072b99f4a8d4369cd25d3d104abf38692c6cf6baf61ee265f64736f6c63430008040033\";\n","/* Autogenerated file. Do not edit manually. */\n/* tslint:disable */\n/* eslint-disable */\n\nimport { Signer, BigNumberish } from \"ethers\";\nimport { Provider, TransactionRequest } from \"@ethersproject/providers\";\nimport { Contract, ContractFactory, Overrides } from \"@ethersproject/contracts\";\n\nimport type { HegicPut } from \"./HegicPut\";\n\nexport class HegicPutFactory extends ContractFactory {\n  constructor(signer?: Signer) {\n    super(_abi, _bytecode, signer);\n  }\n\n  deploy(\n    _token: string,\n    name: string,\n    symbol: string,\n    manager: string,\n    _pricer1: string,\n    _pricer2: string,\n    _pricer3: string,\n    _priceProvider: string,\n    spotDecimals: BigNumberish,\n    _assetPriceToken: string,\n    overrides?: Overrides\n  ): Promise<HegicPut> {\n    return super.deploy(\n      _token,\n      name,\n      symbol,\n      manager,\n      _pricer1,\n      _pricer2,\n      _pricer3,\n      _priceProvider,\n      spotDecimals,\n      _assetPriceToken,\n      overrides || {}\n    ) as Promise<HegicPut>;\n  }\n  getDeployTransaction(\n    _token: string,\n    name: string,\n    symbol: string,\n    manager: string,\n    _pricer1: string,\n    _pricer2: string,\n    _pricer3: string,\n    _priceProvider: string,\n    spotDecimals: BigNumberish,\n    _assetPriceToken: string,\n    overrides?: Overrides\n  ): TransactionRequest {\n    return super.getDeployTransaction(\n      _token,\n      name,\n      symbol,\n      manager,\n      _pricer1,\n      _pricer2,\n      _pricer3,\n      _priceProvider,\n      spotDecimals,\n      _assetPriceToken,\n      overrides || {}\n    );\n  }\n  attach(address: string): HegicPut {\n    return super.attach(address) as HegicPut;\n  }\n  connect(signer: Signer): HegicPutFactory {\n    return super.connect(signer) as HegicPutFactory;\n  }\n  static connect(\n    address: string,\n    signerOrProvider: Signer | Provider\n  ): HegicPut {\n    return new Contract(address, _abi, signerOrProvider) as HegicPut;\n  }\n}\n\nconst _abi = [\n  {\n    inputs: [\n      {\n        internalType: \"contract IERC20\",\n        name: \"_token\",\n        type: \"address\",\n      },\n      {\n        internalType: \"string\",\n        name: \"name\",\n        type: \"string\",\n      },\n      {\n        internalType: \"string\",\n        name: \"symbol\",\n        type: \"string\",\n      },\n      {\n        internalType: \"contract IOptionsManager\",\n        name: \"manager\",\n        type: \"address\",\n      },\n      {\n        internalType: \"contract IPriceCalculator\",\n        name: \"_pricer1\",\n        type: \"address\",\n      },\n      {\n        internalType: \"contract IPriceCalculator\",\n        name: \"_pricer2\",\n        type: \"address\",\n      },\n      {\n        internalType: \"contract IPriceCalculator\",\n        name: \"_pricer3\",\n        type: \"address\",\n      },\n      {\n        internalType: \"contract AggregatorV3Interface\",\n        name: \"_priceProvider\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint8\",\n        name: \"spotDecimals\",\n        type: \"uint8\",\n      },\n      {\n        internalType: \"contract IERC20\",\n        name: \"_assetPriceToken\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"constructor\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"uint256\",\n        name: \"id\",\n        type: \"uint256\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"settlementFee\",\n        type: \"uint256\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"premium\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"Acquired\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"owner\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"approved\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"uint256\",\n        name: \"tokenId\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"Approval\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"owner\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"operator\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"bool\",\n        name: \"approved\",\n        type: \"bool\",\n      },\n    ],\n    name: \"ApprovalForAll\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"uint256\",\n        name: \"id\",\n        type: \"uint256\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"profit\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"Exercised\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"uint256\",\n        name: \"id\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"Expired\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"bytes32\",\n        name: \"role\",\n        type: \"bytes32\",\n      },\n      {\n        indexed: true,\n        internalType: \"bytes32\",\n        name: \"previousAdminRole\",\n        type: \"bytes32\",\n      },\n      {\n        indexed: true,\n        internalType: \"bytes32\",\n        name: \"newAdminRole\",\n        type: \"bytes32\",\n      },\n    ],\n    name: \"RoleAdminChanged\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"bytes32\",\n        name: \"role\",\n        type: \"bytes32\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"sender\",\n        type: \"address\",\n      },\n    ],\n    name: \"RoleGranted\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"bytes32\",\n        name: \"role\",\n        type: \"bytes32\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"sender\",\n        type: \"address\",\n      },\n    ],\n    name: \"RoleRevoked\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"from\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"uint256\",\n        name: \"tokenId\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"Transfer\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"uint256\",\n        name: \"trancheID\",\n        type: \"uint256\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"amount\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"Withdrawn\",\n    type: \"event\",\n  },\n  {\n    inputs: [],\n    name: \"DEFAULT_ADMIN_ROLE\",\n    outputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"\",\n        type: \"bytes32\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"INITIAL_RATE\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"tokenId\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"approve\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"assetPriceToken\",\n    outputs: [\n      {\n        internalType: \"contract IERC20\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"atmPricer\",\n    outputs: [\n      {\n        internalType: \"contract IPriceCalculator\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"availableBalance\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"balance\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"owner\",\n        type: \"address\",\n      },\n    ],\n    name: \"balanceOf\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"period\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amount\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"strike\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"calculateTotalPremium\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"settlementFee\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"premium\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"collateralizationRatio\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"id\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"exercise\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"tokenId\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"getApproved\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"role\",\n        type: \"bytes32\",\n      },\n    ],\n    name: \"getRoleAdmin\",\n    outputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"\",\n        type: \"bytes32\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"role\",\n        type: \"bytes32\",\n      },\n      {\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n    ],\n    name: \"grantRole\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"role\",\n        type: \"bytes32\",\n      },\n      {\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n    ],\n    name: \"hasRole\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"inputValidation\",\n    outputs: [\n      {\n        internalType: \"contract IPoolInputConstraint\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"owner\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"operator\",\n        type: \"address\",\n      },\n    ],\n    name: \"isApprovedForAll\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"isCall\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"pure\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"itmPricer\",\n    outputs: [\n      {\n        internalType: \"contract IPriceCalculator\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"lockedAmount\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"lockupPeriodForUnhedgedTranches\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"maxDepositAmount\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"maxUtilizationRate\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"name\",\n    outputs: [\n      {\n        internalType: \"string\",\n        name: \"\",\n        type: \"string\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"options\",\n    outputs: [\n      {\n        internalType: \"enum IHegicPool.OptionState\",\n        name: \"state\",\n        type: \"uint8\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"strike\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amount\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"lockedAmount\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"expired\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"premium\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"profit\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"optionsManager\",\n    outputs: [\n      {\n        internalType: \"contract IOptionsManager\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"otmPricer\",\n    outputs: [\n      {\n        internalType: \"contract IPriceCalculator\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"tokenId\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"ownerOf\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"amount\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"priceOf\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"priceProvider\",\n    outputs: [\n      {\n        internalType: \"contract AggregatorV3Interface\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"id\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"profitOf\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amount\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"minShare\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"provideFrom\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"share\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"role\",\n        type: \"bytes32\",\n      },\n      {\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n    ],\n    name: \"renounceRole\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"role\",\n        type: \"bytes32\",\n      },\n      {\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n    ],\n    name: \"revokeRole\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"rewardsManager\",\n    outputs: [\n      {\n        internalType: \"contract IRewardsManager\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"from\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"tokenId\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"safeTransferFrom\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"from\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"tokenId\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"bytes\",\n        name: \"_data\",\n        type: \"bytes\",\n      },\n    ],\n    name: \"safeTransferFrom\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"holder\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"period\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amount\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"strike\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"sellOption\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"id\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"operator\",\n        type: \"address\",\n      },\n      {\n        internalType: \"bool\",\n        name: \"approved\",\n        type: \"bool\",\n      },\n    ],\n    name: \"setApprovalForAll\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"value\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"setCollateralizationRatio\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"contract IPoolInputConstraint\",\n        name: \"validation\",\n        type: \"address\",\n      },\n    ],\n    name: \"setInputValidator\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"unhedgedValue\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"setLockupPeriod\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"total\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"setMaxDepositAmount\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"value\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"setMaxUtilizationRate\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"contract IPriceCalculator\",\n        name: \"_otmPricer\",\n        type: \"address\",\n      },\n      {\n        internalType: \"contract IPriceCalculator\",\n        name: \"_atmPricer\",\n        type: \"address\",\n      },\n      {\n        internalType: \"contract IPriceCalculator\",\n        name: \"_itmPricer\",\n        type: \"address\",\n      },\n    ],\n    name: \"setPriceCalculator\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"contract IRewardsManager\",\n        name: \"value\",\n        type: \"address\",\n      },\n    ],\n    name: \"setRewardsManager\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"recipient\",\n        type: \"address\",\n      },\n    ],\n    name: \"setSettlementFeeRecipient\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"settlementFeeRecipient\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"bytes4\",\n        name: \"interfaceId\",\n        type: \"bytes4\",\n      },\n    ],\n    name: \"supportsInterface\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"symbol\",\n    outputs: [\n      {\n        internalType: \"string\",\n        name: \"\",\n        type: \"string\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"token\",\n    outputs: [\n      {\n        internalType: \"contract IERC20\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"index\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"tokenByIndex\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"owner\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"index\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"tokenOfOwnerByIndex\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"tokenId\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"tokenURI\",\n    outputs: [\n      {\n        internalType: \"string\",\n        name: \"\",\n        type: \"string\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"totalBalance\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"balance\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"totalSupply\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"tranches\",\n    outputs: [\n      {\n        internalType: \"enum IHegicPool.TrancheState\",\n        name: \"state\",\n        type: \"uint8\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"share\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amount\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"creationTimestamp\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"from\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"tokenId\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"transferFrom\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"unhedgedBalance\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"unhedgedShare\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"id\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"unlock\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"trancheID\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"withdraw\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"amount\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n];\n\nconst _bytecode =\n  \"\";\n","/* Autogenerated file. Do not edit manually. */\n/* tslint:disable */\n/* eslint-disable */\n\nimport { Signer } from \"ethers\";\nimport { Provider, TransactionRequest } from \"@ethersproject/providers\";\nimport { Contract, ContractFactory, Overrides } from \"@ethersproject/contracts\";\n\nimport type { InitialInputConstraint } from \"./InitialInputConstraint\";\n\nexport class InitialInputConstraintFactory extends ContractFactory {\n  constructor(signer?: Signer) {\n    super(_abi, _bytecode, signer);\n  }\n\n  deploy(overrides?: Overrides): Promise<InitialInputConstraint> {\n    return super.deploy(overrides || {}) as Promise<InitialInputConstraint>;\n  }\n  getDeployTransaction(overrides?: Overrides): TransactionRequest {\n    return super.getDeployTransaction(overrides || {});\n  }\n  attach(address: string): InitialInputConstraint {\n    return super.attach(address) as InitialInputConstraint;\n  }\n  connect(signer: Signer): InitialInputConstraintFactory {\n    return super.connect(signer) as InitialInputConstraintFactory;\n  }\n  static connect(\n    address: string,\n    signerOrProvider: Signer | Provider\n  ): InitialInputConstraint {\n    return new Contract(\n      address,\n      _abi,\n      signerOrProvider\n    ) as InitialInputConstraint;\n  }\n}\n\nconst _abi = [\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"period\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"strike\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"currentPrice\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    name: \"validateInput\",\n    outputs: [],\n    stateMutability: \"pure\",\n    type: \"function\",\n  },\n];\n\nconst _bytecode =\n  \"0x608060405234801561001057600080fd5b50610149806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063819a572614610030575b600080fd5b61004361003e3660046100c3565b610045565b005b8282146100bc578462278d00146100bc5760405162461bcd60e51b815260206004820152603160248201527f4f6e6c7920333020646179732065787069727920737570706f7274656420666f60448201527072206e6f6e2041544d206f7074696f6e7360781b606482015260840160405180910390fd5b5050505050565b600080600080600060a086880312156100da578081fd5b8535945060208601359350604086013592506060860135915060808601358015158114610105578182fd5b80915050929550929590935056fea2646970667358221220fd070b29abf3e3265106ba05cf3f9bf8cb1d27ac5a48a4483f9bfbd6d9edbaf364736f6c63430008040033\";\n","/* Autogenerated file. Do not edit manually. */\n/* tslint:disable */\n/* eslint-disable */\n\nimport { Signer } from \"ethers\";\nimport { Provider, TransactionRequest } from \"@ethersproject/providers\";\nimport { Contract, ContractFactory, Overrides } from \"@ethersproject/contracts\";\n\nimport type { InitialRewardsManager } from \"./InitialRewardsManager\";\n\nexport class InitialRewardsManagerFactory extends ContractFactory {\n  constructor(signer?: Signer) {\n    super(_abi, _bytecode, signer);\n  }\n\n  deploy(token: string, overrides?: Overrides): Promise<InitialRewardsManager> {\n    return super.deploy(\n      token,\n      overrides || {}\n    ) as Promise<InitialRewardsManager>;\n  }\n  getDeployTransaction(\n    token: string,\n    overrides?: Overrides\n  ): TransactionRequest {\n    return super.getDeployTransaction(token, overrides || {});\n  }\n  attach(address: string): InitialRewardsManager {\n    return super.attach(address) as InitialRewardsManager;\n  }\n  connect(signer: Signer): InitialRewardsManagerFactory {\n    return super.connect(signer) as InitialRewardsManagerFactory;\n  }\n  static connect(\n    address: string,\n    signerOrProvider: Signer | Provider\n  ): InitialRewardsManager {\n    return new Contract(\n      address,\n      _abi,\n      signerOrProvider\n    ) as InitialRewardsManager;\n  }\n}\n\nconst _abi = [\n  {\n    inputs: [\n      {\n        internalType: \"contract Ignition\",\n        name: \"token\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"constructor\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"previousOwner\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"newOwner\",\n        type: \"address\",\n      },\n    ],\n    name: \"OwnershipTransferred\",\n    type: \"event\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"pool\",\n        type: \"address\",\n      },\n    ],\n    name: \"addPool\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"buyer\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"usdTotal\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"callBought\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"emissionRate\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"provider\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"usdTotal\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"liquidityProvided\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"owner\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    name: \"pools\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"buyer\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"usdTotal\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"putBought\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"renounceOwnership\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"rewardToken\",\n    outputs: [\n      {\n        internalType: \"contract Ignition\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"_newRate\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"setEmissionRate\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"newOwner\",\n        type: \"address\",\n      },\n    ],\n    name: \"transferOwnership\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n];\n\nconst _bytecode =\n  \"0x6080604052601460035534801561001557600080fd5b506040516106f73803806106f7833981016040819052610034916100b2565b61003d33610062565b600180546001600160a01b0319166001600160a01b03929092169190911790556100e0565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000602082840312156100c3578081fd5b81516001600160a01b03811681146100d9578182fd5b9392505050565b610608806100ef6000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c8063a1bdb15e11610071578063a1bdb15e1461010c578063a4063dbc1461011f578063b62268a1146100ae578063d914cd4b14610152578063f2fde38b14610165578063f7c618c11461017857600080fd5b806310191adf146100ae578063715018a6146100c35780638da5cb5b146100cb578063946752b6146100ae57806396afc450146100f5575b600080fd5b6100c16100bc366004610504565b61018b565b005b6100c1610207565b6000546001600160a01b03165b6040516001600160a01b0390911681526020015b60405180910390f35b6100fe60035481565b6040519081526020016100ec565b6100c161011a36600461054d565b61023d565b61014261012d3660046104e3565b60026020526000908152604090205460ff1681565b60405190151581526020016100ec565b6100c16101603660046104e3565b61026c565b6100c16101733660046104e3565b6102ba565b6001546100d8906001600160a01b031681565b3360009081526002602052604090205460ff166101f95760405162461bcd60e51b815260206004820152602160248201527f4f6e6c7920706f6f6c732063616e2063616c6c207468697320636f6e747261636044820152601d60fa1b60648201526084015b60405180910390fd5b6102038282610355565b5050565b6000546001600160a01b031633146102315760405162461bcd60e51b81526004016101f09061057d565b61023b6000610477565b565b6000546001600160a01b031633146102675760405162461bcd60e51b81526004016101f09061057d565b600355565b6000546001600160a01b031633146102965760405162461bcd60e51b81526004016101f09061057d565b6001600160a01b03166000908152600260205260409020805460ff19166001179055565b6000546001600160a01b031633146102e45760405162461bcd60e51b81526004016101f09061057d565b6001600160a01b0381166103495760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016101f0565b61035281610477565b50565b60006003548261036591906105b2565b6001546040516370a0823160e01b815230600482015291925082916001600160a01b03909116906370a082319060240160206040518083038186803b1580156103ad57600080fd5b505afa1580156103c1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103e59190610565565b106104725760015460405163a9059cbb60e01b81526001600160a01b038581166004830152602482018490529091169063a9059cbb90604401602060405180830381600087803b15801561043857600080fd5b505af115801561044c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610470919061052d565b505b505050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80356001600160a01b03811681146104de57600080fd5b919050565b6000602082840312156104f4578081fd5b6104fd826104c7565b9392505050565b60008060408385031215610516578081fd5b61051f836104c7565b946020939093013593505050565b60006020828403121561053e578081fd5b815180151581146104fd578182fd5b60006020828403121561055e578081fd5b5035919050565b600060208284031215610576578081fd5b5051919050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6000826105cd57634e487b7160e01b81526012600452602481fd5b50049056fea2646970667358221220be6005161bfb325ad3e7937ffb1fdf34ecc3364e6d34babab6214df6746b963664736f6c63430008040033\";\n","/* Autogenerated file. Do not edit manually. */\n/* tslint:disable */\n/* eslint-disable */\n\nimport { Signer } from \"ethers\";\nimport { Provider, TransactionRequest } from \"@ethersproject/providers\";\nimport { Contract, ContractFactory, Overrides } from \"@ethersproject/contracts\";\n\nimport type { Ignition } from \"./Ignition\";\n\nexport class IgnitionFactory extends ContractFactory {\n  constructor(signer?: Signer) {\n    super(_abi, _bytecode, signer);\n  }\n\n  deploy(overrides?: Overrides): Promise<Ignition> {\n    return super.deploy(overrides || {}) as Promise<Ignition>;\n  }\n  getDeployTransaction(overrides?: Overrides): TransactionRequest {\n    return super.getDeployTransaction(overrides || {});\n  }\n  attach(address: string): Ignition {\n    return super.attach(address) as Ignition;\n  }\n  connect(signer: Signer): IgnitionFactory {\n    return super.connect(signer) as IgnitionFactory;\n  }\n  static connect(\n    address: string,\n    signerOrProvider: Signer | Provider\n  ): Ignition {\n    return new Contract(address, _abi, signerOrProvider) as Ignition;\n  }\n}\n\nconst _abi = [\n  {\n    inputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"constructor\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"owner\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"spender\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"value\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"Approval\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"previousOwner\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"newOwner\",\n        type: \"address\",\n      },\n    ],\n    name: \"OwnershipTransferred\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"from\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"value\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"Transfer\",\n    type: \"event\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"owner\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"spender\",\n        type: \"address\",\n      },\n    ],\n    name: \"allowance\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"spender\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amount\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"approve\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n    ],\n    name: \"balanceOf\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"decimals\",\n    outputs: [\n      {\n        internalType: \"uint8\",\n        name: \"\",\n        type: \"uint8\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"spender\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"subtractedValue\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"decreaseAllowance\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"spender\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"addedValue\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"increaseAllowance\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amount\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"mint\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"name\",\n    outputs: [\n      {\n        internalType: \"string\",\n        name: \"\",\n        type: \"string\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"owner\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"renounceOwnership\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"symbol\",\n    outputs: [\n      {\n        internalType: \"string\",\n        name: \"\",\n        type: \"string\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"totalSupply\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"recipient\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amount\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"transfer\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"sender\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"recipient\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amount\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"transferFrom\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"newOwner\",\n        type: \"address\",\n      },\n    ],\n    name: \"transferOwnership\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n];\n\nconst _bytecode =\n  \"0x60806040523480156200001157600080fd5b50604080518082018252601581527f43617450756c6c205374616b696e6720546f6b656e000000000000000000000060208083019182528351808501909452600484526349474e4960e01b908401528151919291620000739160039162000213565b5080516200008990600490602084019062000213565b505050620000a6620000a0620000d560201b60201c565b620000d9565b620000cf33620000b96012600a6200031d565b620000c990633b9aca00620003eb565b6200012b565b62000460565b3390565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b038216620001865760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640160405180910390fd5b80600260008282546200019a9190620002b9565b90915550506001600160a01b03821660009081526020819052604081208054839290620001c9908490620002b9565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b82805462000221906200040d565b90600052602060002090601f01602090048101928262000245576000855562000290565b82601f106200026057805160ff191683800117855562000290565b8280016001018555821562000290579182015b828111156200029057825182559160200191906001019062000273565b506200029e929150620002a2565b5090565b5b808211156200029e5760008155600101620002a3565b60008219821115620002cf57620002cf6200044a565b500190565b600181815b8085111562000315578160001904821115620002f957620002f96200044a565b808516156200030757918102915b93841c9390800290620002d9565b509250929050565b60006200032e60ff84168362000335565b9392505050565b6000826200034657506001620003e5565b816200035557506000620003e5565b81600181146200036e5760028114620003795762000399565b6001915050620003e5565b60ff8411156200038d576200038d6200044a565b50506001821b620003e5565b5060208310610133831016604e8410600b8410161715620003be575081810a620003e5565b620003ca8383620002d4565b8060001904821115620003e157620003e16200044a565b0290505b92915050565b60008160001904831182151516156200040857620004086200044a565b500290565b600181811c908216806200042257607f821691505b602082108114156200044457634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b610bc280620004706000396000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c806370a0823111610097578063a457c2d711610066578063a457c2d7146101eb578063a9059cbb146101fe578063dd62ed3e14610211578063f2fde38b1461024a57600080fd5b806370a0823114610197578063715018a6146101c05780638da5cb5b146101c857806395d89b41146101e357600080fd5b806323b872dd116100d357806323b872dd1461014d578063313ce56714610160578063395093511461016f57806340c10f191461018257600080fd5b806306fdde03146100fa578063095ea7b31461011857806318160ddd1461013b575b600080fd5b61010261025d565b60405161010f9190610aa5565b60405180910390f35b61012b610126366004610a7c565b6102ef565b604051901515815260200161010f565b6002545b60405190815260200161010f565b61012b61015b366004610a41565b610305565b6040516012815260200161010f565b61012b61017d366004610a7c565b6103b4565b610195610190366004610a7c565b6103f0565b005b61013f6101a53660046109ee565b6001600160a01b031660009081526020819052604090205490565b610195610428565b6005546040516001600160a01b03909116815260200161010f565b61010261045e565b61012b6101f9366004610a7c565b61046d565b61012b61020c366004610a7c565b610506565b61013f61021f366004610a0f565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6101956102583660046109ee565b610513565b60606003805461026c90610b51565b80601f016020809104026020016040519081016040528092919081815260200182805461029890610b51565b80156102e55780601f106102ba576101008083540402835291602001916102e5565b820191906000526020600020905b8154815290600101906020018083116102c857829003601f168201915b5050505050905090565b60006102fc3384846105ae565b50600192915050565b60006103128484846106d2565b6001600160a01b03841660009081526001602090815260408083203384529091529020548281101561039c5760405162461bcd60e51b815260206004820152602860248201527f45524332303a207472616e7366657220616d6f756e74206578636565647320616044820152676c6c6f77616e636560c01b60648201526084015b60405180910390fd5b6103a985338584036105ae565b506001949350505050565b3360008181526001602090815260408083206001600160a01b038716845290915281205490916102fc9185906103eb908690610b2d565b6105ae565b6005546001600160a01b0316331461041a5760405162461bcd60e51b815260040161039390610af8565b61042482826108a1565b5050565b6005546001600160a01b031633146104525760405162461bcd60e51b815260040161039390610af8565b61045c6000610980565b565b60606004805461026c90610b51565b3360009081526001602090815260408083206001600160a01b0386168452909152812054828110156104ef5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b6064820152608401610393565b6104fc33858584036105ae565b5060019392505050565b60006102fc3384846106d2565b6005546001600160a01b0316331461053d5760405162461bcd60e51b815260040161039390610af8565b6001600160a01b0381166105a25760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610393565b6105ab81610980565b50565b6001600160a01b0383166106105760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610393565b6001600160a01b0382166106715760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610393565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b0383166107365760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610393565b6001600160a01b0382166107985760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610393565b6001600160a01b038316600090815260208190526040902054818110156108105760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610393565b6001600160a01b03808516600090815260208190526040808220858503905591851681529081208054849290610847908490610b2d565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161089391815260200190565b60405180910390a350505050565b6001600160a01b0382166108f75760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610393565b80600260008282546109099190610b2d565b90915550506001600160a01b03821660009081526020819052604081208054839290610936908490610b2d565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b80356001600160a01b03811681146109e957600080fd5b919050565b6000602082840312156109ff578081fd5b610a08826109d2565b9392505050565b60008060408385031215610a21578081fd5b610a2a836109d2565b9150610a38602084016109d2565b90509250929050565b600080600060608486031215610a55578081fd5b610a5e846109d2565b9250610a6c602085016109d2565b9150604084013590509250925092565b60008060408385031215610a8e578182fd5b610a97836109d2565b946020939093013593505050565b6000602080835283518082850152825b81811015610ad157858101830151858201604001528201610ab5565b81811115610ae25783604083870101525b50601f01601f1916929092016040019392505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60008219821115610b4c57634e487b7160e01b81526011600452602481fd5b500190565b600181811c90821680610b6557607f821691505b60208210811415610b8657634e487b7160e01b600052602260045260246000fd5b5091905056fea264697066735822122014c040d8fa7579749602308f9b490e3494fdf159b83d8c6ac8da5cf0e035205d64736f6c63430008040033\";\n","/* Autogenerated file. Do not edit manually. */\n/* tslint:disable */\n/* eslint-disable */\n\nimport { Contract, Signer } from \"ethers\";\nimport { Provider } from \"@ethersproject/providers\";\n\nimport type { AggregatorV3Interface } from \"./AggregatorV3Interface\";\n\nexport class AggregatorV3InterfaceFactory {\n  static connect(\n    address: string,\n    signerOrProvider: Signer | Provider\n  ): AggregatorV3Interface {\n    return new Contract(\n      address,\n      _abi,\n      signerOrProvider\n    ) as AggregatorV3Interface;\n  }\n}\n\nconst _abi = [\n  {\n    inputs: [],\n    name: \"decimals\",\n    outputs: [\n      {\n        internalType: \"uint8\",\n        name: \"\",\n        type: \"uint8\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"description\",\n    outputs: [\n      {\n        internalType: \"string\",\n        name: \"\",\n        type: \"string\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint80\",\n        name: \"_roundId\",\n        type: \"uint80\",\n      },\n    ],\n    name: \"getRoundData\",\n    outputs: [\n      {\n        internalType: \"uint80\",\n        name: \"roundId\",\n        type: \"uint80\",\n      },\n      {\n        internalType: \"int256\",\n        name: \"answer\",\n        type: \"int256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"startedAt\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"updatedAt\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint80\",\n        name: \"answeredInRound\",\n        type: \"uint80\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"latestRoundData\",\n    outputs: [\n      {\n        internalType: \"uint80\",\n        name: \"roundId\",\n        type: \"uint80\",\n      },\n      {\n        internalType: \"int256\",\n        name: \"answer\",\n        type: \"int256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"startedAt\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"updatedAt\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint80\",\n        name: \"answeredInRound\",\n        type: \"uint80\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"version\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n];\n","export function decimalToScale(decimals: number): bigint {\n  return BigInt(\"1\" + \"0\".repeat(decimals));\n}\n","import { decimalToScale } from \"./decimalToScale\";\n\nexport function formatTokenAmount(amount: bigint, decimals: number, outDigits: number = 2) {\n  const sign = amount < 0n ? \"-\" : \"\";\n  amount = amount < 0n ? amount * -1n : amount;\n  const scale = decimalToScale(decimals);\n  const integer = amount / scale;\n  const fractional = amount - integer * scale;\n  const digits = fractional.toString().padStart(decimals, \"0\").slice(0, outDigits);\n  return sign + integer.toString() + \".\" + digits;\n}\n","import { useCurrentNetworkData } from \"../dapp/networks\";\nimport { Erc20Factory } from \"../typechain\";\nimport { AggregatorV3InterfaceFactory } from \"../typechain/AggregatorV3InterfaceFactory\";\nimport { formatTokenAmount } from \"./formatTokenAmount\";\nimport { Web3Provider } from \"@ethersproject/providers\";\nimport { useWeb3React } from \"@web3-react/core\";\nimport * as React from \"react\";\n\nexport type OptionType = \"call\" | \"put\";\nconst initialState = {\n  token: \"weth\" as string,\n  type: \"call\" as OptionType,\n  strike: 0n,\n  strikeString: \"0\",\n  amount: 0,\n  amountString: \"0\",\n  expiry: 7n,\n  assetPrice: null as null | bigint,\n  optionPremium: null as null | bigint,\n  tokenBalances: {} as Record<string, bigint>,\n};\ntype StateType = typeof initialState;\nconst StateProvider = React.createContext({\n  state: initialState,\n  refreshPrice: () => {},\n  refreshOptionPrice: () => {},\n  refreshBalances: () => {},\n  update: (s: Partial<StateType>) => {},\n});\nexport const useCurrentState = () => React.useContext(StateProvider);\nexport const GlobalState: React.FC = ({ children }) => {\n  const networkData = useCurrentNetworkData();\n  const ctx = useWeb3React<Web3Provider>();\n  const [state, setState] = React.useState(initialState);\n  const token = state.token;\n  const refreshPrice = React.useCallback(async () => {\n    if (ctx.account == null || ctx.library == null || networkData == null) {\n      return;\n    }\n    const chainLink = AggregatorV3InterfaceFactory.connect(networkData.priceOracles[token], await ctx.library.getSigner(ctx.account!));\n    const latestRound = await chainLink.callStatic.latestRoundData();\n    const assetPrice = BigInt(latestRound.answer.toString());\n    setState(s => {\n      return {\n        ...s,\n        amount: 1,\n        amountString: \"1\",\n        strike: assetPrice,\n        strikeString: formatTokenAmount(assetPrice, 8, 2),\n        assetPrice: BigInt(latestRound.answer.toString()),\n      };\n    });\n    return BigInt(latestRound.answer.toString());\n  }, [token, ctx.account, networkData, ctx.library]);\n  const refreshBalances = React.useCallback(async () => {\n    if (networkData == null || ctx.account == null || ctx.library == null) {\n      return;\n    }\n    const signer = await ctx.library.getSigner(ctx.account);\n    const tokens = [networkData.stable];\n    tokens.push(...Object.keys(networkData.tokens).map(k => (networkData.tokens as any)[k]));\n    tokens.forEach(async tok => {\n      const balance = await Erc20Factory.connect(tok.address, signer).balanceOf(ctx.account!);\n      setState(s => ({\n        ...s,\n        tokenBalances: {\n          ...s.tokenBalances,\n          [tok.symbol]: balance.toBigInt(),\n        },\n      }));\n    });\n  }, [ctx.account, networkData, ctx.library]);\n\n  React.useEffect(() => {\n    refreshBalances();\n  }, [refreshBalances]);\n\n  const update = React.useCallback(u => {\n    setState(s => ({ ...s, ...u }));\n  }, []);\n\n  React.useEffect(() => {\n    refreshPrice();\n  }, [refreshPrice]);\n\n  const refreshOptionPrice = React.useCallback(async () => {}, []);\n  return (\n    <StateProvider.Provider\n      value={{\n        state,\n        refreshPrice,\n        refreshOptionPrice,\n        update,\n        refreshBalances,\n      }}\n    >\n      {children}\n    </StateProvider.Provider>\n  );\n};\n","/* eslint-disable no-nested-ternary */\nimport { injected, walletconnect } from \"../dapp/connectors\";\nimport Typography from \"@mui/material/Typography\";\nimport { useWeb3React } from \"@web3-react/core\";\n\nexport function Account() {\n  const { connector, account, deactivate } = useWeb3React();\n\n  const connected = (connection: typeof injected | typeof walletconnect) => connection === connector;\n\n  return (\n    <div\n      onClick={async () => {\n        if (connected(walletconnect)) {\n          (connector as any).close();\n        }\n        deactivate();\n      }}\n      className=\"btn btn-ghost btn-sm rounded-btn\"\n    >\n      <Typography>\n        Account: &nbsp;\n        {account == null ? \"Disconnceted\" : account ? `${account.substring(0, 6)}...${account.substring(account.length - 4)}` : \"\"}\n      </Typography>\n    </div>\n  );\n}\n\nexport default Account;\n","import { useNetworkType } from \"../dapp/networks\";\nimport { Typography } from \"@mui/material\";\n\nexport function ChainId() {\n  const network = useNetworkType();\n\n  return (\n    <>\n      <Typography>\n        <span>Network:&nbsp;</span>\n        {network == null ? <span>Not connected</span> : network}\n      </Typography>\n    </>\n  );\n}\n\nexport default ChainId;\n","import Stack from \"@mui/material/Stack\";\nimport ToggleButton from \"@mui/material/ToggleButton\";\nimport ToggleButtonGroup from \"@mui/material/ToggleButtonGroup\";\nimport { useLocation, useNavigate } from \"react-router-dom\";\n\nexport const Controls = (props: { onUpdate: () => void }) => {\n  const location = useLocation();\n  const navigate = useNavigate();\n  return (\n    <Stack direction=\"row\" alignItems=\"center\" justifyContent=\"center\">\n      <ToggleButtonGroup color=\"primary\" value={location.pathname === \"\" || location.pathname === \"/\" ? \"/buy\" : location.pathname} exclusive>\n        <ToggleButton\n          onClick={() => {\n            navigate(\"/buy\");\n            props.onUpdate();\n          }}\n          value=\"/buy\"\n        >\n          Buy\n        </ToggleButton>\n        <ToggleButton\n          onClick={() => {\n            navigate(\"/holdings\");\n            props.onUpdate();\n          }}\n          value=\"/holdings\"\n        >\n          Options\n        </ToggleButton>\n        <ToggleButton\n          onClick={() => {\n            navigate(\"/pool\");\n            props.onUpdate();\n          }}\n          value=\"/pool\"\n        >\n          Pool\n        </ToggleButton>\n        <ToggleButton\n          onClick={() => {\n            navigate(\"/liquidity\");\n            props.onUpdate();\n          }}\n          value=\"/liquidity\"\n        >\n          Liquidity\n        </ToggleButton>\n      </ToggleButtonGroup>\n    </Stack>\n  );\n};\n","/* eslint-disable no-nested-ternary */\nimport { useOnTestnet, useCurrentNetworkData, networks } from \"../dapp/networks\";\nimport { Erc20MockFactory, PriceProviderMockFactory } from \"../typechain\";\nimport { Account } from \"./Account\";\nimport { ChainId } from \"./ChainId\";\nimport { Controls } from \"./Controls\";\nimport { useCurrentState } from \"./GlobalState\";\nimport { Web3Provider } from \"@ethersproject/providers\";\nimport Box from \"@mui/material/Box\";\nimport Button from \"@mui/material/Button\";\nimport Stack from \"@mui/material/Stack\";\nimport Toolbar from \"@mui/material/Toolbar\";\nimport Typography from \"@mui/material/Typography\";\nimport { useWeb3React } from \"@web3-react/core\";\nimport { utils } from \"ethers\";\nimport { useSnackbar } from \"notistack\";\n\nconst ControlsWrapper = () => {\n  const s = useCurrentState();\n  return (\n    <Controls\n      onUpdate={() => {\n        s.refreshPrice();\n        s.refreshBalances();\n      }}\n    />\n  );\n};\n\nconst TestnetControls = () => {\n  const noti = useSnackbar();\n  const curNetworkData = useCurrentNetworkData();\n  const ctx = useWeb3React<Web3Provider>();\n  const mkMinter = (addr: string, amount: string, decimals: string) => async () => {\n    const r = await Erc20MockFactory.connect(addr, await ctx.library.getSigner(ctx.account)).mint(utils.parseUnits(amount, decimals));\n    noti.enqueueSnackbar(\"Minting..\");\n    await r.wait(1);\n    noti.enqueueSnackbar(\"Tokens minted!\");\n  };\n  const mkPriceAdvancer = (amount: bigint, token: \"weth\") => {\n    return async () => {\n      const priceOracleAddr = curNetworkData.priceOracles[token];\n      const priceProvider = await PriceProviderMockFactory.connect(priceOracleAddr, await ctx.library.getSigner(ctx.account));\n\n      const { answer } = await priceProvider.latestRoundData();\n      const newPrice = answer.toBigInt() + (answer.toBigInt() * amount) / 100n;\n      const r = await priceProvider.setPrice(newPrice);\n      noti.enqueueSnackbar(\"Changing \" + token + \" price\");\n      await r.wait(1);\n      noti.enqueueSnackbar(\"Price updated\");\n    };\n  };\n\n  return (\n    <div style={{ position: \"absolute\", left: 0, bottom: 16 }}>\n      <Stack sx={{ marginLeft: 3 }} direction=\"row\" spacing={2}>\n        <Button onClick={mkMinter(networks.testnet.stable.address, \"50000\", \"6\")} size=\"small\" variant=\"contained\" color=\"secondary\">\n          Mint 50000 USDC\n        </Button>\n        <Button onClick={mkMinter(networks.testnet.tokens.weth.address, \"10\", \"18\")} size=\"small\" variant=\"contained\" color=\"secondary\">\n          Mint 10 WETH\n        </Button>\n        <Button onClick={mkPriceAdvancer(5n, \"weth\")} size=\"small\" variant=\"contained\" color=\"secondary\">\n          + 5% eth price\n        </Button>\n        <Button onClick={mkPriceAdvancer(-5n, \"weth\")} size=\"small\" variant=\"contained\" color=\"secondary\">\n          - 5% eth price\n        </Button>\n      </Stack>\n    </div>\n  );\n};\n\nexport function Header() {\n  const { active, error } = useWeb3React();\n  const isTestNet = useOnTestnet();\n\n  return (\n    <>\n      <Box sx={{ width: \"100%\", height: 50, position: \"relative\" }}>\n        <Toolbar variant=\"dense\">\n          <Box sx={{ display: \"flex\", flexDirection: \"row\" }}>\n            <Typography>{active ? \"🟢\" : error ? \"🔴\" : \"🟠\"}&nbsp;</Typography>\n            <ChainId />\n          </Box>\n\n          <Box sx={{ flexGrow: 1, display: \"flex\", flexDirection: \"row\" }}></Box>\n          <Account />\n        </Toolbar>\n        <div style={{ position: \"absolute\", top: 8, left: \"50%\", transform: \"translateX(-50%)\" }}>\n          <ControlsWrapper />\n        </div>\n      </Box>\n      {isTestNet && <TestnetControls />}\n    </>\n  );\n}\n\nexport default Header;\n","import * as React from \"react\";\nimport Tab from \"@mui/material/Tab\";\nimport Tabs from '@mui/material/Tabs';\nimport Icon from \"react-crypto-icons\";\nimport { useCurrentNetworkData } from \"../dapp/networks\";\nimport { useCurrentState } from \"./GlobalState\";\n\nexport function CryptoTabs() {\n  const s = useCurrentState();\n  const data = useCurrentNetworkData();\n  const availableTokens = Object.keys(data.tokens).filter(i => i !== \"stable\");\n  return <Tabs value={s.state.token}>\n    {availableTokens.map(tok => {\n      const t = tok.slice(1);\n      return <Tab onClick={() => s.update({ token: tok })} value={tok} key={tok} icon={<Icon name={t} size={25} />} iconPosition=\"start\" label={t.toUpperCase()} />;\n    })}\n  </Tabs>;\n}\n","import Chip from \"@mui/material/Chip\";\nimport ListItemIcon from \"@mui/material/ListItemIcon\";\nimport Menu from \"@mui/material/Menu\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport * as React from \"react\";\nimport Icon from \"react-crypto-icons\";\n\ninterface CurrencySelectorProps {\n  options: string[];\n  value: string;\n  onChange: (s: string) => void;\n}\n\nexport function CurrencySelector(props: CurrencySelectorProps) {\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const open = Boolean(anchorEl);\n  const handleClick = event => {\n    setAnchorEl(event.currentTarget);\n  };\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  return (\n    <div>\n      <Chip onClick={handleClick} icon={<Icon name={props.value} size={25} />} label={props.value.toUpperCase()} variant=\"outlined\" />\n      <Menu\n        id=\"basic-menu\"\n        anchorEl={anchorEl}\n        open={open}\n        onClose={handleClose}\n        MenuListProps={{\n          \"aria-labelledby\": \"basic-button\",\n        }}\n      >\n        {props.options.map(choice => (\n          <MenuItem\n            key={choice}\n            onClick={() => {\n              props.onChange(choice);\n              handleClose();\n            }}\n          >\n            <ListItemIcon>\n              <Icon name={choice} size={25} />\n            </ListItemIcon>{\" \"}\n            {choice.toUpperCase()}\n          </MenuItem>\n        ))}\n      </Menu>\n    </div>\n  );\n}\n\nexport const StableCoinSelector = () => <CurrencySelector value=\"usdc\" options={[\"usdc\"]} onChange={() => {}} />;\n","import { useCurrentState } from \"./GlobalState\";\nimport Stack from \"@mui/material/Stack\";\nimport Switch from \"@mui/material/Switch\";\nimport Typography from \"@mui/material/Typography\";\nimport * as React from \"react\";\n\nexport function OptionType() {\n  const s = useCurrentState();\n  return (\n    <Stack direction=\"row\" spacing={1} alignItems=\"center\" justifyContent=\"center\">\n      <Typography color=\"success\">Call</Typography>\n      <Switch onChange={() => s.update({ type: s.state.type === \"put\" ? \"call\" : \"put\" })} checked={s.state.type === \"put\"} color=\"error\" />\n      <Typography color=\"error\">Put</Typography>\n    </Stack>\n  );\n}\n","import { Token } from \"../dapp/networks\";\n\nexport function floatToWei(amount: number, token: Token) {\n  const [integer, fractional = \"\"] = Math.abs(amount).toFixed(token.decimals).split(\".\");\n\n  return BigInt(Math.sign(amount)) * BigInt(integer + fractional);\n}\n","import { Token } from \"../dapp/networks\";\nimport { formatTokenAmount } from \"./formatTokenAmount\";\n\nexport function formatPriceWithUnit(price: bigint, token: Token, outDigits: number) {\n  return formatTokenAmount(price, token.decimals, outDigits) + \" \" + token.symbol.toUpperCase();\n}\n","import { useCurrentNetworkData } from \"../dapp/networks\";\nimport { Erc20Factory, FacadeFactory } from \"../typechain\";\nimport { CryptoTabs } from \"./CryptoTabs\";\nimport { CurrencySelector, StableCoinSelector } from \"./CurrencySelector\";\nimport { useCurrentState } from \"./GlobalState\";\nimport { OptionType } from \"./OptionType\";\nimport { floatToWei } from \"./floatToWei\";\nimport { formatPriceWithUnit } from \"./formatPriceWithUnit\";\nimport { formatTokenAmount } from \"./formatTokenAmount\";\nimport { Web3Provider } from \"@ethersproject/providers\";\nimport Box from \"@mui/material/Box\";\nimport Button from \"@mui/material/Button\";\nimport Chip from \"@mui/material/Chip\";\nimport Container from \"@mui/material/Container\";\nimport FormControl from \"@mui/material/FormControl\";\nimport FormHelperText from \"@mui/material/FormHelperText\";\nimport InputAdornment from \"@mui/material/InputAdornment\";\nimport InputLabel from \"@mui/material/InputLabel\";\nimport OutlinedInput from \"@mui/material/OutlinedInput\";\nimport Paper from \"@mui/material/Paper\";\nimport Slider from \"@mui/material/Slider\";\nimport Stack from \"@mui/material/Stack\";\nimport Typography from \"@mui/material/Typography\";\nimport { useWeb3React } from \"@web3-react/core\";\nimport { useSnackbar } from \"notistack\";\nimport * as React from \"react\";\n\nconst StrikeField = () => {\n  const s = useCurrentState();\n  return (\n    <FormControl variant=\"outlined\">\n      <InputLabel>Strike</InputLabel>\n      <OutlinedInput\n        label=\"strike\"\n        placeholder=\"0.0\"\n        inputProps={\n          {\n            style: { textAlign: \"right \" },\n          } as any\n        }\n        startAdornment={\n          <InputAdornment position=\"start\">\n            <StableCoinSelector />\n          </InputAdornment>\n        }\n        value={s.state.strikeString}\n        onChange={e => {\n          const v = e.target.value;\n          const f = parseFloat(v);\n          if (isNaN(f)) {\n            return;\n          }\n          const strike = floatToWei(f, { decimals: 8 } as any);\n          s.update({\n            strikeString: v,\n            strike,\n          });\n        }}\n        inputMode=\"numeric\"\n      />\n      <FormHelperText>\n        {s.state.assetPrice == null ? \"*\" : formatTokenAmount(s.state.assetPrice, 8, 2)} MIM / {s.state.token.slice(1).toUpperCase()}\n      </FormHelperText>\n    </FormControl>\n  );\n};\nconst StrikeSizes = () => {\n  const s = useCurrentState();\n  const price = s.state.assetPrice == null ? 0n : s.state.assetPrice;\n\n  const options: React.ReactNode[] = [];\n  const defaultColor = s.state.type === \"call\" ? \"success\" : \"error\";\n  for (let i = -2; i <= 2; i++) {\n    const optionPrice = s.state.assetPrice == null ? \"*\" : (price * (100n + BigInt(i) * 10n)) / 100n;\n    options.push(\n      (\n        <Chip\n          key={s.state.type + i}\n          clickable={true}\n          onClick={() => {\n            if (optionPrice === \"*\") {\n              return;\n            }\n            s.update({\n              strike: optionPrice,\n              strikeString: formatTokenAmount(optionPrice, 8, 2),\n            });\n          }}\n          label={optionPrice === \"*\" ? optionPrice : formatTokenAmount(optionPrice, 8, 2)}\n          color={optionPrice === s.state.strike ? defaultColor : \"default\"}\n        />\n      ) as any,\n    );\n  }\n\n  return (\n    <Stack sx={{ marginTop: 2 }} direction=\"row\" justifyContent=\"space-around\" spacing={1}>\n      {options}\n    </Stack>\n  );\n};\n\nconst SEC_IN_A_DAY = 24n * 60n * 60n;\nconst SubmitButton = () => {\n  const notistack = useSnackbar();\n  const s = useCurrentState();\n  const ctx = useWeb3React<Web3Provider>();\n  const data = useCurrentNetworkData();\n  const facade = data?.facade;\n  const paymentToken = data?.stable;\n  const tokenInPool = data?.tokens[s.state.token];\n  const availableBalance = s.state.tokenBalances[paymentToken?.symbol ?? \"weth\"] || 0n;\n  const pool = data?.pools[s.state.token][s.state.type];\n  const amount = s.state.amount;\n  const strike = s.state.strike;\n  const expiry = s.state.expiry;\n  const premium = s.state.optionPremium ?? 0n;\n  const [submitting, setSutmitting] = React.useState(false);\n\n  const [isApproved, setIsApproved] = React.useState(false);\n  const [isApproving, setIsApproving] = React.useState(false);\n\n  React.useEffect(() => {\n    if (facade == null || paymentToken == null) {\n      return;\n    }\n    const run = async () => {\n      const signer = await ctx.library.getSigner();\n      const paymentTokenInst = Erc20Factory.connect(paymentToken.address, signer);\n      const currentAllowance = await paymentTokenInst.allowance(await signer.getAddress(), facade);\n      if (currentAllowance.lt(\"11579208923731619542357098500868790785326998466564056403945758400791312963\")) {\n        setIsApproved(false);\n      } else {\n        setIsApproved(true);\n      }\n    };\n\n    run();\n  }, [ctx, paymentToken, facade]);\n\n  const approve = React.useCallback(async () => {\n    if (facade == null || paymentToken == null) {\n      return;\n    }\n    notistack.enqueueSnackbar(\"Approving MIM\");\n    setIsApproving(true);\n    try {\n      const signer = await ctx.library.getSigner();\n\n      const paymentTokenInst = Erc20Factory.connect(paymentToken.address, signer);\n      await (await paymentTokenInst.approve(facade, \"1157920892373161954235709850086879078532699846656405640394575840079131296399\")).wait(1);\n      notistack.enqueueSnackbar(\"Approval complete\");\n      setIsApproved(true);\n    } catch (e) {\n      notistack.enqueueSnackbar(\"Approval failed\");\n    } finally {\n      setIsApproving(false);\n    }\n  }, [ctx, paymentToken, facade, notistack]);\n\n  const submit = React.useCallback(async () => {\n    if (pool == null || facade == null || paymentToken == null || tokenInPool == null) {\n      return;\n    }\n    if (ctx.library == null) {\n      return;\n    }\n    if (amount < 1) {\n      return;\n    }\n    if (strike < 1) {\n      return;\n    }\n    if (premium == null) {\n      return;\n    }\n    setSutmitting(true);\n    try {\n      const signer = await ctx.library.getSigner();\n\n      const facadeInst = FacadeFactory.connect(facade, signer);\n      const paymentTokenInst = Erc20Factory.connect(paymentToken.address, signer);\n\n      const scaledAmount = floatToWei(amount, tokenInPool);\n      const path = s.state.type === \"put\" ? [paymentToken.address] : [paymentToken.address, tokenInPool.address];\n      const currentAllowance = await paymentTokenInst.allowance(await signer.getAddress(), facade);\n\n      if (currentAllowance.lt(scaledAmount)) {\n        await (await paymentTokenInst.approve(facadeInst.address, \"1157920892373161954235709850086879078532699846656405640394575840079131296399\")).wait(1);\n      }\n      const r = await facadeInst.createOption(pool, expiry * SEC_IN_A_DAY, scaledAmount, strike, path, premium);\n      notistack.enqueueSnackbar(\"Creating option\");\n      await r.wait(1);\n      notistack.enqueueSnackbar(\"Option created\");\n      s.refreshBalances();\n    } catch (e) {\n      notistack.enqueueSnackbar(\"Failed to create option\");\n    } finally {\n      setSutmitting(false);\n    }\n  }, [pool, facade, paymentToken, tokenInPool, ctx.library, amount, strike, premium, s, expiry, notistack]);\n\n  if (!isApproved) {\n    return (\n      <Button disabled={isApproving} onClick={approve} variant=\"contained\" color=\"primary\">\n        Approve {data.stable.symbol.toUpperCase()}\n      </Button>\n    );\n  }\n\n  if (submitting) {\n    return (\n      <Button variant=\"contained\" disabled={true} color={s.state.type === \"call\" ? \"success\" : \"error\"}>\n        Pending please wait\n      </Button>\n    );\n  }\n\n  return (\n    <Button disabled={availableBalance < premium} onClick={submit} variant=\"contained\" color={s.state.type === \"call\" ? \"success\" : \"error\"}>\n      Create {s.state.type}\n    </Button>\n  );\n};\nconst AmountField = () => {\n  const s = useCurrentState();\n  const data = useCurrentNetworkData();\n  const availableTokens = Object.keys(data.tokens).filter(i => i !== \"stable\");\n  return (\n    <FormControl variant=\"outlined\">\n      <InputLabel>Option size</InputLabel>\n      <OutlinedInput\n        label=\"Option size\"\n        placeholder=\"0\"\n        value={s.state.amountString}\n        onChange={e => {\n          const n = parseFloat(e.target.value);\n          if (isNaN(n)) {\n            return;\n          }\n\n          s.update({\n            amount: n,\n            amountString: e.target.value,\n          });\n        }}\n        inputProps={\n          {\n            style: { textAlign: \"right \" },\n          } as any\n        }\n        startAdornment={\n          <InputAdornment position=\"start\">\n            <CurrencySelector value={s.state.token.slice(1)} options={availableTokens.map(e => e.slice(1))} onChange={token => s.update({ token: (\"w\" + token) as any })} />\n          </InputAdornment>\n        }\n      />\n    </FormControl>\n  );\n};\nconst ExpirySlider = () => {\n  const s = useCurrentState();\n\n  return (\n    <Box>\n      <Typography>Expiry</Typography>\n      <Slider\n        disabled={s.state.strike !== s.state.assetPrice}\n        defaultValue={15}\n        valueLabelDisplay=\"on\"\n        min={1}\n        value={s.state.strike !== s.state.assetPrice ? 30 : Number(s.state.expiry)}\n        onChange={(_, v) =>\n          s.update({\n            expiry: BigInt(v as number),\n          })\n        }\n        max={30}\n      />\n    </Box>\n  );\n};\nconst Premium = () => {\n  const ctx = useWeb3React<Web3Provider>();\n  const s = useCurrentState();\n  const data = useCurrentNetworkData();\n  const facade = data?.facade;\n  const paymentToken = data?.stable;\n  const tokenInPool = data?.tokens[s.state.token];\n  const availableBalance = s.state.tokenBalances[paymentToken?.symbol ?? \"weth\"] || 0n;\n  const pool = data?.pools[s.state.token][s.state.type];\n  const amount = s.state.amount;\n  const strike = s.state.strike;\n  const update = s.update;\n  const type = s.state.type;\n  const expiry = s.state.expiry;\n  const running = React.useRef(false);\n  React.useEffect(() => {\n    if (pool == null) {\n      return;\n    }\n    if (ctx.library == null) {\n      return;\n    }\n    if (amount < 1) {\n      return;\n    }\n    if (strike < 1) {\n      return;\n    }\n\n    const run = async () => {\n      if (tokenInPool == null || running.current || ctx.library == null || facade == null || paymentToken == null) {\n        return;\n      }\n      running.current = true;\n      const signer = await ctx.library.getSigner();\n\n      const facadeInst = FacadeFactory.connect(facade, signer);\n\n      const amount_ = floatToWei(amount, tokenInPool);\n      const path = type === \"put\" ? [paymentToken.address] : [paymentToken.address, tokenInPool.address];\n\n      try {\n        const price = await facadeInst.callStatic.getOptionPrice(pool, expiry * SEC_IN_A_DAY, amount_, strike, path);\n        console.log(price, pool, expiry * SEC_IN_A_DAY, amount_, strike, path);\n        console.log(price.total.toBigInt());\n        update({\n          optionPremium: price.total.toBigInt(),\n        });\n      } catch (e) {\n        update({\n          optionPremium: null,\n        });\n      } finally {\n        running.current = false;\n      }\n    };\n    run();\n  }, [running, ctx.library, amount, tokenInPool, update, facade, expiry, type, strike, paymentToken, pool]);\n  if (data == null || paymentToken == null) {\n    return null;\n  }\n  return (\n    <FormControl variant=\"outlined\">\n      <InputLabel>Premium</InputLabel>\n      <OutlinedInput\n        label=\"Premium\"\n        placeholder=\"0.0\"\n        readOnly={true}\n        inputProps={\n          {\n            style: { textAlign: \"right \" },\n          } as any\n        }\n        startAdornment={<StableCoinSelector />}\n        value={s.state.optionPremium == null ? \"*\" : formatTokenAmount(s.state.optionPremium, paymentToken?.decimals ?? 2, 2)}\n      />\n      <FormHelperText>Available balance: {formatPriceWithUnit(availableBalance, paymentToken, 2)}</FormHelperText>\n    </FormControl>\n  );\n};\n\nexport const UIBuy = () => {\n  return (\n    <Container maxWidth=\"sm\">\n      <Paper sx={{ paddingLeft: 3, paddingRight: 3, paddingBottom: 3 }} variant=\"outlined\">\n        <CryptoTabs />\n        <Box component=\"form\" noValidate>\n          <Stack direction=\"column\" spacing={4}>\n            <OptionType />\n            <Stack direction=\"column\">\n              <StrikeField />\n              <StrikeSizes />\n            </Stack>\n            <AmountField />\n            <ExpirySlider />\n            <Premium />\n            <SubmitButton />\n          </Stack>\n        </Box>\n      </Paper>\n    </Container>\n  );\n};\n","import { useCurrentNetworkData } from \"../dapp/networks\";\nimport { UiProviderFactory, UiProvider } from \"../typechain\";\nimport { useCurrentState } from \"./GlobalState\";\nimport { formatTokenAmount } from \"./formatTokenAmount\";\nimport { Web3Provider } from \"@ethersproject/providers\";\nimport Button from \"@mui/material/Button\";\nimport Chip from \"@mui/material/Chip\";\nimport Container from \"@mui/material/Container\";\nimport Paper from \"@mui/material/Paper\";\nimport Table from \"@mui/material/Table\";\nimport TableBody from \"@mui/material/TableBody\";\nimport TableCell from \"@mui/material/TableCell\";\nimport TableContainer from \"@mui/material/TableContainer\";\nimport TableHead from \"@mui/material/TableHead\";\nimport TableRow from \"@mui/material/TableRow\";\nimport Toolbar from \"@mui/material/Toolbar\";\nimport Typography from \"@mui/material/Typography\";\nimport { useWeb3React } from \"@web3-react/core\";\nimport * as React from \"react\";\n\ntype TranchesPageData = Parameters<Parameters<ReturnType<UiProvider[\"tranchesViewData\"]>[\"then\"]>[0]>[0];\nexport const UILiquidity = () => {\n  const s = useCurrentState();\n  const [holdings, setHoldings] = React.useState<TranchesPageData>();\n  const ctx = useWeb3React<Web3Provider>();\n  // const [exercising, setExercising] = React.useState(false)\n  const networkData = useCurrentNetworkData();\n  const pool = networkData?.pools[s.state.token][s.state.type];\n\n  const fetchState = React.useCallback(async () => {\n    if (pool == null || ctx.account == null || ctx.library == null || networkData == null) {\n      return;\n    }\n    setHoldings(null);\n    const signer = await ctx.library.getSigner(ctx.account);\n    const uiProvider = await UiProviderFactory.connect(networkData.uiProvider, signer);\n    const pageData = await uiProvider.tranchesViewData(await signer.getAddress(), pool, 0);\n\n    setHoldings(pageData);\n  }, [ctx, pool, networkData]);\n  React.useEffect(() => {\n    const run = async () => {\n      await fetchState();\n    };\n    run();\n  }, [fetchState]);\n\n  const rows: Array<TranchesPageData[\"tranchesPageEntries\"][0]> = [];\n  holdings?.tranchesPageEntries.forEach(row => {\n    if (row.amount.isZero()) {\n      return;\n    }\n    rows.push(row);\n  });\n  if (networkData == null) {\n    return null;\n  }\n\n  return (\n    <Container maxWidth=\"sm\">\n      <Paper variant=\"outlined\">\n        <Toolbar>\n          <Typography sx={{ flex: \"1 1 100%\" }} variant=\"h6\" id=\"tableTitle\" component=\"div\">\n            Current liquidity provided to pools\n          </Typography>\n        </Toolbar>\n        <TableContainer>\n          <Table aria-label=\"simple table\">\n            <TableHead>\n              <TableRow>\n                <TableCell align=\"right\">Amount</TableCell>\n                <TableCell align=\"right\">Staked for</TableCell>\n                <TableCell align=\"right\">PNL</TableCell>\n                <TableCell align=\"right\">State</TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {rows.map(row => {\n                const daysStaked = (Date.now() - row.creationTimestamp.toNumber() * 1000) / (1000 * 60 * 60 * 24);\n                const currency = networkData.tokensLookup[row.asset];\n\n                return (\n                  <TableRow key={row.trancheId.toString()}>\n                    <TableCell align=\"right\">\n                      {formatTokenAmount(row.amount.toBigInt(), currency.decimals, Math.ceil(currency.decimals / 4))}{\" \"}\n                      {networkData.tokensLookup[row.asset].symbol.slice(1).toUpperCase()}\n                    </TableCell>\n                    <TableCell align=\"right\">{row.state === 1 ? daysStaked.toFixed(2) + \" days\" : \"-\"}</TableCell>\n                    <TableCell align=\"right\">{formatTokenAmount(row.pnl.toBigInt(), currency.decimals, Math.ceil(currency.decimals / 4))}</TableCell>\n                    <TableCell align=\"right\">\n                      {row.state === 0 ? (\n                        <Chip size=\"small\" label=\"Unknown\" color=\"error\" />\n                      ) : row.state === 1 ? (\n                        <Button disabled={daysStaked < 30}>Withdraw</Button>\n                      ) : (\n                        <Chip size=\"small\" label=\"Withdrawn\" color=\"success\" />\n                      )}\n                    </TableCell>\n                  </TableRow>\n                );\n              })}\n            </TableBody>\n          </Table>\n        </TableContainer>\n      </Paper>\n    </Container>\n  );\n};\n","import { useCurrentNetworkData, Token } from \"../dapp/networks\";\nimport { Erc20Factory, HegicPutFactory } from \"../typechain\";\nimport { CryptoTabs } from \"./CryptoTabs\";\nimport { CurrencySelector } from \"./CurrencySelector\";\nimport { useCurrentState } from \"./GlobalState\";\nimport { OptionType } from \"./OptionType\";\nimport { floatToWei } from \"./floatToWei\";\nimport { formatPriceWithUnit } from \"./formatPriceWithUnit\";\nimport { Web3Provider } from \"@ethersproject/providers\";\nimport Box from \"@mui/material/Box\";\nimport Button from \"@mui/material/Button\";\nimport Container from \"@mui/material/Container\";\nimport FormControl from \"@mui/material/FormControl\";\nimport FormHelperText from \"@mui/material/FormHelperText\";\nimport InputAdornment from \"@mui/material/InputAdornment\";\nimport InputLabel from \"@mui/material/InputLabel\";\nimport OutlinedInput from \"@mui/material/OutlinedInput\";\nimport Paper from \"@mui/material/Paper\";\nimport Stack from \"@mui/material/Stack\";\nimport { useWeb3React } from \"@web3-react/core\";\nimport { useSnackbar } from \"notistack\";\nimport * as React from \"react\";\n\nconst AddToPoolButton = () => {\n  const noti = useSnackbar();\n  const ctx = useWeb3React<Web3Provider>();\n  const s = useCurrentState();\n  const data = useCurrentNetworkData();\n  const [addingLiquidty, setAddingLiquidty] = React.useState(false);\n  const isPut = s.state.type === \"put\";\n  const [isApproved, setIsApproved] = React.useState(false);\n  const [isApproving, setIsApproving] = React.useState(false);\n  const pool = data?.pools[s.state.token][s.state.type] as string | undefined;\n  const tokenInPool = isPut ? data?.stable : (data?.tokens[s.state.token] as Token);\n\n  React.useEffect(() => {\n    if (pool == null || tokenInPool == null) {\n      return;\n    }\n    const run = async () => {\n      const signer = await ctx.library.getSigner();\n      const erc20Inst = Erc20Factory.connect(tokenInPool.address, signer);\n      const currentAllowance = await erc20Inst.allowance(await signer.getAddress(), pool);\n      if (currentAllowance.lt(\"11579208923731619542357098500868790785326998466564056403945758400791312963\")) {\n        setIsApproved(false);\n      } else {\n        setIsApproved(true);\n      }\n    };\n\n    run();\n  }, [ctx, tokenInPool, pool]);\n\n  const approve = React.useCallback(async () => {\n    if (pool == null || tokenInPool == null) {\n      return;\n    }\n    setIsApproving(true);\n    try {\n      const signer = await ctx.library.getSigner();\n\n      const ercInst = Erc20Factory.connect(tokenInPool.address, signer);\n      noti.enqueueSnackbar(\"Approving\");\n\n      const r = await ercInst.approve(pool, \"1157920892373161954235709850086879078532699846656405640394575840079131296399\");\n      await r.wait(1);\n      noti.enqueueSnackbar(\"Approval complete\");\n      setIsApproved(true);\n    } catch (e) {\n      noti.enqueueSnackbar(\"Approval failed\");\n    } finally {\n      setIsApproving(false);\n    }\n  }, [ctx, tokenInPool, pool, noti]);\n\n  const addToPool = React.useCallback(async () => {\n    if (ctx.library == null || ctx.account == null || tokenInPool == null || data == null) {\n      return null;\n    }\n    setAddingLiquidty(true);\n    const signer = await ctx.library.getSigner(ctx.account);\n    const tokenErc = Erc20Factory.connect(tokenInPool.address, signer);\n    const poolInst = HegicPutFactory.connect(pool, signer);\n\n    const amount = floatToWei(s.state.amount, tokenInPool);\n    const allowance = await tokenErc.allowance(ctx.account, pool);\n    if (allowance.lt(amount)) {\n      const tx = await tokenErc.approve(pool, amount);\n      noti.enqueueSnackbar(\"Approving liquidity\");\n      await tx.wait(1);\n    }\n\n    const r = await poolInst.provideFrom(signer._address, amount, \"0\");\n    noti.enqueueSnackbar(\"Providing liquidity\");\n    await r.wait(1);\n    noti.enqueueSnackbar(\"Liquidity provided\");\n\n    setAddingLiquidty(false);\n  }, [noti, ctx, data, s.state.amount, tokenInPool, pool]);\n\n  if (!isApproved) {\n    return (\n      <Button disabled={isApproving} onClick={approve} variant=\"contained\" color=\"primary\">\n        Approve {tokenInPool.symbol.toUpperCase()}\n      </Button>\n    );\n  }\n  if (addingLiquidty) {\n    return (\n      <Button variant=\"contained\" disabled={true} color={s.state.type === \"call\" ? \"success\" : \"error\"}>\n        Pending please wait\n      </Button>\n    );\n  }\n  return (\n    <Button onClick={addToPool} variant=\"contained\" color={s.state.type === \"call\" ? \"success\" : \"error\"}>\n      Provide liqudity to {s.state.token} {s.state.type} pool\n    </Button>\n  );\n};\n\nconst AmountToAddField = () => {\n  const s = useCurrentState();\n  const isPut = s.state.type === \"put\";\n  const data = useCurrentNetworkData();\n  if (data == null) {\n    return null;\n  }\n  const availableTokens = Object.keys(data.tokens).filter(i => i !== \"stable\");\n  const tokenInPool = isPut ? data.stable : data.tokens[s.state.token];\n  const availableBalance = s.state.tokenBalances[tokenInPool.symbol] || 0n;\n\n  return (\n    <Stack direction=\"column\" spacing={1}>\n      <FormControl variant=\"outlined\">\n        <InputLabel>Amount</InputLabel>\n        <OutlinedInput\n          label=\"Amount\"\n          placeholder=\"0.0\"\n          value={s.state.amountString}\n          onChange={e => {\n            const n = parseFloat(e.target.value);\n            if (isNaN(n)) {\n              return;\n            }\n\n            s.update({\n              amount: n,\n              amountString: e.target.value,\n            });\n          }}\n          startAdornment={\n            <InputAdornment position=\"start\">\n              <CurrencySelector value={s.state.token.slice(1)} options={availableTokens.map(e => e.slice(1))} onChange={token => s.update({ token: (\"w\" + token) as any })} />\n            </InputAdornment>\n          }\n          inputProps={\n            {\n              style: { textAlign: \"right \" },\n            } as any\n          }\n        />\n        <FormHelperText id=\"outlined-weight-helper-text\">Available balance: {formatPriceWithUnit(availableBalance, tokenInPool, 2)}</FormHelperText>\n      </FormControl>\n    </Stack>\n  );\n};\nexport const UIPool = () => {\n  return (\n    <Container maxWidth=\"sm\">\n      <Paper sx={{ paddingLeft: 3, paddingRight: 3, paddingBottom: 3 }} variant=\"outlined\">\n        <CryptoTabs />\n        <Box component=\"form\" noValidate>\n          <Stack direction=\"column\" spacing={4}>\n            <OptionType />\n            <AmountToAddField />\n            <AddToPoolButton />\n          </Stack>\n        </Box>\n      </Paper>\n    </Container>\n  );\n};\n","import { useCurrentNetworkData } from \"../dapp/networks\";\nimport { FacadeFactory, OptionsManagerFactory, UiProviderFactory, UiProvider, HegicPutFactory } from \"../typechain\";\nimport { useCurrentState } from \"./GlobalState\";\nimport { formatTokenAmount } from \"./formatTokenAmount\";\nimport { Web3Provider } from \"@ethersproject/providers\";\nimport Box from \"@mui/material/Box\";\nimport Button from \"@mui/material/Button\";\nimport Chip from \"@mui/material/Chip\";\nimport Container from \"@mui/material/Container\";\nimport Paper from \"@mui/material/Paper\";\nimport Stack from \"@mui/material/Stack\";\nimport Table from \"@mui/material/Table\";\nimport TableBody from \"@mui/material/TableBody\";\nimport TableCell from \"@mui/material/TableCell\";\nimport TableContainer from \"@mui/material/TableContainer\";\nimport TableHead from \"@mui/material/TableHead\";\nimport TablePagination from \"@mui/material/TablePagination\";\nimport TableRow from \"@mui/material/TableRow\";\nimport Toolbar from \"@mui/material/Toolbar\";\nimport Typography from \"@mui/material/Typography\";\nimport { useWeb3React } from \"@web3-react/core\";\nimport { useSnackbar } from \"notistack\";\nimport * as React from \"react\";\nimport { Link } from \"react-router-dom\";\n\ntype OptionsPageData = Parameters<Parameters<ReturnType<UiProvider[\"optionsViewData\"]>[\"then\"]>[0]>[0];\nexport const UIHoldings = () => {\n  const s = useCurrentState();\n  const notistack = useSnackbar();\n  const [holdings, setHoldings] = React.useState<OptionsPageData | undefined>();\n  const ctx = useWeb3React<Web3Provider>();\n  const [page, setPage] = React.useState(0);\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n  const [exercising, setExercising] = React.useState(false);\n  const networkData = useCurrentNetworkData();\n  const [loading, setLoading] = React.useState(true);\n  const fetchState = React.useCallback(async () => {\n    if (ctx.library == null || ctx.account == null || networkData == null) {\n      return;\n    }\n    setLoading(true);\n    try {\n      const signer = await ctx.library.getSigner(ctx.account);\n      const uiProvider = await UiProviderFactory.connect(networkData.uiProvider, signer);\n      const optionsPage = await uiProvider.optionsViewData(await signer.getAddress(), page);\n\n      setHoldings(optionsPage);\n    } finally {\n      setLoading(false);\n    }\n  }, [ctx, page, networkData]);\n  React.useEffect(() => {\n    const run = async () => {\n      await fetchState();\n    };\n    run();\n  }, [fetchState]);\n\n  const rows: Array<OptionsPageData[\"optionPageEntries\"][0]> = [];\n  holdings?.optionPageEntries.forEach(row => {\n    if (row.amount.isZero()) {\n      return;\n    }\n    rows.push(row);\n  });\n  if (networkData == null || ctx.library == null || ctx.account == null) {\n    return null;\n  }\n  return (\n    <Container maxWidth=\"md\">\n      <Paper variant=\"outlined\">\n        <Toolbar>\n          <Typography sx={{ flex: \"1 1 100%\" }} variant=\"h6\" id=\"tableTitle\" component=\"div\">\n            Options\n          </Typography>\n        </Toolbar>\n        <TableContainer>\n          <Table aria-label=\"simple table\">\n            <TableHead>\n              <TableRow>\n                <TableCell align=\"right\">Type</TableCell>\n                <TableCell align=\"right\">Asset</TableCell>\n                <TableCell align=\"right\">Strike</TableCell>\n                <TableCell align=\"right\">Size</TableCell>\n                <TableCell align=\"right\">PNL</TableCell>\n                <TableCell align=\"right\">Expiry</TableCell>\n                <TableCell align=\"right\">State</TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {rows.map((row, i) => (\n                <TableRow key={i} sx={{ \"&:last-child td, &:last-child th\": { border: 0 } }}>\n                  <TableCell align=\"right\">{row.isCall ? <Chip label=\"CALL\" color=\"success\" size=\"small\" /> : <Chip label=\"PUT\" color=\"error\" size=\"small\" />}</TableCell>\n\n                  <TableCell align=\"right\">{networkData.tokensLookup[row.asset].symbol.toUpperCase()}</TableCell>\n                  <TableCell align=\"right\">{formatTokenAmount(row.strike.toBigInt(), 8, 2)}</TableCell>\n                  <TableCell align=\"right\">{formatTokenAmount(row.amount.toBigInt(), networkData.tokensLookup[row.asset].decimals, 2)}</TableCell>\n                  <TableCell align=\"right\">{formatTokenAmount(row.pnl.toBigInt(), 18, 2)}</TableCell>\n                  <TableCell align=\"right\">{row.state === 1 ? ((row.expiry.toNumber() * 1000 - Date.now()) / (1000 * 60 * 60 * 24)).toFixed(2) + \" days\" : \"-\"}</TableCell>\n                  <TableCell align=\"right\">\n                    {row.state === 0 ? (\n                      <Chip size=\"small\" label=\"Unknown\" color=\"error\" />\n                    ) : row.state === 1 ? (\n                      <Button\n                        size=\"small\"\n                        onClick={async () => {\n                          setExercising(true);\n                          if (ctx.library == null || ctx.account == null) {\n                            return;\n                          }\n                          try {\n                            const signer = await ctx.library.getSigner(ctx.account);\n                            const facadeInst = FacadeFactory.connect(networkData.facade, signer);\n\n                            const optionsManagerInst = OptionsManagerFactory.connect(await facadeInst.optionsManager(), signer);\n\n                            const optId = row.optionId.toNumber();\n                            const poolAddr = await optionsManagerInst.tokenPool(optId);\n                            const poolInst = HegicPutFactory.connect(poolAddr, signer);\n                            const r = await poolInst.exercise(optId);\n                            notistack.enqueueSnackbar(\"Exercising option\");\n                            await r.wait(1);\n                            notistack.enqueueSnackbar(\"Option excersiced\");\n                            await fetchState();\n                            s.refreshBalances();\n                            setExercising(true);\n                          } catch (e) {\n                            notistack.enqueueSnackbar(\"Failed to excercise option\");\n                          } finally {\n                            setExercising(false);\n                          }\n                        }}\n                        disabled={exercising || row.pnl.isNegative() || Date.now() > row.expiry.toNumber() * 1000}\n                      >\n                        Excerise\n                      </Button>\n                    ) : row.state === 2 ? (\n                      <Chip size=\"small\" label=\"Exercised\" color=\"success\" />\n                    ) : (\n                      <Chip size=\"small\" label=\"Expired\" />\n                    )}\n                  </TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n          {rows.length !== 0 && (\n            <TablePagination\n              component=\"div\"\n              count={rows.length}\n              rowsPerPage={5}\n              onRowsPerPageChange={() => {}}\n              rowsPerPageOptions={[5]}\n              page={page}\n              onPageChange={handleChangePage}\n            />\n          )}\n        </TableContainer>\n        {loading && (\n          <Box sx={{ height: 300, width: \"100%\" }}>\n            <Typography align=\"center\" sx={{ marginTop: 4 }}>\n              Loading...\n            </Typography>\n          </Box>\n        )}\n        {!loading && rows.length === 0 && (\n          <Stack alignItems=\"center\" justifyContent=\"center\" direction=\"column\" sx={{ height: 300, width: \"100%\" }} spacing={2}>\n            <Typography>No options found</Typography>\n            <Link to=\"/buy\">\n              <Button variant=\"contained\">Buy your first option</Button>\n            </Link>\n          </Stack>\n        )}\n      </Paper>\n    </Container>\n  );\n};\n","import { POLLING_INTERVAL } from \"../dapp/connectors\";\nimport { GlobalState } from \"./GlobalState\";\nimport { Header } from \"./Header\";\nimport { UIBuy } from \"./UIBuy\";\nimport { UILiquidity } from \"./UILiquidity\";\nimport { UIPool } from \"./UIPool\";\nimport { UIHoldings } from \"./UiHoldings\";\nimport { Web3Provider } from \"@ethersproject/providers\";\nimport Box from \"@mui/material/Box\";\nimport Container from \"@mui/material/Container\";\nimport Paper from \"@mui/material/Paper\";\nimport Stack from \"@mui/material/Stack\";\nimport Typography from \"@mui/material/Typography\";\nimport { useWeb3React } from \"@web3-react/core\";\nimport * as React from \"react\";\nimport { Routes, Route } from \"react-router-dom\";\n\nexport function getLibrary(provider: any): Web3Provider {\n  const library = new Web3Provider(provider);\n  library.pollingInterval = POLLING_INTERVAL;\n  return library;\n}\n\nconst SwitchToDevNet = () => {\n  return (\n    <Container sx={{ paddingTop: 2 }} maxWidth=\"sm\">\n      <Paper sx={{ padding: 3 }}>\n        <Stack direction=\"column\" spacing={3}>\n          <Typography>Sorry, this demo is only available on the Avalance Fuji network</Typography>\n        </Stack>\n      </Paper>\n    </Container>\n  );\n};\n\nconst NoPoolsFoundForThisNetwork = () => {\n  return (\n    <Container sx={{ paddingTop: 2 }} maxWidth=\"sm\">\n      <Paper sx={{ padding: 3 }}>\n        <Stack direction=\"column\" spacing={3}>\n          <Typography>Sorry, this dappp only works on</Typography>\n        </Stack>\n      </Paper>\n    </Container>\n  );\n};\n\nconst Navigation = () => {\n  const ctx = useWeb3React<Web3Provider>();\n\n  if (ctx.chainId === 43114) {\n    return <SwitchToDevNet />;\n  }\n\n  if (ctx.chainId === 43113) {\n    return (\n      <Routes>\n        <Route path=\"buy\" element={<UIBuy />} />\n        <Route path=\"holdings\" element={<UIHoldings />} />\n        <Route path=\"pool\" element={<UIPool />} />\n        <Route path=\"liquidity\" element={<UILiquidity />} />\n        <Route index element={<UIBuy />} />\n      </Routes>\n    );\n  }\n\n  return <NoPoolsFoundForThisNetwork />;\n};\n\nexport default function Demo() {\n  return (\n    <GlobalState>\n      <Header />\n\n      <Box sx={{ marginTop: 5 }}>\n        <Navigation />\n      </Box>\n    </GlobalState>\n  );\n}\n","import { ConnectionsModal } from \"./components/ConnectionsModal\";\nimport Demo, { getLibrary } from \"./components/Demo\";\nimport CssBaseline from \"@mui/material/CssBaseline\";\nimport { Web3ReactProvider } from \"@web3-react/core\";\n\nexport function App() {\n  return (\n    <Web3ReactProvider getLibrary={getLibrary}>\n      <CssBaseline />\n      <Demo />\n      <ConnectionsModal />\n    </Web3ReactProvider>\n  );\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import config from \"../package.json\";\nimport { App } from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { SnackbarProvider } from \"notistack\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <style\n      children={`a:link { text-decoration: none; }\na:visited { text-decoration: none; }\na:hover { text-decoration: none; }\na:active { text-decoration: none; }\n`}\n    />\n    <SnackbarProvider\n      maxSnack={4}\n      anchorOrigin={{\n        vertical: \"bottom\",\n        horizontal: \"right\",\n      }}\n      autoHideDuration={10000}\n    >\n      <BrowserRouter basename={(config as any).topRoute}>\n        <App />\n      </BrowserRouter>\n    </SnackbarProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\"),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}